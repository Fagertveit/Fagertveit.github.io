{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///ld37.min.js","webpack:///webpack/bootstrap 4f6de5937f1e902d2b46","webpack:///../gamesaw-ts/src/geometry/geometry.ts","webpack:///../gamesaw-ts/src/gl/shader/program.ts","webpack:///../gamesaw-ts/src/graphics/color.ts","webpack:///../gamesaw-ts/src/utility/resource-manager.ts","webpack:///../gamesaw-ts/src/geometry/point.ts","webpack:///../gamesaw-ts/src/gl/renderer2d/render-call.ts","webpack:///../gamesaw-ts/src/utility/http.ts","webpack:///../gamesaw-ts/src/utility/utility.ts","webpack:///../gamesaw-ts/src/index.ts","webpack:///../gamesaw-ts/src/geometry/index.ts","webpack:///../gamesaw-ts/src/geometry/vector2d.ts","webpack:///../gamesaw-ts/src/gl/renderer2d/framebuffer.ts","webpack:///../gamesaw-ts/src/gl/texture.ts","webpack:///../gamesaw-ts/src/ai/astar/connection.ts","webpack:///../gamesaw-ts/src/ai/astar/graph.ts","webpack:///../gamesaw-ts/src/ai/astar/heuristic.ts","webpack:///../gamesaw-ts/src/ai/astar/node-list.ts","webpack:///../gamesaw-ts/src/ai/astar/node-record.ts","webpack:///../gamesaw-ts/src/ai/astar/node.ts","webpack:///../gamesaw-ts/src/gamesaw.ts","webpack:///../gamesaw-ts/src/geometry/rectangle.ts","webpack:///../gamesaw-ts/src/gl/font/bitmap-font.ts","webpack:///../gamesaw-ts/src/gl/particle/particle.ts","webpack:///../gamesaw-ts/src/gl/tilemap/tilemap-layer.ts","webpack:///../gamesaw-ts/src/gl/tilemap/tileset.ts","webpack:///../gamesaw-ts/src/graphics/surface.abstract.ts","webpack:///../gamesaw-ts/src/graphics/surface2d.ts","webpack:///../gamesaw-ts/src/graphics/surface3d.ts","webpack:///../gamesaw-ts/src/scene-manager.ts","webpack:///../gamesaw-ts/src/scene.ts","webpack:///../gamesaw-ts/src/utility/angle.ts","webpack:///./src/projectile.ts","webpack:///../gamesaw-ts/src/ai/astar/index.ts","webpack:///../gamesaw-ts/src/ai/astar/path-finder.ts","webpack:///../gamesaw-ts/src/ai/index.ts","webpack:///../gamesaw-ts/src/application.ts","webpack:///../gamesaw-ts/src/audio/index.ts","webpack:///../gamesaw-ts/src/audio/sample.ts","webpack:///../gamesaw-ts/src/audio/track.ts","webpack:///../gamesaw-ts/src/geometry/aabb.ts","webpack:///../gamesaw-ts/src/geometry/bezier.ts","webpack:///../gamesaw-ts/src/geometry/bspline.ts","webpack:///../gamesaw-ts/src/geometry/circle.ts","webpack:///../gamesaw-ts/src/geometry/collision.ts","webpack:///../gamesaw-ts/src/geometry/line.ts","webpack:///../gamesaw-ts/src/geometry/polygon.ts","webpack:///../gamesaw-ts/src/geometry/renderer.ts","webpack:///../gamesaw-ts/src/geometry/vector3d.ts","webpack:///../gamesaw-ts/src/gl/animated-sprite.ts","webpack:///../gamesaw-ts/src/gl/font/font-renderer.ts","webpack:///../gamesaw-ts/src/gl/font/font.ts","webpack:///../gamesaw-ts/src/gl/font/index.ts","webpack:///../gamesaw-ts/src/gl/fx/bloom.ts","webpack:///../gamesaw-ts/src/gl/fx/blur.ts","webpack:///../gamesaw-ts/src/gl/fx/index.ts","webpack:///../gamesaw-ts/src/gl/index.ts","webpack:///../gamesaw-ts/src/gl/particle/index.ts","webpack:///../gamesaw-ts/src/gl/particle/particle-emitter.ts","webpack:///../gamesaw-ts/src/gl/particle/particle-renderer.ts","webpack:///../gamesaw-ts/src/gl/particle/particle-system.ts","webpack:///../gamesaw-ts/src/gl/renderer2d/index.ts","webpack:///../gamesaw-ts/src/gl/renderer2d/renderer2d.ts","webpack:///../gamesaw-ts/src/gl/shader/index.ts","webpack:///../gamesaw-ts/src/gl/shader/shader-manager.ts","webpack:///../gamesaw-ts/src/gl/sprite.ts","webpack:///../gamesaw-ts/src/gl/tilemap/index.ts","webpack:///../gamesaw-ts/src/gl/tilemap/tile.ts","webpack:///../gamesaw-ts/src/gl/tilemap/tilemap.ts","webpack:///../gamesaw-ts/src/graphics/index.ts","webpack:///../gamesaw-ts/src/graphics/sprite.ts","webpack:///../gamesaw-ts/src/input/controller.ts","webpack:///../gamesaw-ts/src/input/index.ts","webpack:///../gamesaw-ts/src/input/keyboard.ts","webpack:///../gamesaw-ts/src/input/mouse.ts","webpack:///../gamesaw-ts/src/input/touch.ts","webpack:///../gamesaw-ts/src/utility/index.ts","webpack:///./src/enemy.ts","webpack:///./src/index.ts","webpack:///./src/player.ts","webpack:///./src/powerup.ts","webpack:///./src/weapon.ts"],"names":["root","factory","exports","module","define","amd","ld37","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","GeometricEnum","POINT","CIRCLE","VECTOR2","VECTOR3","LINE","TRIANGLE","RECTANGLE","AABB","POLYGON","BEZIER","BSPLINE","GeometricName","http_1","resource_manager_1","ShaderType","VERTEX","FRAGMENT","Program","gl","fragmentShaderUrl","vertexShaderUrl","http","Http","resourceManager","ResourceManager","getInstance","initShader","prototype","getProgram","program","loadShader","type","shader","vertexShader","compileShader","fragmentShader","shaderSrc","createShader","VERTEX_SHADER","Error","FRAGMENT_SHADER","shaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","useProgram","fsUrl","vsUrl","_this","addOther","get","data","responseText","otherReady","RGBA","RED","GREEN","BLUE","ALPHA","HSLA","HUE","SATURATION","LUMINOSITY","Color","red","green","blue","alpha","rgb","hsl","RGBtoHSL","setRGB","setHSL","hue","saturation","luminosity","HSLtoRGB","setAlpha","getRGB","r","g","b","getHSL","h","s","l","getAlpha","getRGBAFloat","toFloat","cmax","cmin","redc","greenc","bluec","Math","floor","f","q","t","getHex","toString","slice","setHex","hex","result","exec","parseInt","int","toInt","float","interpolate","c1","c2","scale","color","col0","col1","imageAssets","audioAssets","otherAssets","loadedImages","loadedAudio","loadedOther","failedImage","failedAudio","failedOther","_instance","getPercent","ceil","isReady","addImage","imageReady","imageFailed","addAudio","audioReady","audioFailed","otherFailed","geometry_1","Point","x","y","getType","getX","getY","setX","setY","set","transform","RenderCall","flush","add","renderCall","vertices","concat","uvs","indices","forEach","i","push","index","findMaxIndex","numIndices","max","setTexture","texture","async","url","callback","xhr","createXHR","open","onreadystatechange","readyState","status","send","XMLHttpRequest","err","ActiveXObject","capitalize","str","charAt","toUpperCase","PI","EPSILON","Geometry","Graphics","Utility","Input","GL","Audio","AI","scene_1","Scene","application_1","Application","scene_manager_1","SceneManager","vector2d_1","Vector2","vector3d_1","Vector3","point_1","line_1","Line","circle_1","Circle","rectangle_1","Rectangle","aabb_1","polygon_1","Polygon","bezier_1","Bezier","bspline_1","BSpline","renderer_1","Renderer","render","collision_1","Collider","intersects","utility_1","v2","sub","invert","scalar","normalize","length","project","dot","lengthSquared","sqrt","cross","angle","atan2","copy","rotate","radian","cos","sin","rotatePivot","srcX","srcY","FrameBuffer","width","height","init","fbo","createFramebuffer","createTexture","bindTexture","TEXTURE_2D","texImage2D","UNSIGNED_BYTE","texParameteri","TEXTURE_MIN_FILTER","LINEAR","depthBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","framebufferRenderbuffer","DEPTH_ATTACHMENT","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","Texture","ready","load","image","Image","src","addEventListener","event","loadHandler","errorHandler","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","NEAREST","TEXTURE_MAG_FILTER","Connection","srcNode","dstNode","setCost","cost","getCost","setSrcNode","getSrcNode","setDstNode","getDstNode","connection_1","Graph","nodes","setNodes","isValidNode","getBlocked","getNode","node","getConnections","tempConnection","connections","j","Heuristic","euclideanDistance","currentNode","dx","dy","manhattanDistance","abs","NodeList","list","nodeRecord","getSmallest","smallest","current","getEstimatedCost","contains","find","remove","splice","size","NodeRecord","currentCost","estimatedCost","setNode","setConnection","connection","getConnection","setCurrentCost","getCurrentCost","setEstimatedCost","Node","blocked","setBlocked","CONTAINER_ID","pos","BitmapFont","pages","glyphs","Particle","position","direction","velocity","life","dir","vel","update","gravity","wind","growth","delta","isDead","TilemapLayer","encoding","opacity","visible","name","tiles","decode","rawData","atob","bytes","charCodeAt","isVisible","getTile","tileid","row","col","texture_1","render_call_1","Tileset","imageWidth","imageHeight","firstgid","margin","spacing","columns","tileCount","tileWidth","tileHeight","lastgid","renderTile","renderer","addCall","renderTileScale","scaleY","renderTileAngle","gamesaw_1","Surface","createCanvas","container","document","getElementById","canvas","createElement","setAttribute","String","style","appendChild","toDataUrl","toDataURL","__extends","d","__","constructor","hasOwnProperty","Object","create","surface_abstract_1","color_1","Surface2d","_super","clearColor","clear","ctx","getContext","clearRect","save","fillStyle","fillRect","restore","Surface3d","colorFloats","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","preserveDrawingBuffer","application","scenes","activeScene","addScene","undefined","removeScene","getFirstScene","getScene","setActiveScene","scene","surface2d_1","surface3d_1","surfaces","add3dSurface","add2dSurface","degreeToRadian","degree","radianToDegree","gamesaw","Projectile","collider","speed","damage","dead","sprite","Sprite","step","renderScale","radius","graph_1","heuristic_1","node_list_1","node_record_1","node_1","path_finder_1","PathFinder","startRecord","closed","generatePathData","map","indexOf","graph","findPath","startNode","endNode","end","endNodeCost","endNodeRecord","endNodeHeuristic","path","heuristic","AStar","targetFps","active","sceneManager","lastDelta","Date","getTime","start","applicationTimer","window","setInterval","stop","clearInterval","now","lastUpdate","fps","frames","sample_1","Sample","track_1","Track","sample","play","currentTime","pause","seek","time","setSpeed","playbackRate","getSpeed","duration","loop","track","setLoopable","halfWidth","halfHeight","setPosition","startX","startY","endX","endY","controlStart","controlEnd","getPoint","point","u","tt","uu","uuu","ttt","obj0","obj1","index_1","pointLine","pointCircle","pointRectangle","pointAABB","pointPolygon","linePoint","lineCircle","lineRectangle","linePolygon","circleCircle","circleLine","circlePoint","circleRectangle","circleAABB","circlePolygon","rectangleRectangle","rectangleAABB","rectangleLine","rectangleCircle","rectanglePoint","rectanglePolygon","polygonPolygon","polygonLine","polygonCircle","polygonRectangle","polygonPoint","aabbAABB","aabbPoint","aabbCircle","aabbRectangle","v0","v1","len","lineLine","cRadi","x0","y0","x1","y1","transformStart","transformEnd","points","addPoint","removePoint","removeFirst","shift","removeLast","pop","object","context","renderPoint","renderLine","renderAABB","renderRectangle","renderCircle","obj","beginPath","arc","fill","moveTo","lineTo","stroke","strokeRect","z","getZ","setZ","AnimatedSprite","timePerFrame","currentFrame","currentDelta","nextFrame","renderAngle","renderAngleScale","program_1","FontRenderer","renderCalls","resolution","getUniformLocation","colorLocation","getAttribLocation","textureCoordinates","vertexBuffer","createBuffer","indexBuffer","texCoordBuffer","setColor","execute","uniform2f","uniform4f","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","ELEMENT_ARRAY_BUFFER","Uint16Array","drawElements","TRIANGLES","UNSIGNED_SHORT","Align","bitmap_font_1","LEFT","CENTER","RIGHT","Font","configUrl","texturePage","font","base","lineHeight","align","parseConfig","responseXML","xmlConfig","getElementsByTagName","char","common","info","glyphCount","getAttribute","face","italic","charset","unicode","bold","stretchHeight","smooth","antiAliasing","padding","split","outline","scaleWidth","scaleHeight","packed","alphaChannel","redChannel","greenChannel","blueChannel","file","xOffset","yOffset","xAdvance","page","channel","drawString","currentX","stringWidth","calculateWidth","glyph","renderGlyph","font_1","font_renderer_1","framebuffer_1","combineFragmentShader","Bloom","combinationProgram","glowFramebuffer","blendMode","dst","uniform1f","activeTexture","TEXTURE0","TEXTURE1","blurFragmentShader","Blur","blurProgram","horizontalFBO","verticalFBO","texelSize","blurAmount","blurScale","blurStrength","horizontal","uniform2fv","uniform1i","blur_1","bloom_1","Render2d","Shader","Tilemap","FX","sprite_1","animated_sprite_1","particle_1","particle_emitter_1","ParticleEmitter","particle_system_1","ParticleSystem","particle_renderer_1","ParticleRenderer","particles","sizes","constant","blendSrc","blendDst","ONE","setup","maxDirection","minDirection","maxVelocity","minVelocity","maxSize","minSize","maxLife","minLife","angularVelocity","lifeCycle","particlesPerSecond","particlesAtStart","maxDir","minDir","maxVel","minVel","angularVel","JSON","parse","toJson","numParticles","addParticle","currentLife","randomMinMax","min","random","pointSize","sizeBuffer","emitter","drawArrays","POINTS","disableVertexAttribArray","renderer2d_1","Renderer2d","flipY","flip","found","cullFace","FRONT_AND_BACK","shader_manager_1","ShaderManager","programs","angle_1","uv","setUVByPixels","setUV","vec","px","py","vector","renderFBO","tilemap_1","tilemap_layer_1","tileset_1","tile_1","Tile","layers","tilesets","backgroundColor","activeLayer","loadTiledMap","parseTiledMap","json","tilewidth","tileheight","orientation","renderOrder","renderorder","nextObjectId","nextobjectid","backgroundcolor","_i","_a","layer","_b","_c","tileset","imagewidth","imageheight","tilecount","setActiveLayer","getActiveLayer","getContainedTiles","getTileAt","tile","tileData","console","log","tileX","tileY","drawImage","renderSize","renderSegment","segmentX","segmentY","segmentWidth","segmentHeight","renderSegmentSize","Controller","connected","instance","gamepads","navigator","getGamepads","gamepad","setupController","controller","buttons","axes","mapping","mouse_1","Mouse","keyboard_1","Keyboard","Key","touch_1","Touch","controller_1","BACKSPACE","TAB","ENTER","SHIFT","CTRL","ALT","PAUSE","CAPS","ESCAPE","PAGEUP","PAGEDOWN","END","HOME","UP","DOWN","INSERT","DELETE","ZERO","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","Y","X","Z","LEFTSUPER","RIGHTSUPER","SELECT","NUM0","NUM1","NUM2","NUM3","NUM4","NUM5","NUM6","NUM7","NUM8","NUM9","MULTIPLY","ADD","SUBSTRACT","DECIMAL","DIVIDE","F1","F2","F3","F4","F5","F7","F8","F9","F10","F11","F12","NUMLOCK","SCROLLLOCK","SEMICOLON","EQUAL","COMMA","DASH","PERIOD","FORWARDSLASH","GRAVEACCENT","OPENBRACKET","BACKSLASH","CLOSEBRAKET","SINGLEQUOTE","keys","preventDefault","stopPropagation","keyLogger","handleKeydown","handleKeyup","clearKeys","key","keyCode","button","click","handleClick","calculateMousePosition","handleMouseDown","handleMouseUp","clearClicks","pageX","pageY","clientX","body","scrollLeft","documentElement","clientY","scrollTop","offsetLeft","offsetTop","projectile_1","Enemy","health","armor","worth","fireTimeout","msBetweenRounds","projectiles","baseSprite","dirSprite","player","updateMovement","getProjectiles","getCollider","getWorth","doDamage","playerPosition","positionVector","player_1","enemy_1","Game","enemies","splatter","paused","showGameover","showStartGame","killCount","startTimeout","spawns","spawnTimeout","spawnTime","spawnSprites","enemyPoints","enemyTimeout","enemyTime","that","bgCol","mouse","keyboard","backgroundSprite","healthSprite","armorSprite","gameoverSprite","getPsychedSprite","splatterSprite","fontRenderer","Player","updateEnemies","updatePowerupWeaponSpawn","applyWeapon","applyPowerUp","checkProjectileCollision","resetGame","gore","e","renderStatus","healthWidth","maxHealth","armorWidth","maxArmor","getScore","getAmmo","weaponSpawn","weaponType","powerupType","addScore","playerProjectiles","playerCollider","enemyCollider","enemyProjectiles","weapon_1","powerup_1","score","fireCooldown","speedBoost","quadDamage","weapon","Weapon","setWeapon","calculateDirection","handleInput","powerup","isActive","ammo","Powerup","mouseVector","directionVector","fireWeapon","canFire","autoFire","useAmmo","timeout","getRemainingTime","Weapons","melee","startAmmo"],"mappings":"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","file":"ld37.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ld37\"] = factory();\n\telse\n\t\troot[\"ld37\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ld37\"] = factory();\n\telse\n\t\troot[\"ld37\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(78);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t(function (GeometricEnum) {\r\n\t    GeometricEnum[GeometricEnum[\"POINT\"] = 0] = \"POINT\";\r\n\t    GeometricEnum[GeometricEnum[\"CIRCLE\"] = 1] = \"CIRCLE\";\r\n\t    GeometricEnum[GeometricEnum[\"VECTOR2\"] = 2] = \"VECTOR2\";\r\n\t    GeometricEnum[GeometricEnum[\"VECTOR3\"] = 3] = \"VECTOR3\";\r\n\t    GeometricEnum[GeometricEnum[\"LINE\"] = 4] = \"LINE\";\r\n\t    GeometricEnum[GeometricEnum[\"TRIANGLE\"] = 5] = \"TRIANGLE\";\r\n\t    GeometricEnum[GeometricEnum[\"RECTANGLE\"] = 6] = \"RECTANGLE\";\r\n\t    GeometricEnum[GeometricEnum[\"AABB\"] = 7] = \"AABB\";\r\n\t    GeometricEnum[GeometricEnum[\"POLYGON\"] = 8] = \"POLYGON\";\r\n\t    GeometricEnum[GeometricEnum[\"BEZIER\"] = 9] = \"BEZIER\";\r\n\t    GeometricEnum[GeometricEnum[\"BSPLINE\"] = 10] = \"BSPLINE\";\r\n\t})(exports.GeometricEnum || (exports.GeometricEnum = {}));\r\n\tvar GeometricEnum = exports.GeometricEnum;\r\n\t;\r\n\texports.GeometricName = [\r\n\t    'point',\r\n\t    'circle',\r\n\t    'vector2',\r\n\t    'vector3',\r\n\t    'line',\r\n\t    'triangle',\r\n\t    'rectangle',\r\n\t    'aabb',\r\n\t    'polygon',\r\n\t    'bezier',\r\n\t    'bspline'\r\n\t];\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar http_1 = __webpack_require__(7);\r\n\tvar resource_manager_1 = __webpack_require__(4);\r\n\t(function (ShaderType) {\r\n\t    ShaderType[ShaderType[\"VERTEX\"] = 0] = \"VERTEX\";\r\n\t    ShaderType[ShaderType[\"FRAGMENT\"] = 1] = \"FRAGMENT\";\r\n\t})(exports.ShaderType || (exports.ShaderType = {}));\r\n\tvar ShaderType = exports.ShaderType;\r\n\tvar Program = (function () {\r\n\t    function Program(gl, fragmentShaderUrl, vertexShaderUrl) {\r\n\t        this.gl = gl;\r\n\t        this.http = new http_1.Http(false);\r\n\t        this.resourceManager = resource_manager_1.ResourceManager.getInstance();\r\n\t        if (fragmentShaderUrl && vertexShaderUrl) {\r\n\t            this.initShader(fragmentShaderUrl, vertexShaderUrl);\r\n\t        }\r\n\t    }\r\n\t    Program.prototype.getProgram = function () {\r\n\t        return this.program;\r\n\t    };\r\n\t    Program.prototype.loadShader = function (type, shader) {\r\n\t        if (type === ShaderType.VERTEX) {\r\n\t            this.vertexShader = this.compileShader(type, shader);\r\n\t        }\r\n\t        else {\r\n\t            this.fragmentShader = this.compileShader(type, shader);\r\n\t        }\r\n\t    };\r\n\t    Program.prototype.compileShader = function (type, shaderSrc) {\r\n\t        var shader;\r\n\t        if (type === ShaderType.VERTEX) {\r\n\t            shader = this.gl.createShader(this.gl.VERTEX_SHADER);\r\n\t        }\r\n\t        else if (type === ShaderType.FRAGMENT) {\r\n\t            shader = this.gl.createShader(this.gl.FRAGMENT_SHADER);\r\n\t        }\r\n\t        else {\r\n\t            throw new Error('No valid shader type specified.');\r\n\t        }\r\n\t        this.gl.shaderSource(shader, shaderSrc);\r\n\t        this.gl.compileShader(shader);\r\n\t        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\r\n\t            throw new Error(this.gl.getShaderInfoLog(shader));\r\n\t        }\r\n\t        return shader;\r\n\t    };\r\n\t    Program.prototype.createProgram = function () {\r\n\t        this.program = this.gl.createProgram();\r\n\t        this.gl.attachShader(this.program, this.vertexShader);\r\n\t        this.gl.attachShader(this.program, this.fragmentShader);\r\n\t        this.gl.linkProgram(this.program);\r\n\t        if (!this.gl.getProgramParameter(this.program, this.gl.LINK_STATUS)) {\r\n\t            throw new Error('Unable to initialize the shader program.');\r\n\t        }\r\n\t        this.gl.useProgram(this.program);\r\n\t    };\r\n\t    Program.prototype.initShader = function (fsUrl, vsUrl) {\r\n\t        var _this = this;\r\n\t        this.resourceManager.addOther();\r\n\t        this.http.get(fsUrl, function (data) {\r\n\t            _this.loadShader(ShaderType.FRAGMENT, data.responseText);\r\n\t        });\r\n\t        this.http.get(vsUrl, function (data) {\r\n\t            _this.loadShader(ShaderType.VERTEX, data.responseText);\r\n\t        });\r\n\t        this.resourceManager.otherReady();\r\n\t        this.createProgram();\r\n\t    };\r\n\t    return Program;\r\n\t}());\r\n\texports.Program = Program;\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t(function (RGBA) {\r\n\t    RGBA[RGBA[\"RED\"] = 0] = \"RED\";\r\n\t    RGBA[RGBA[\"GREEN\"] = 1] = \"GREEN\";\r\n\t    RGBA[RGBA[\"BLUE\"] = 2] = \"BLUE\";\r\n\t    RGBA[RGBA[\"ALPHA\"] = 3] = \"ALPHA\";\r\n\t})(exports.RGBA || (exports.RGBA = {}));\r\n\tvar RGBA = exports.RGBA;\r\n\t(function (HSLA) {\r\n\t    HSLA[HSLA[\"HUE\"] = 0] = \"HUE\";\r\n\t    HSLA[HSLA[\"SATURATION\"] = 1] = \"SATURATION\";\r\n\t    HSLA[HSLA[\"LUMINOSITY\"] = 2] = \"LUMINOSITY\";\r\n\t    HSLA[HSLA[\"ALPHA\"] = 3] = \"ALPHA\";\r\n\t})(exports.HSLA || (exports.HSLA = {}));\r\n\tvar HSLA = exports.HSLA;\r\n\tvar Color = (function () {\r\n\t    function Color(red, green, blue, alpha) {\r\n\t        this.rgb = [\r\n\t            255,\r\n\t            255,\r\n\t            255\r\n\t        ];\r\n\t        this.hsl = [\r\n\t            360,\r\n\t            100,\r\n\t            100\r\n\t        ];\r\n\t        this.alpha = 1;\r\n\t        if (red && green && blue) {\r\n\t            this.rgb[RGBA.RED] = red;\r\n\t            this.rgb[RGBA.GREEN] = green;\r\n\t            this.rgb[RGBA.BLUE] = blue;\r\n\t            this.RGBtoHSL();\r\n\t        }\r\n\t        if (alpha) {\r\n\t            this.alpha = alpha;\r\n\t        }\r\n\t    }\r\n\t    Color.prototype.setRGB = function (red, green, blue) {\r\n\t        this.rgb[RGBA.RED] = red;\r\n\t        this.rgb[RGBA.GREEN] = green;\r\n\t        this.rgb[RGBA.BLUE] = blue;\r\n\t        this.RGBtoHSL();\r\n\t    };\r\n\t    Color.prototype.setHSL = function (hue, saturation, luminosity) {\r\n\t        this.hsl[HSLA.HUE] = hue;\r\n\t        this.hsl[HSLA.SATURATION] = saturation;\r\n\t        this.hsl[HSLA.LUMINOSITY] = luminosity;\r\n\t        this.HSLtoRGB();\r\n\t    };\r\n\t    Color.prototype.setAlpha = function (alpha) {\r\n\t        this.alpha = alpha;\r\n\t    };\r\n\t    Color.prototype.getRGB = function () {\r\n\t        return { r: this.rgb[RGBA.RED], g: this.rgb[RGBA.GREEN], b: this.rgb[RGBA.BLUE] };\r\n\t    };\r\n\t    Color.prototype.getHSL = function () {\r\n\t        return { h: this.hsl[HSLA.HUE], s: this.hsl[HSLA.SATURATION], l: this.hsl[HSLA.LUMINOSITY] };\r\n\t    };\r\n\t    Color.prototype.getAlpha = function () {\r\n\t        return this.alpha;\r\n\t    };\r\n\t    Color.prototype.getRGBAFloat = function () {\r\n\t        return [this.toFloat(this.rgb[RGBA.RED]), this.toFloat(this.rgb[RGBA.GREEN]), this.toFloat(this.rgb[RGBA.BLUE]), this.alpha];\r\n\t    };\r\n\t    Color.prototype.RGBtoHSL = function () {\r\n\t        var r = this.rgb[RGBA.RED];\r\n\t        var g = this.rgb[RGBA.GREEN];\r\n\t        var b = this.rgb[RGBA.BLUE];\r\n\t        var h;\r\n\t        var s;\r\n\t        var l;\r\n\t        var cmax = (r > g) ? r : g;\r\n\t        if (b > cmax) {\r\n\t            cmax = b;\r\n\t        }\r\n\t        var cmin = (r < g) ? r : g;\r\n\t        if (b < cmin) {\r\n\t            cmin = b;\r\n\t        }\r\n\t        l = cmax / 255.0;\r\n\t        if (cmax !== 0) {\r\n\t            s = (cmax - cmin) / cmax;\r\n\t        }\r\n\t        else {\r\n\t            s = 0;\r\n\t        }\r\n\t        if (s === 0) {\r\n\t            h = 0;\r\n\t        }\r\n\t        else {\r\n\t            var redc = (cmax - r) / (cmax - cmin);\r\n\t            var greenc = (cmax - g) / (cmax - cmin);\r\n\t            var bluec = (cmax - b) / (cmax - cmin);\r\n\t            if (r === cmax) {\r\n\t                h = bluec - greenc;\r\n\t            }\r\n\t            else if (g === cmax) {\r\n\t                h = 2.0 + redc - bluec;\r\n\t            }\r\n\t            else {\r\n\t                h = 4.0 + greenc - redc;\r\n\t            }\r\n\t            h = h / 6.0;\r\n\t            if (h < 0) {\r\n\t                h = h + 1.0;\r\n\t            }\r\n\t        }\r\n\t        this.hsl[HSLA.HUE] = h;\r\n\t        this.hsl[HSLA.SATURATION] = s;\r\n\t        this.hsl[HSLA.LUMINOSITY] = l;\r\n\t    };\r\n\t    Color.prototype.HSLtoRGB = function () {\r\n\t        var r = 0;\r\n\t        var g = 0;\r\n\t        var b = 0;\r\n\t        var hue = this.hsl[HSLA.HUE];\r\n\t        var s = this.hsl[HSLA.SATURATION];\r\n\t        var l = this.hsl[HSLA.LUMINOSITY];\r\n\t        if (this.hsl[HSLA.SATURATION] === 0) {\r\n\t            r = Math.floor(l * 255 + 0.5);\r\n\t            g = Math.floor(l * 255 + 0.5);\r\n\t            b = Math.floor(l * 255 + 0.5);\r\n\t        }\r\n\t        else {\r\n\t            var h = (hue - Math.floor(hue)) * 6.0;\r\n\t            var f = h - Math.floor(h);\r\n\t            var p = l * (1.0 - s);\r\n\t            var q = l * (1.0 - s * f);\r\n\t            var t = l * (1.0 - (s * (1.0 - f)));\r\n\t            switch (Math.floor(h)) {\r\n\t                case 0:\r\n\t                    r = (l * 255.0 + 0.5);\r\n\t                    g = (t * 255.0 + 0.5);\r\n\t                    b = (p * 255.0 + 0.5);\r\n\t                    break;\r\n\t                case 1:\r\n\t                    r = (q * 255.0 + 0.5);\r\n\t                    g = (l * 255.0 + 0.5);\r\n\t                    b = (p * 255.0 + 0.5);\r\n\t                    break;\r\n\t                case 2:\r\n\t                    r = (p * 255.0 + 0.5);\r\n\t                    g = (l * 255.0 + 0.5);\r\n\t                    b = (t * 255.0 + 0.5);\r\n\t                    break;\r\n\t                case 3:\r\n\t                    r = (p * 255.0 + 0.5);\r\n\t                    g = (q * 255.0 + 0.5);\r\n\t                    b = (l * 255.0 + 0.5);\r\n\t                    break;\r\n\t                case 4:\r\n\t                    r = (t * 255.0 + 0.5);\r\n\t                    g = (p * 255.0 + 0.5);\r\n\t                    b = (l * 255.0 + 0.5);\r\n\t                    break;\r\n\t                case 5:\r\n\t                    r = (l * 255.0 + 0.5);\r\n\t                    g = (p * 255.0 + 0.5);\r\n\t                    b = (q * 255.0 + 0.5);\r\n\t                    break;\r\n\t            }\r\n\t        }\r\n\t        this.rgb[RGBA.RED] = Math.floor(r);\r\n\t        this.rgb[RGBA.GREEN] = Math.floor(g);\r\n\t        this.rgb[RGBA.BLUE] = Math.floor(b);\r\n\t    };\r\n\t    Color.prototype.getHex = function () {\r\n\t        return '#' + ((1 << 24) + (this.rgb[RGBA.RED] << 16) + (this.rgb[RGBA.GREEN] << 8) + this.rgb[RGBA.BLUE]).toString(16).slice(1);\r\n\t    };\r\n\t    Color.prototype.setHex = function (hex) {\r\n\t        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\t        this.rgb[RGBA.RED] = parseInt(result[RGBA.RED], 16);\r\n\t        this.rgb[RGBA.GREEN] = parseInt(result[RGBA.GREEN], 16);\r\n\t        this.rgb[RGBA.BLUE] = parseInt(result[RGBA.BLUE], 16);\r\n\t    };\r\n\t    Color.prototype.toFloat = function (int) {\r\n\t        if (int === 0) {\r\n\t            return 0.0;\r\n\t        }\r\n\t        return int / 255;\r\n\t    };\r\n\t    Color.prototype.toInt = function (float) {\r\n\t        return float * 255;\r\n\t    };\r\n\t    Color.prototype.interpolate = function (c1, c2, scale) {\r\n\t        var color = new Color();\r\n\t        var col0 = c1.getRGBAFloat();\r\n\t        var col1 = c2.getRGBAFloat();\r\n\t        color.rgb[RGBA.RED] = this.toInt(col0[RGBA.RED] + (col1[RGBA.RED] - col0[RGBA.RED]) * scale);\r\n\t        color.rgb[RGBA.GREEN] = this.toInt(col0[RGBA.GREEN] + (col1[RGBA.GREEN] - col0[RGBA.GREEN]) * scale);\r\n\t        color.rgb[RGBA.BLUE] = this.toInt(col0[RGBA.BLUE] + (col1[RGBA.BLUE] - col0[RGBA.BLUE]) * scale);\r\n\t        color.alpha = this.toInt(col0[RGBA.ALPHA] + (col1[RGBA.ALPHA] - col0[RGBA.ALPHA]) * scale);\r\n\t        color.RGBtoHSL();\r\n\t        return color;\r\n\t    };\r\n\t    return Color;\r\n\t}());\r\n\texports.Color = Color;\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar ResourceManager = (function () {\r\n\t    function ResourceManager() {\r\n\t        this.imageAssets = 0;\r\n\t        this.audioAssets = 0;\r\n\t        this.otherAssets = 0;\r\n\t        this.loadedImages = 0;\r\n\t        this.loadedAudio = 0;\r\n\t        this.loadedOther = 0;\r\n\t        this.failedImage = 0;\r\n\t        this.failedAudio = 0;\r\n\t        this.failedOther = 0;\r\n\t        if (ResourceManager._instance) {\r\n\t            throw new Error('Error: Instantiation failed, Use ResourceManager.getInstance() instead of new.');\r\n\t        }\r\n\t        ResourceManager._instance = this;\r\n\t    }\r\n\t    ResourceManager.getInstance = function () {\r\n\t        return ResourceManager._instance;\r\n\t    };\r\n\t    ResourceManager.prototype.getPercent = function () {\r\n\t        return Math.ceil((this.loadedImages + this.loadedAudio + this.loadedOther) /\r\n\t            (this.imageAssets + this.audioAssets + this.otherAssets));\r\n\t    };\r\n\t    ResourceManager.prototype.isReady = function () {\r\n\t        return (this.loadedImages + this.loadedAudio + this.loadedOther) ===\r\n\t            (this.imageAssets + this.audioAssets + this.otherAssets);\r\n\t    };\r\n\t    ResourceManager.prototype.addImage = function () {\r\n\t        this.imageAssets += 1;\r\n\t    };\r\n\t    ResourceManager.prototype.imageReady = function () {\r\n\t        this.loadedImages += 1;\r\n\t    };\r\n\t    ResourceManager.prototype.imageFailed = function () {\r\n\t        this.imageAssets -= 1;\r\n\t        this.failedImage += 1;\r\n\t    };\r\n\t    ResourceManager.prototype.addAudio = function () {\r\n\t        this.audioAssets += 1;\r\n\t    };\r\n\t    ResourceManager.prototype.audioReady = function () {\r\n\t        this.loadedAudio += 1;\r\n\t    };\r\n\t    ResourceManager.prototype.audioFailed = function () {\r\n\t        this.audioAssets -= 1;\r\n\t        this.failedAudio += 1;\r\n\t    };\r\n\t    ResourceManager.prototype.addOther = function () {\r\n\t        this.otherAssets += 1;\r\n\t    };\r\n\t    ResourceManager.prototype.otherReady = function () {\r\n\t        this.loadedOther += 1;\r\n\t    };\r\n\t    ResourceManager.prototype.otherFailed = function () {\r\n\t        this.otherAssets -= 1;\r\n\t        this.failedOther += 1;\r\n\t    };\r\n\t    ResourceManager._instance = new ResourceManager();\r\n\t    return ResourceManager;\r\n\t}());\r\n\texports.ResourceManager = ResourceManager;\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar geometry_1 = __webpack_require__(1);\r\n\tvar Point = (function () {\r\n\t    function Point(x, y) {\r\n\t        this.type = geometry_1.GeometricEnum.POINT;\r\n\t        this.x = 0;\r\n\t        this.y = 0;\r\n\t        if (x) {\r\n\t            this.x = x;\r\n\t        }\r\n\t        if (y) {\r\n\t            this.y = y;\r\n\t        }\r\n\t    }\r\n\t    Point.prototype.getType = function () {\r\n\t        return this.type;\r\n\t    };\r\n\t    Point.prototype.getX = function () {\r\n\t        return this.x;\r\n\t    };\r\n\t    Point.prototype.getY = function () {\r\n\t        return this.y;\r\n\t    };\r\n\t    Point.prototype.setX = function (x) {\r\n\t        this.x = x;\r\n\t    };\r\n\t    Point.prototype.setY = function (y) {\r\n\t        this.y = y;\r\n\t    };\r\n\t    Point.prototype.set = function (x, y) {\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t    };\r\n\t    Point.prototype.get = function () {\r\n\t        return this;\r\n\t    };\r\n\t    Point.prototype.transform = function (x, y) {\r\n\t        this.x += x;\r\n\t        this.y += y;\r\n\t    };\r\n\t    return Point;\r\n\t}());\r\n\texports.Point = Point;\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar RenderCall = (function () {\r\n\t    function RenderCall() {\r\n\t        this.flush();\r\n\t    }\r\n\t    RenderCall.prototype.add = function (renderCall) {\r\n\t        var _this = this;\r\n\t        this.vertices = this.vertices.concat(renderCall.vertices);\r\n\t        this.uvs = this.uvs.concat(renderCall.uvs);\r\n\t        renderCall.indices.forEach(function (i) {\r\n\t            _this.indices.push(i + _this.index);\r\n\t        });\r\n\t        this.index += this.findMaxIndex(renderCall.indices);\r\n\t        this.numIndices += renderCall.numIndices;\r\n\t    };\r\n\t    RenderCall.prototype.findMaxIndex = function (indices) {\r\n\t        var max = 0;\r\n\t        indices.forEach(function (i) {\r\n\t            if (i > max) {\r\n\t                max = i;\r\n\t            }\r\n\t        });\r\n\t        max += 1;\r\n\t        return max;\r\n\t    };\r\n\t    RenderCall.prototype.flush = function () {\r\n\t        this.vertices = [];\r\n\t        this.indices = [];\r\n\t        this.uvs = [];\r\n\t        this.index = 0;\r\n\t        this.numIndices = 0;\r\n\t    };\r\n\t    RenderCall.prototype.setTexture = function (texture) {\r\n\t        this.texture = texture;\r\n\t    };\r\n\t    return RenderCall;\r\n\t}());\r\n\texports.RenderCall = RenderCall;\r\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Http = (function () {\r\n\t    function Http(async) {\r\n\t        this.async = false;\r\n\t        if (async) {\r\n\t            this.async = async;\r\n\t        }\r\n\t    }\r\n\t    Http.prototype.get = function (url, callback) {\r\n\t        var xhr = this.createXHR();\r\n\t        if (xhr) {\r\n\t            xhr.open('GET', url, this.async);\r\n\t            xhr.onreadystatechange = function () {\r\n\t                if (xhr.readyState === 4 && xhr.status === 200) {\r\n\t                    callback(xhr);\r\n\t                }\r\n\t            };\r\n\t            xhr.send(null);\r\n\t        }\r\n\t    };\r\n\t    Http.prototype.createXHR = function () {\r\n\t        try {\r\n\t            return new XMLHttpRequest();\r\n\t        }\r\n\t        catch (err) { }\r\n\t        try {\r\n\t            return new ActiveXObject('Msxml2.XMLHTTP.6.0');\r\n\t        }\r\n\t        catch (err) { }\r\n\t        try {\r\n\t            return new ActiveXObject('Msxml2.XMLHTTP.3.0');\r\n\t        }\r\n\t        catch (err) { }\r\n\t        try {\r\n\t            return new ActiveXObject('Msxml2.XMLHTTP');\r\n\t        }\r\n\t        catch (err) { }\r\n\t        try {\r\n\t            return new ActiveXObject('Microsoft.XMLHTTP');\r\n\t        }\r\n\t        catch (err) { }\r\n\t        return null;\r\n\t    };\r\n\t    return Http;\r\n\t}());\r\n\texports.Http = Http;\r\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\texports.PI = Math.PI;\r\n\texports.EPSILON = 0.0000001;\r\n\tfunction capitalize(str) {\r\n\t    return str.charAt(0).toUpperCase() + str.slice(1);\r\n\t}\r\n\texports.capitalize = capitalize;\r\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar Geometry = __webpack_require__(10);\r\n\texports.Geometry = Geometry;\r\n\tvar Graphics = __webpack_require__(69);\r\n\texports.Graphics = Graphics;\r\n\tvar Utility = __webpack_require__(76);\r\n\texports.Utility = Utility;\r\n\tvar Input = __webpack_require__(72);\r\n\texports.Input = Input;\r\n\tvar GL = __webpack_require__(56);\r\n\texports.GL = GL;\r\n\tvar Audio = __webpack_require__(37);\r\n\texports.Audio = Audio;\r\n\tvar AI = __webpack_require__(35);\r\n\texports.AI = AI;\r\n\tvar scene_1 = __webpack_require__(30);\r\n\texports.Scene = scene_1.Scene;\r\n\tvar application_1 = __webpack_require__(36);\r\n\texports.Application = application_1.Application;\r\n\tvar scene_manager_1 = __webpack_require__(29);\r\n\texports.SceneManager = scene_manager_1.SceneManager;\r\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar geometry_1 = __webpack_require__(1);\r\n\texports.GeometricEnum = geometry_1.GeometricEnum;\r\n\texports.GeometricName = geometry_1.GeometricName;\r\n\tvar vector2d_1 = __webpack_require__(11);\r\n\texports.Vector2 = vector2d_1.Vector2;\r\n\tvar vector3d_1 = __webpack_require__(48);\r\n\texports.Vector3 = vector3d_1.Vector3;\r\n\tvar point_1 = __webpack_require__(5);\r\n\texports.Point = point_1.Point;\r\n\tvar line_1 = __webpack_require__(45);\r\n\texports.Line = line_1.Line;\r\n\tvar circle_1 = __webpack_require__(43);\r\n\texports.Circle = circle_1.Circle;\r\n\tvar rectangle_1 = __webpack_require__(21);\r\n\texports.Rectangle = rectangle_1.Rectangle;\r\n\tvar aabb_1 = __webpack_require__(40);\r\n\texports.AABB = aabb_1.AABB;\r\n\tvar polygon_1 = __webpack_require__(46);\r\n\texports.Polygon = polygon_1.Polygon;\r\n\tvar bezier_1 = __webpack_require__(41);\r\n\texports.Bezier = bezier_1.Bezier;\r\n\tvar bspline_1 = __webpack_require__(42);\r\n\texports.BSpline = bspline_1.BSpline;\r\n\tvar renderer_1 = __webpack_require__(47);\r\n\texports.Renderer = renderer_1.Renderer;\r\n\texports.render = renderer_1.render;\r\n\tvar collision_1 = __webpack_require__(44);\r\n\texports.Collider = collision_1.Collider;\r\n\texports.intersects = collision_1.intersects;\r\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar geometry_1 = __webpack_require__(1);\r\n\tvar utility_1 = __webpack_require__(8);\r\n\tvar Vector2 = (function () {\r\n\t    function Vector2(x, y) {\r\n\t        this.type = geometry_1.GeometricEnum.VECTOR2;\r\n\t        this.x = 0.0;\r\n\t        this.y = 0.0;\r\n\t        if (x) {\r\n\t            this.x = x;\r\n\t        }\r\n\t        if (y) {\r\n\t            this.y = y;\r\n\t        }\r\n\t    }\r\n\t    Vector2.prototype.getType = function () {\r\n\t        return this.type;\r\n\t    };\r\n\t    Vector2.prototype.getX = function () {\r\n\t        return this.x;\r\n\t    };\r\n\t    Vector2.prototype.getY = function () {\r\n\t        return this.y;\r\n\t    };\r\n\t    Vector2.prototype.setX = function (x) {\r\n\t        this.x = x;\r\n\t    };\r\n\t    Vector2.prototype.setY = function (y) {\r\n\t        this.y = y;\r\n\t    };\r\n\t    Vector2.prototype.set = function (x, y) {\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t    };\r\n\t    Vector2.prototype.get = function () {\r\n\t        return this;\r\n\t    };\r\n\t    Vector2.prototype.add = function (v2) {\r\n\t        return new Vector2(this.x + v2.x, this.y + v2.y);\r\n\t    };\r\n\t    Vector2.prototype.sub = function (v2) {\r\n\t        return new Vector2(this.x - v2.x, this.y - v2.y);\r\n\t    };\r\n\t    Vector2.prototype.invert = function () {\r\n\t        return new Vector2(-this.x, -this.y);\r\n\t    };\r\n\t    Vector2.prototype.scale = function (scalar) {\r\n\t        return new Vector2(this.x * scalar, this.y * scalar);\r\n\t    };\r\n\t    Vector2.prototype.normalize = function () {\r\n\t        var length = this.length();\r\n\t        if (length === 0) {\r\n\t            return new Vector2(0.0, 0.0);\r\n\t        }\r\n\t        return new Vector2(this.x / length, this.y / length);\r\n\t    };\r\n\t    Vector2.prototype.project = function (v2) {\r\n\t        var dot = this.dot(v2);\r\n\t        var length = this.lengthSquared();\r\n\t        return new Vector2((dot / length) * this.x, (dot / length) * this.y);\r\n\t    };\r\n\t    Vector2.prototype.length = function () {\r\n\t        return Math.sqrt(this.lengthSquared());\r\n\t    };\r\n\t    Vector2.prototype.lengthSquared = function () {\r\n\t        return (this.x * this.x) + (this.y * this.y);\r\n\t    };\r\n\t    Vector2.prototype.dot = function (v2) {\r\n\t        return ((this.x * v2.x) + (this.y * v2.y));\r\n\t    };\r\n\t    Vector2.prototype.cross = function (v2) {\r\n\t        return ((this.x * v2.y) - (this.y * v2.x));\r\n\t    };\r\n\t    Vector2.prototype.angle = function () {\r\n\t        return Math.atan2(this.x, -this.y);\r\n\t    };\r\n\t    Vector2.prototype.copy = function () {\r\n\t        return new Vector2(this.x, this.y);\r\n\t    };\r\n\t    Vector2.prototype.rotate = function (radian) {\r\n\t        if (this.x === 0) {\r\n\t            this.x += utility_1.EPSILON;\r\n\t        }\r\n\t        if (this.y === 0) {\r\n\t            this.y += utility_1.EPSILON;\r\n\t        }\r\n\t        return new Vector2(Math.cos(radian) * this.x - Math.sin(radian) * this.y, Math.sin(radian) * this.x + Math.cos(radian) * this.y);\r\n\t    };\r\n\t    Vector2.prototype.rotatePivot = function (x, y, radian) {\r\n\t        if (this.x === 0) {\r\n\t            this.x += utility_1.EPSILON;\r\n\t        }\r\n\t        if (this.y === 0) {\r\n\t            this.y += utility_1.EPSILON;\r\n\t        }\r\n\t        var srcX = this.x;\r\n\t        var srcY = this.y;\r\n\t        srcX -= x;\r\n\t        srcY -= y;\r\n\t        return new Vector2((Math.cos(radian) * srcX - Math.sin(radian) * srcY) + x, (Math.sin(radian) * srcX + Math.cos(radian) * srcY) + y);\r\n\t    };\r\n\t    return Vector2;\r\n\t}());\r\n\texports.Vector2 = Vector2;\r\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar FrameBuffer = (function () {\r\n\t    function FrameBuffer(gl, width, height) {\r\n\t        this.gl = gl;\r\n\t        this.width = width;\r\n\t        this.height = height;\r\n\t        this.init();\r\n\t    }\r\n\t    FrameBuffer.prototype.init = function () {\r\n\t        var gl = this.gl;\r\n\t        this.fbo = gl.createFramebuffer();\r\n\t        if (!this.fbo) {\r\n\t            throw new Error('Failed to create FBO.');\r\n\t        }\r\n\t        this.texture = gl.createTexture();\r\n\t        if (!this.texture) {\r\n\t            throw new Error('Failed to create FBO texture.');\r\n\t        }\r\n\t        gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n\t        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.width, this.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n\t        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n\t        var depthBuffer = gl.createRenderbuffer();\r\n\t        if (!depthBuffer) {\r\n\t            throw new Error('Failed to create depth buffer.');\r\n\t        }\r\n\t        gl.bindRenderbuffer(gl.RENDERBUFFER, depthBuffer);\r\n\t        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, this.width, this.height);\r\n\t        gl.bindFramebuffer(gl.FRAMEBUFFER, this.fbo);\r\n\t        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture, 0);\r\n\t        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, depthBuffer);\r\n\t        var err = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n\t        if (gl.FRAMEBUFFER_COMPLETE !== err) {\r\n\t            throw new Error('Framebuffer object is incomplete: ' + err.toString());\r\n\t        }\r\n\t        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\t        gl.bindTexture(gl.TEXTURE_2D, null);\r\n\t        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n\t    };\r\n\t    return FrameBuffer;\r\n\t}());\r\n\texports.FrameBuffer = FrameBuffer;\r\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar resource_manager_1 = __webpack_require__(4);\r\n\tvar Texture = (function () {\r\n\t    function Texture(gl, url) {\r\n\t        this.loaded = false;\r\n\t        this.ready = false;\r\n\t        this.gl = gl;\r\n\t        this.resourceManager = resource_manager_1.ResourceManager.getInstance();\r\n\t        if (url) {\r\n\t            this.url;\r\n\t            this.load(url);\r\n\t        }\r\n\t    }\r\n\t    Texture.prototype.load = function (url) {\r\n\t        var _this = this;\r\n\t        var gl = this.gl;\r\n\t        this.resourceManager.addImage();\r\n\t        this.image = new Image();\r\n\t        this.image.src = url;\r\n\t        this.texture = gl.createTexture();\r\n\t        this.image.addEventListener('load', function (event) {\r\n\t            _this.loadHandler(event);\r\n\t        });\r\n\t        this.image.addEventListener('error', _this.errorHandler);\r\n\t    };\r\n\t    Texture.prototype.init = function () {\r\n\t        var gl = this.gl;\r\n\t        gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n\t        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.image);\r\n\t        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n\t        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\t        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n\t        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n\t        gl.bindTexture(gl.TEXTURE_2D, null);\r\n\t        this.ready = true;\r\n\t    };\r\n\t    Texture.prototype.errorHandler = function (event) {\r\n\t        if (this.resourceManager) {\r\n\t            this.resourceManager.imageFailed();\r\n\t        }\r\n\t        throw new Error('Failed to load sprite.');\r\n\t    };\r\n\t    Texture.prototype.loadHandler = function (event) {\r\n\t        this.loaded = true;\r\n\t        this.width = this.image.width;\r\n\t        this.height = this.image.height;\r\n\t        this.resourceManager.imageReady();\r\n\t        this.init();\r\n\t    };\r\n\t    return Texture;\r\n\t}());\r\n\texports.Texture = Texture;\r\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Connection = (function () {\r\n\t    function Connection(srcNode, dstNode) {\r\n\t        if (srcNode) {\r\n\t            this.srcNode = srcNode;\r\n\t        }\r\n\t        if (dstNode) {\r\n\t            this.dstNode = dstNode;\r\n\t        }\r\n\t    }\r\n\t    Connection.prototype.setCost = function (cost) {\r\n\t        this.cost = cost;\r\n\t    };\r\n\t    Connection.prototype.getCost = function () {\r\n\t        return this.cost;\r\n\t    };\r\n\t    Connection.prototype.setSrcNode = function (srcNode) {\r\n\t        this.srcNode = srcNode;\r\n\t    };\r\n\t    Connection.prototype.getSrcNode = function () {\r\n\t        return this.srcNode;\r\n\t    };\r\n\t    Connection.prototype.setDstNode = function (dstNode) {\r\n\t        this.dstNode = dstNode;\r\n\t    };\r\n\t    Connection.prototype.getDstNode = function () {\r\n\t        return this.dstNode;\r\n\t    };\r\n\t    return Connection;\r\n\t}());\r\n\texports.Connection = Connection;\r\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar connection_1 = __webpack_require__(14);\r\n\tvar Graph = (function () {\r\n\t    function Graph(nodes) {\r\n\t        if (nodes) {\r\n\t            this.nodes = nodes;\r\n\t        }\r\n\t    }\r\n\t    Graph.prototype.setNodes = function (nodes) {\r\n\t        this.nodes = nodes;\r\n\t    };\r\n\t    Graph.prototype.isValidNode = function (x, y) {\r\n\t        if (x < 0 || y < 0 || y >= this.nodes.length || x >= this.nodes[0].length) {\r\n\t            return false;\r\n\t        }\r\n\t        else if (this.nodes[y][x].getBlocked()) {\r\n\t            return false;\r\n\t        }\r\n\t        return true;\r\n\t    };\r\n\t    Graph.prototype.getNode = function (node) {\r\n\t        return this.nodes[node.y][node.x];\r\n\t    };\r\n\t    Graph.prototype.getConnections = function (srcNode) {\r\n\t        var connections = [];\r\n\t        var tempConnection;\r\n\t        // TODO: Need to rewrite this to handle the 1D tilemap structure of tiled format.\r\n\t        for (var i = -1; i < 2; i += 1) {\r\n\t            for (var j = -1; j < 2; j += 1) {\r\n\t                if (i === 0 && j === 0) {\r\n\t                    continue;\r\n\t                }\r\n\t                else if (this.isValidNode(srcNode.x + i, srcNode.y + j)) {\r\n\t                    tempConnection = new connection_1.Connection();\r\n\t                    tempConnection.setSrcNode(srcNode);\r\n\t                    tempConnection.setDstNode(this.nodes[srcNode.y + j][srcNode.x + i]);\r\n\t                    tempConnection.setCost(1);\r\n\t                    connections.push(tempConnection);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return connections;\r\n\t    };\r\n\t    return Graph;\r\n\t}());\r\n\texports.Graph = Graph;\r\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Heuristic = (function () {\r\n\t    function Heuristic(dstNode) {\r\n\t        this.dstNode = dstNode;\r\n\t    }\r\n\t    Heuristic.prototype.euclideanDistance = function (currentNode) {\r\n\t        var dx = currentNode.x - this.dstNode.x;\r\n\t        var dy = currentNode.y - this.dstNode.y;\r\n\t        return Math.sqrt((dx * dx) + (dy * dy));\r\n\t    };\r\n\t    Heuristic.prototype.manhattanDistance = function (currentNode) {\r\n\t        var dx = Math.abs(this.dstNode.x - currentNode.x);\r\n\t        var dy = Math.abs(this.dstNode.y - currentNode.y);\r\n\t        return dx + dy;\r\n\t    };\r\n\t    return Heuristic;\r\n\t}());\r\n\texports.Heuristic = Heuristic;\r\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar NodeList = (function () {\r\n\t    function NodeList() {\r\n\t        this.list = [];\r\n\t    }\r\n\t    NodeList.prototype.add = function (nodeRecord) {\r\n\t        this.list.push(nodeRecord);\r\n\t    };\r\n\t    NodeList.prototype.get = function (index) {\r\n\t        return this.list[index];\r\n\t    };\r\n\t    NodeList.prototype.getSmallest = function () {\r\n\t        var smallest;\r\n\t        var current;\r\n\t        smallest = this.list[0];\r\n\t        for (var i = 0; i < this.list.length; i += 1) {\r\n\t            current = this.list[i];\r\n\t            if (current.getEstimatedCost() < smallest.getEstimatedCost()) {\r\n\t                smallest = current;\r\n\t            }\r\n\t        }\r\n\t        return smallest;\r\n\t    };\r\n\t    NodeList.prototype.contains = function (node) {\r\n\t        var current;\r\n\t        for (var i = 0; i < this.list.length; i += 1) {\r\n\t            current = this.list[i].getNode();\r\n\t            if (current.x === node.x && current.y === node.y) {\r\n\t                return true;\r\n\t            }\r\n\t        }\r\n\t        return false;\r\n\t    };\r\n\t    NodeList.prototype.find = function (node) {\r\n\t        var current;\r\n\t        for (var i = 0; i < this.list.length; i += 1) {\r\n\t            current = this.list[i].getNode();\r\n\t            if (current.x === node.x && current.y === node.y) {\r\n\t                return this.list[i];\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    NodeList.prototype.remove = function (node) {\r\n\t        var current;\r\n\t        for (var i = 0; i < this.list.length; i += 1) {\r\n\t            current = this.list[i].getNode();\r\n\t            if (current.x === node.x && current.y === node.y) {\r\n\t                this.list.splice(i, 1);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    NodeList.prototype.size = function () {\r\n\t        return this.list.length;\r\n\t    };\r\n\t    return NodeList;\r\n\t}());\r\n\texports.NodeList = NodeList;\r\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar NodeRecord = (function () {\r\n\t    function NodeRecord() {\r\n\t        this.currentCost = 0;\r\n\t        this.estimatedCost = 0;\r\n\t        this.currentCost = 0;\r\n\t        this.estimatedCost = 0;\r\n\t    }\r\n\t    NodeRecord.prototype.setNode = function (node) {\r\n\t        this.node = node;\r\n\t    };\r\n\t    NodeRecord.prototype.getNode = function () {\r\n\t        return this.node;\r\n\t    };\r\n\t    NodeRecord.prototype.setConnection = function (connection) {\r\n\t        this.connection = connection;\r\n\t    };\r\n\t    NodeRecord.prototype.getConnection = function () {\r\n\t        return this.connection;\r\n\t    };\r\n\t    NodeRecord.prototype.setCurrentCost = function (cost) {\r\n\t        this.currentCost = cost;\r\n\t    };\r\n\t    NodeRecord.prototype.getCurrentCost = function () {\r\n\t        return this.currentCost;\r\n\t    };\r\n\t    NodeRecord.prototype.setEstimatedCost = function (estimatedCost) {\r\n\t        this.estimatedCost = estimatedCost;\r\n\t    };\r\n\t    NodeRecord.prototype.getEstimatedCost = function () {\r\n\t        return this.estimatedCost;\r\n\t    };\r\n\t    return NodeRecord;\r\n\t}());\r\n\texports.NodeRecord = NodeRecord;\r\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Node = (function () {\r\n\t    function Node(x, y) {\r\n\t        this.blocked = false;\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t    }\r\n\t    Node.prototype.setBlocked = function (blocked) {\r\n\t        this.blocked = blocked;\r\n\t    };\r\n\t    Node.prototype.getBlocked = function () {\r\n\t        return this.blocked;\r\n\t    };\r\n\t    return Node;\r\n\t}());\r\n\texports.Node = Node;\r\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\texports.CONTAINER_ID = 'gamesaw-container';\r\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar geometry_1 = __webpack_require__(1);\r\n\tvar point_1 = __webpack_require__(5);\r\n\tvar Rectangle = (function () {\r\n\t    function Rectangle(x, y, width, height) {\r\n\t        this.type = geometry_1.GeometricEnum.RECTANGLE;\r\n\t        this.pos = new point_1.Point(0, 0);\r\n\t        this.width = 1;\r\n\t        this.height = 1;\r\n\t        if (x) {\r\n\t            this.pos.x = x;\r\n\t        }\r\n\t        if (y) {\r\n\t            this.pos.y = y;\r\n\t        }\r\n\t        if (width) {\r\n\t            this.width = width;\r\n\t        }\r\n\t        if (height) {\r\n\t            this.height = height;\r\n\t        }\r\n\t    }\r\n\t    return Rectangle;\r\n\t}());\r\n\texports.Rectangle = Rectangle;\r\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar BitmapFont = (function () {\r\n\t    function BitmapFont() {\r\n\t        this.pages = {};\r\n\t        this.glyphs = {};\r\n\t    }\r\n\t    return BitmapFont;\r\n\t}());\r\n\texports.BitmapFont = BitmapFont;\r\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Particle = (function () {\r\n\t    function Particle(position, direction, size, velocity, life, alpha) {\r\n\t        this.pos = position;\r\n\t        this.dir = direction;\r\n\t        this.size = size;\r\n\t        this.vel = velocity;\r\n\t        this.life = life;\r\n\t        this.alpha = alpha;\r\n\t    }\r\n\t    Particle.prototype.update = function (gravity, wind, growth, delta) {\r\n\t        this.life -= delta;\r\n\t        this.size += growth;\r\n\t        this.dir.y += gravity;\r\n\t        this.dir.x += wind;\r\n\t        this.pos.x += (this.dir.x * this.vel);\r\n\t        this.pos.y += (this.dir.y * this.vel);\r\n\t    };\r\n\t    Particle.prototype.isDead = function () {\r\n\t        return this.life < 0;\r\n\t    };\r\n\t    return Particle;\r\n\t}());\r\n\texports.Particle = Particle;\r\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar TilemapLayer = (function () {\r\n\t    function TilemapLayer(data, encoding, width, height, x, y, opacity, visible, name, type) {\r\n\t        this.tiles = [];\r\n\t        this.data = data;\r\n\t        this.encoding = encoding;\r\n\t        this.height = height;\r\n\t        this.width = width;\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t        this.opacity = opacity;\r\n\t        this.visible = visible;\r\n\t        this.name = name;\r\n\t        this.type = type;\r\n\t        this.decode();\r\n\t    }\r\n\t    TilemapLayer.prototype.decode = function () {\r\n\t        var rawData = atob(this.data);\r\n\t        var bytes = 4;\r\n\t        var length = rawData.length / bytes;\r\n\t        for (var i = 0; i < length; i += 1) {\r\n\t            this.tiles[i] = 0;\r\n\t            for (var j = bytes - 1; j >= 0; j -= 1) {\r\n\t                this.tiles[i] += rawData.charCodeAt((i * bytes) + j) << (j << 3);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    TilemapLayer.prototype.isVisible = function () {\r\n\t        return this.visible;\r\n\t    };\r\n\t    TilemapLayer.prototype.getTile = function (i) {\r\n\t        return {\r\n\t            tileid: this.tiles[i],\r\n\t            row: Math.floor(i / this.width),\r\n\t            col: i % this.width\r\n\t        };\r\n\t    };\r\n\t    return TilemapLayer;\r\n\t}());\r\n\texports.TilemapLayer = TilemapLayer;\r\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar texture_1 = __webpack_require__(13);\r\n\tvar render_call_1 = __webpack_require__(6);\r\n\tvar Tileset = (function () {\r\n\t    function Tileset(gl, name, image, imageWidth, imageHeight, firstgid, margin, spacing, columns, tileCount, tileWidth, tileHeight) {\r\n\t        this.gl = gl;\r\n\t        this.name = name;\r\n\t        this.image = image;\r\n\t        this.imageWidth = imageWidth;\r\n\t        this.imageHeight = imageHeight;\r\n\t        this.firstgid = firstgid;\r\n\t        this.margin = margin;\r\n\t        this.spacing = spacing;\r\n\t        this.columns = columns;\r\n\t        this.tileCount = tileCount;\r\n\t        this.tileWidth = tileWidth;\r\n\t        this.tileHeight = tileHeight;\r\n\t        this.lastgid = this.firstgid + this.tileCount - 1;\r\n\t        this.texture = new texture_1.Texture(this.gl, this.image);\r\n\t    }\r\n\t    Tileset.prototype.renderTile = function (renderer, x, y, id) {\r\n\t        var row = Math.floor((id - this.firstgid) / this.columns);\r\n\t        var col = (id - this.firstgid) % this.columns;\r\n\t        var uvs = [\r\n\t            ((col * this.tileWidth) / this.imageWidth),\r\n\t            ((row * this.tileHeight) / this.imageHeight),\r\n\t            (((col * this.tileWidth) + this.tileWidth) / this.imageWidth),\r\n\t            (((row * this.tileHeight) + this.tileHeight) / this.imageHeight)\r\n\t        ];\r\n\t        var renderCall = new render_call_1.RenderCall();\r\n\t        renderCall.texture = this.texture.texture;\r\n\t        renderCall.vertices = [x, y,\r\n\t            x + this.tileWidth, y,\r\n\t            x, y + this.tileHeight,\r\n\t            x + this.tileWidth, y + this.tileHeight];\r\n\t        renderCall.uvs = [uvs[0], uvs[1], uvs[2], uvs[1], uvs[0], uvs[3], uvs[2], uvs[3]];\r\n\t        renderCall.indices = [0, 1, 2, 1, 2, 3];\r\n\t        renderCall.numIndices = 6;\r\n\t        renderer.addCall(renderCall);\r\n\t    };\r\n\t    Tileset.prototype.renderTileScale = function (renderer, x, y, id, scale, scaleY) {\r\n\t        var row = Math.floor((id - this.firstgid) / this.columns);\r\n\t        var col = (id - this.firstgid) % this.columns;\r\n\t        var uvs = [\r\n\t            ((col * this.tileWidth) / this.imageWidth),\r\n\t            ((row * this.tileHeight) / this.imageHeight),\r\n\t            (((col * this.tileWidth) + this.tileWidth) / this.imageWidth),\r\n\t            (((row * this.tileHeight) + this.tileHeight) / this.imageHeight)\r\n\t        ];\r\n\t        var renderCall = new render_call_1.RenderCall();\r\n\t        renderCall.texture = this.texture.texture;\r\n\t        renderCall.vertices = [x, y,\r\n\t            x + this.tileWidth * scale, y,\r\n\t            x, y + this.tileHeight * scale,\r\n\t            x + this.tileWidth * scale, y + this.tileHeight * scale];\r\n\t        renderCall.uvs = [uvs[0], uvs[1], uvs[2], uvs[1], uvs[0], uvs[3], uvs[2], uvs[3]];\r\n\t        renderCall.indices = [0, 1, 2, 1, 2, 3];\r\n\t        renderCall.numIndices = 6;\r\n\t        renderer.addCall(renderCall);\r\n\t    };\r\n\t    Tileset.prototype.renderTileAngle = function (renderer, x, y, id, angle, scale, scaleY) {\r\n\t    };\r\n\t    return Tileset;\r\n\t}());\r\n\texports.Tileset = Tileset;\r\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar gamesaw_1 = __webpack_require__(20);\r\n\tvar Surface = (function () {\r\n\t    function Surface() {\r\n\t    }\r\n\t    Surface.prototype.createCanvas = function () {\r\n\t        var container = document.getElementById(gamesaw_1.CONTAINER_ID);\r\n\t        this.canvas = document.createElement('canvas');\r\n\t        this.canvas.setAttribute('id', this.id);\r\n\t        this.canvas.setAttribute('width', String(this.width));\r\n\t        this.canvas.setAttribute('height', String(this.height));\r\n\t        this.canvas.style.position = 'absolute';\r\n\t        container.appendChild(this.canvas);\r\n\t    };\r\n\t    ;\r\n\t    Surface.prototype.toDataUrl = function () {\r\n\t        return this.canvas.toDataURL('image/png');\r\n\t    };\r\n\t    return Surface;\r\n\t}());\r\n\texports.Surface = Surface;\r\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar surface_abstract_1 = __webpack_require__(26);\r\n\tvar color_1 = __webpack_require__(3);\r\n\tvar Surface2d = (function (_super) {\r\n\t    __extends(Surface2d, _super);\r\n\t    function Surface2d(width, height, id) {\r\n\t        _super.call(this);\r\n\t        this.width = 640;\r\n\t        this.height = 480;\r\n\t        this.id = 'canvas-2d';\r\n\t        this.clearColor = new color_1.Color(0, 0, 0, 1);\r\n\t        this.width = width;\r\n\t        this.height = height;\r\n\t        this.id = id;\r\n\t        this.createCanvas();\r\n\t    }\r\n\t    Surface2d.prototype.clear = function (color) {\r\n\t        if (color) {\r\n\t            this.clearColor = color;\r\n\t        }\r\n\t        var ctx = this.getContext();\r\n\t        ctx.clearRect(0, 0, this.width, this.height);\r\n\t        if (color) {\r\n\t            ctx.save();\r\n\t            ctx.fillStyle = color.getHex();\r\n\t            ctx.fillRect(0, 0, this.width, this.height);\r\n\t            ctx.restore();\r\n\t        }\r\n\t    };\r\n\t    Surface2d.prototype.getContext = function () {\r\n\t        return this.canvas.getContext('2d');\r\n\t    };\r\n\t    return Surface2d;\r\n\t}(surface_abstract_1.Surface));\r\n\texports.Surface2d = Surface2d;\r\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar surface_abstract_1 = __webpack_require__(26);\r\n\tvar color_1 = __webpack_require__(3);\r\n\tvar Surface3d = (function (_super) {\r\n\t    __extends(Surface3d, _super);\r\n\t    function Surface3d(width, height, id) {\r\n\t        _super.call(this);\r\n\t        this.clearColor = new color_1.Color(0, 0, 0, 1);\r\n\t        this.width = width;\r\n\t        this.height = height;\r\n\t        this.id = id;\r\n\t        this.createCanvas();\r\n\t        this.init();\r\n\t    }\r\n\t    Surface3d.prototype.init = function () {\r\n\t        this.gl = this.getContext();\r\n\t        var colorFloats = this.clearColor.getRGBAFloat();\r\n\t        this.gl.clearColor(colorFloats[0], colorFloats[1], colorFloats[2], colorFloats[3]);\r\n\t    };\r\n\t    Surface3d.prototype.clear = function (color) {\r\n\t        var gl = this.gl;\r\n\t        if (color) {\r\n\t            this.clearColor = color;\r\n\t            var colorFloats = this.clearColor.getRGBAFloat();\r\n\t            gl.clearColor(colorFloats[0], colorFloats[1], colorFloats[2], colorFloats[3]);\r\n\t        }\r\n\t        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\t        gl.enable(gl.BLEND);\r\n\t        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n\t    };\r\n\t    Surface3d.prototype.getContext = function () {\r\n\t        return this.canvas.getContext('webgl', { preserveDrawingBuffer: true }) ||\r\n\t            this.canvas.getContext('experimental-webgl', { preserveDrawingBuffer: true });\r\n\t    };\r\n\t    return Surface3d;\r\n\t}(surface_abstract_1.Surface));\r\n\texports.Surface3d = Surface3d;\r\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar scene_1 = __webpack_require__(30);\r\n\tvar SceneManager = (function () {\r\n\t    function SceneManager(application) {\r\n\t        this.scenes = {};\r\n\t        this.application = application;\r\n\t    }\r\n\t    SceneManager.prototype.update = function (delta) {\r\n\t        if (this.activeScene) {\r\n\t            this.scenes[this.activeScene].update(delta);\r\n\t            this.scenes[this.activeScene].render(delta);\r\n\t        }\r\n\t    };\r\n\t    SceneManager.prototype.addScene = function (id) {\r\n\t        if (this.scenes[id] !== undefined) {\r\n\t            throw new Error('Scene with id: ' + id + ' already exists.');\r\n\t        }\r\n\t        this.scenes[id] = new scene_1.Scene(this.application);\r\n\t        if (!this.activeScene) {\r\n\t            this.activeScene = id;\r\n\t        }\r\n\t        return this.scenes[id];\r\n\t    };\r\n\t    SceneManager.prototype.removeScene = function (id) {\r\n\t        delete this.scenes[id];\r\n\t        if (this.activeScene === id) {\r\n\t            this.activeScene = this.getFirstScene();\r\n\t        }\r\n\t    };\r\n\t    SceneManager.prototype.getScene = function (id) {\r\n\t        if (this.scenes[id] === undefined) {\r\n\t            throw new Error('Scene with id: ' + id + ' is undefined.');\r\n\t        }\r\n\t        return this.scenes[id];\r\n\t    };\r\n\t    SceneManager.prototype.setActiveScene = function (id) {\r\n\t        if (this.scenes[id] === undefined) {\r\n\t            throw new Error('Scene with id: ' + id + ' is undefined.');\r\n\t        }\r\n\t        this.activeScene = id;\r\n\t    };\r\n\t    SceneManager.prototype.getFirstScene = function () {\r\n\t        for (var scene in this.scenes) {\r\n\t            return scene;\r\n\t        }\r\n\t    };\r\n\t    return SceneManager;\r\n\t}());\r\n\texports.SceneManager = SceneManager;\r\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar surface2d_1 = __webpack_require__(27);\r\n\tvar surface3d_1 = __webpack_require__(28);\r\n\tvar Scene = (function () {\r\n\t    function Scene(application) {\r\n\t        this.surfaces = {};\r\n\t        this.application = application;\r\n\t    }\r\n\t    Scene.prototype.add3dSurface = function (id) {\r\n\t        this.surfaces[id] = new surface3d_1.Surface3d(this.application.width, this.application.height, id);\r\n\t    };\r\n\t    Scene.prototype.add2dSurface = function (id) {\r\n\t        this.surfaces[id] = new surface2d_1.Surface2d(this.application.width, this.application.height, id);\r\n\t    };\r\n\t    Scene.prototype.getContext = function (id) {\r\n\t        return this.surfaces[id].getContext();\r\n\t    };\r\n\t    Scene.prototype.clear = function (id, color) {\r\n\t        if (color) {\r\n\t            this.surfaces[id].clear(color);\r\n\t        }\r\n\t        else {\r\n\t            this.surfaces[id].clear();\r\n\t        }\r\n\t    };\r\n\t    return Scene;\r\n\t}());\r\n\texports.Scene = Scene;\r\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar utility_1 = __webpack_require__(8);\r\n\tfunction degreeToRadian(degree) {\r\n\t    return degree * (utility_1.PI / 180);\r\n\t}\r\n\texports.degreeToRadian = degreeToRadian;\r\n\tfunction radianToDegree(radian) {\r\n\t    return radian * (180 / utility_1.PI);\r\n\t}\r\n\texports.radianToDegree = radianToDegree;\r\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar gamesaw = __webpack_require__(9);\r\n\tvar Projectile = (function () {\r\n\t    function Projectile(gl, texture, collider, speed, damage, direction) {\r\n\t        this.dead = false;\r\n\t        this.texture = texture;\r\n\t        this.sprite = new gamesaw.GL.Sprite(texture, 6, 6, [406, 22, 6, 6]);\r\n\t        this.collider = collider;\r\n\t        this.speed = speed;\r\n\t        this.damage = damage;\r\n\t        this.direction = direction;\r\n\t    }\r\n\t    Projectile.prototype.isDead = function () {\r\n\t        return this.dead;\r\n\t    };\r\n\t    Projectile.prototype.update = function (delta) {\r\n\t        var position = new gamesaw.Geometry.Vector2(this.collider.pos.x, this.collider.pos.y);\r\n\t        var step;\r\n\t        step = this.direction.scale(this.speed * delta);\r\n\t        position = position.add(step);\r\n\t        this.collider.setX(position.x);\r\n\t        this.collider.setY(position.y);\r\n\t        if (this.collider.pos.x > 750 || this.collider.pos.x < 50 || this.collider.pos.y > 550 || this.collider.pos.y < 100) {\r\n\t            this.dead = true;\r\n\t        }\r\n\t    };\r\n\t    Projectile.prototype.render = function (renderer) {\r\n\t        this.sprite.renderScale(renderer, this.collider.pos.x - this.collider.radius, this.collider.pos.y - this.collider.radius, 2);\r\n\t    };\r\n\t    return Projectile;\r\n\t}());\r\n\texports.Projectile = Projectile;\r\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar connection_1 = __webpack_require__(14);\r\n\texports.Connection = connection_1.Connection;\r\n\tvar graph_1 = __webpack_require__(15);\r\n\texports.Graph = graph_1.Graph;\r\n\tvar heuristic_1 = __webpack_require__(16);\r\n\texports.Heuristic = heuristic_1.Heuristic;\r\n\tvar node_list_1 = __webpack_require__(17);\r\n\texports.NodeList = node_list_1.NodeList;\r\n\tvar node_record_1 = __webpack_require__(18);\r\n\texports.NodeRecord = node_record_1.NodeRecord;\r\n\tvar node_1 = __webpack_require__(19);\r\n\texports.Node = node_1.Node;\r\n\tvar path_finder_1 = __webpack_require__(34);\r\n\texports.PathFinder = path_finder_1.PathFinder;\r\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar node_1 = __webpack_require__(19);\r\n\tvar node_record_1 = __webpack_require__(18);\r\n\tvar node_list_1 = __webpack_require__(17);\r\n\tvar heuristic_1 = __webpack_require__(16);\r\n\tvar graph_1 = __webpack_require__(15);\r\n\tvar PathFinder = (function () {\r\n\t    function PathFinder() {\r\n\t        this.startRecord = new node_record_1.NodeRecord();\r\n\t        this.open = new node_list_1.NodeList();\r\n\t        this.closed = new node_list_1.NodeList();\r\n\t    }\r\n\t    PathFinder.prototype.generatePathData = function (map, closed) {\r\n\t        var nodes = [];\r\n\t        for (var i = 0; i < map.height; i += 1) {\r\n\t            nodes[i] = [];\r\n\t            for (var j = 0; j < map.width; j += 1) {\r\n\t                var blocked = closed.indexOf(map.tiles[(i * map.width) + j]) !== -1;\r\n\t                nodes[i][j] = new node_1.Node(j, i);\r\n\t                nodes[i][j].setBlocked(blocked);\r\n\t            }\r\n\t        }\r\n\t        this.graph = new graph_1.Graph(nodes);\r\n\t    };\r\n\t    PathFinder.prototype.findPath = function (startNode, endNode) {\r\n\t        var path = [];\r\n\t        var current;\r\n\t        var connections = [];\r\n\t        var end;\r\n\t        var endNodeCost;\r\n\t        var endNodeRecord;\r\n\t        var endNodeHeuristic;\r\n\t        this.startRecord = new node_record_1.NodeRecord();\r\n\t        this.open = new node_list_1.NodeList();\r\n\t        this.closed = new node_list_1.NodeList();\r\n\t        this.heuristic = new heuristic_1.Heuristic(endNode);\r\n\t        if (this.graph.getNode(endNode).blocked) {\r\n\t            return null;\r\n\t        }\r\n\t        this.startRecord.setNode(this.graph.getNode(startNode));\r\n\t        this.startRecord.setEstimatedCost(this.heuristic.euclideanDistance(this.startRecord.getNode()));\r\n\t        this.open.add(this.startRecord);\r\n\t        while (this.open.size() > 0) {\r\n\t            current = this.open.getSmallest();\r\n\t            if (current.node.x === endNode.x && current.node.y === endNode.y) {\r\n\t                break;\r\n\t            }\r\n\t            connections = this.graph.getConnections(current.getNode());\r\n\t            for (var i = 0; i < connections.length; i += 1) {\r\n\t                end = connections[i].getDstNode();\r\n\t                endNodeCost = current.getCurrentCost() + connections[i].getCost();\r\n\t                if (this.closed.contains(end)) {\r\n\t                    endNodeRecord = this.closed.find(end);\r\n\t                    if (endNodeRecord.getCurrentCost() <= endNodeCost) {\r\n\t                        continue;\r\n\t                    }\r\n\t                    this.closed.remove(endNodeRecord.getNode());\r\n\t                    endNodeHeuristic = endNodeRecord.getEstimatedCost() - endNodeRecord.getCurrentCost();\r\n\t                }\r\n\t                else if (this.open.contains(end)) {\r\n\t                    endNodeRecord = this.open.find(end);\r\n\t                    if (endNodeRecord.getCurrentCost() <= endNodeCost) {\r\n\t                        continue;\r\n\t                    }\r\n\t                    endNodeHeuristic = endNodeRecord.getEstimatedCost() - endNodeRecord.getCurrentCost();\r\n\t                }\r\n\t                else {\r\n\t                    endNodeRecord = new node_record_1.NodeRecord();\r\n\t                    endNodeRecord.setNode(end);\r\n\t                    endNodeHeuristic = this.heuristic.euclideanDistance(end);\r\n\t                }\r\n\t                endNodeRecord.setCurrentCost(endNodeCost);\r\n\t                endNodeRecord.setConnection(connections[i]);\r\n\t                endNodeRecord.setEstimatedCost(endNodeCost + endNodeHeuristic);\r\n\t                if (!this.open.contains(end)) {\r\n\t                    this.open.add(endNodeRecord);\r\n\t                }\r\n\t            }\r\n\t            this.open.remove(current.getNode());\r\n\t            this.closed.add(current);\r\n\t        }\r\n\t        if (!(current.node.x === endNode.x && current.node.y === endNode.y)) {\r\n\t            return null;\r\n\t        }\r\n\t        else {\r\n\t            while (!(current.node.x === startNode.x && current.node.y === startNode.y)) {\r\n\t                path.push(current.connection.getDstNode());\r\n\t                current = this.closed.find(current.connection.getSrcNode());\r\n\t            }\r\n\t        }\r\n\t        return path;\r\n\t    };\r\n\t    return PathFinder;\r\n\t}());\r\n\texports.PathFinder = PathFinder;\r\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar AStar = __webpack_require__(33);\r\n\texports.AStar = AStar;\r\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar scene_manager_1 = __webpack_require__(29);\r\n\tvar Application = (function () {\r\n\t    function Application(width, height, targetFps) {\r\n\t        this.active = true;\r\n\t        this.targetFps = 30;\r\n\t        this.width = width;\r\n\t        this.height = height;\r\n\t        if (targetFps) {\r\n\t            this.targetFps = targetFps;\r\n\t        }\r\n\t        this.sceneManager = new scene_manager_1.SceneManager(this);\r\n\t    }\r\n\t    Application.prototype.init = function () {\r\n\t        this.lastDelta = new Date().getTime();\r\n\t        this.start();\r\n\t    };\r\n\t    Application.prototype.start = function () {\r\n\t        var _this = this;\r\n\t        this.applicationTimer = window.setInterval(function () {\r\n\t            _this.update();\r\n\t        }, (1000 / this.targetFps));\r\n\t    };\r\n\t    Application.prototype.stop = function () {\r\n\t        window.clearInterval(this.applicationTimer);\r\n\t    };\r\n\t    Application.prototype.step = function () {\r\n\t        this.update();\r\n\t    };\r\n\t    Application.prototype.update = function () {\r\n\t        var now = new Date().getTime();\r\n\t        var delta = now - this.lastDelta;\r\n\t        this.lastDelta = now;\r\n\t        if (now - this.lastUpdate > 1000) {\r\n\t            this.fps = this.frames;\r\n\t            this.frames = 0;\r\n\t            this.lastUpdate = now;\r\n\t        }\r\n\t        else {\r\n\t            this.frames += 1;\r\n\t        }\r\n\t        this.sceneManager.update(delta);\r\n\t    };\r\n\t    return Application;\r\n\t}());\r\n\texports.Application = Application;\r\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar sample_1 = __webpack_require__(38);\r\n\texports.Sample = sample_1.Sample;\r\n\tvar track_1 = __webpack_require__(39);\r\n\texports.Track = track_1.Track;\r\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar resource_manager_1 = __webpack_require__(4);\r\n\tvar Sample = (function () {\r\n\t    function Sample(url) {\r\n\t        this.loaded = false;\r\n\t        if (url) {\r\n\t            this.url = url;\r\n\t            this.load(url);\r\n\t        }\r\n\t        this.resourceManager = resource_manager_1.ResourceManager.getInstance();\r\n\t    }\r\n\t    Sample.prototype.load = function (url) {\r\n\t        var _this = this;\r\n\t        this.sample = new Audio();\r\n\t        this.sample.src = url;\r\n\t        this.resourceManager.addAudio();\r\n\t        this.sample.addEventListener('load', function (event) {\r\n\t            _this.loadHandler(event);\r\n\t        });\r\n\t        this.sample.addEventListener('error', _this.errorHandler);\r\n\t    };\r\n\t    Sample.prototype.play = function () {\r\n\t        this.sample.currentTime = 0;\r\n\t        this.sample.play();\r\n\t    };\r\n\t    Sample.prototype.pause = function () {\r\n\t        this.sample.pause();\r\n\t    };\r\n\t    Sample.prototype.stop = function () {\r\n\t        this.sample.pause();\r\n\t        this.sample.currentTime = 0;\r\n\t    };\r\n\t    Sample.prototype.seek = function (time) {\r\n\t        this.sample.currentTime = time;\r\n\t    };\r\n\t    Sample.prototype.setSpeed = function (speed) {\r\n\t        this.sample.playbackRate = speed;\r\n\t    };\r\n\t    Sample.prototype.getSpeed = function () {\r\n\t        return this.sample.playbackRate;\r\n\t    };\r\n\t    Sample.prototype.loadHandler = function (event) {\r\n\t        this.loaded = true;\r\n\t        this.length = this.sample.duration;\r\n\t        this.resourceManager.audioReady();\r\n\t    };\r\n\t    Sample.prototype.errorHandler = function (event) {\r\n\t        this.resourceManager.audioFailed();\r\n\t        throw new Error('Failed to load audio resource.');\r\n\t    };\r\n\t    return Sample;\r\n\t}());\r\n\texports.Sample = Sample;\r\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar resource_manager_1 = __webpack_require__(4);\r\n\tvar Track = (function () {\r\n\t    function Track(url) {\r\n\t        this.loop = false;\r\n\t        this.loaded = false;\r\n\t        if (url) {\r\n\t            this.url = url;\r\n\t            this.load(url);\r\n\t        }\r\n\t        this.resourceManager = resource_manager_1.ResourceManager.getInstance();\r\n\t    }\r\n\t    Track.prototype.load = function (url) {\r\n\t        var _this = this;\r\n\t        this.track = new Audio();\r\n\t        this.track.src = url;\r\n\t        this.resourceManager.addAudio();\r\n\t        this.track.addEventListener('load', function (event) {\r\n\t            _this.loadHandler(event);\r\n\t        });\r\n\t        this.track.addEventListener('error', _this.errorHandler);\r\n\t    };\r\n\t    Track.prototype.play = function () {\r\n\t        this.track.play();\r\n\t    };\r\n\t    Track.prototype.pause = function () {\r\n\t        this.track.pause();\r\n\t    };\r\n\t    Track.prototype.stop = function () {\r\n\t        this.track.pause();\r\n\t        this.track.currentTime = 0;\r\n\t    };\r\n\t    Track.prototype.seek = function (time) {\r\n\t        this.track.currentTime = time;\r\n\t    };\r\n\t    Track.prototype.setSpeed = function (speed) {\r\n\t        this.track.playbackRate = speed;\r\n\t    };\r\n\t    Track.prototype.getSpeed = function () {\r\n\t        return this.track.playbackRate;\r\n\t    };\r\n\t    Track.prototype.setLoopable = function (loop) {\r\n\t        this.loop = loop;\r\n\t    };\r\n\t    Track.prototype.loadHandler = function (event) {\r\n\t        this.loaded = true;\r\n\t        this.length = this.track.duration;\r\n\t        this.resourceManager.audioReady();\r\n\t    };\r\n\t    Track.prototype.errorHandler = function (event) {\r\n\t        this.resourceManager.audioFailed();\r\n\t        throw new Error('Failed to load audio resource.');\r\n\t    };\r\n\t    return Track;\r\n\t}());\r\n\texports.Track = Track;\r\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar geometry_1 = __webpack_require__(1);\r\n\tvar point_1 = __webpack_require__(5);\r\n\tvar AABB = (function () {\r\n\t    function AABB(x, y, halfWidth, halfHeight) {\r\n\t        this.type = geometry_1.GeometricEnum.AABB;\r\n\t        this.pos = new point_1.Point(0, 0);\r\n\t        this.halfWidth = 1;\r\n\t        this.halfHeight = 1;\r\n\t        if (x && y) {\r\n\t            this.pos.set(x, y);\r\n\t        }\r\n\t        if (halfWidth) {\r\n\t            this.halfWidth = halfWidth;\r\n\t        }\r\n\t        if (halfHeight) {\r\n\t            this.halfHeight = halfHeight;\r\n\t        }\r\n\t    }\r\n\t    AABB.prototype.setPosition = function (x, y) {\r\n\t        this.pos.set(x, y);\r\n\t    };\r\n\t    return AABB;\r\n\t}());\r\n\texports.AABB = AABB;\r\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar geometry_1 = __webpack_require__(1);\r\n\tvar vector2d_1 = __webpack_require__(11);\r\n\tvar Bezier = (function () {\r\n\t    function Bezier(startX, startY, endX, endY) {\r\n\t        this.type = geometry_1.GeometricEnum.BEZIER;\r\n\t        this.start = new vector2d_1.Vector2(0.0, 0.0);\r\n\t        this.end = new vector2d_1.Vector2(1.0, 0.0);\r\n\t        this.controlStart = new vector2d_1.Vector2(0.0, 0.0);\r\n\t        this.controlEnd = new vector2d_1.Vector2(1.0, 0.0);\r\n\t        this.start.set(startX, startY);\r\n\t        this.controlStart.set(startX, startY);\r\n\t        this.end.set(endX, endY);\r\n\t        this.controlEnd.set(endX, endY);\r\n\t    }\r\n\t    Bezier.prototype.getPoint = function (t) {\r\n\t        var point = new vector2d_1.Vector2(this.start.x, this.start.y);\r\n\t        if (t !== 0) {\r\n\t            var u = 1 - t;\r\n\t            var tt = t * t;\r\n\t            var uu = u * u;\r\n\t            var uuu = uu * u;\r\n\t            var ttt = tt * t;\r\n\t            point = this.start.scale(uuu);\r\n\t            point = point.add(this.controlStart.scale(3 * uu * t));\r\n\t            point = point.add(this.controlEnd.scale(3 * u * tt));\r\n\t            point = point.add(this.end.scale(ttt));\r\n\t        }\r\n\t        return point;\r\n\t    };\r\n\t    return Bezier;\r\n\t}());\r\n\texports.Bezier = Bezier;\r\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar geometry_1 = __webpack_require__(1);\r\n\tvar BSpline = (function () {\r\n\t    function BSpline() {\r\n\t        this.type = geometry_1.GeometricEnum.BSPLINE;\r\n\t    }\r\n\t    return BSpline;\r\n\t}());\r\n\texports.BSpline = BSpline;\r\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar geometry_1 = __webpack_require__(1);\r\n\tvar point_1 = __webpack_require__(5);\r\n\tvar Circle = (function () {\r\n\t    function Circle(x, y, radius) {\r\n\t        this.type = geometry_1.GeometricEnum.CIRCLE;\r\n\t        this.pos = new point_1.Point(0, 0);\r\n\t        this.radius = 1;\r\n\t        if (x) {\r\n\t            this.pos.x = x;\r\n\t        }\r\n\t        if (y) {\r\n\t            this.pos.y = y;\r\n\t        }\r\n\t        if (radius) {\r\n\t            this.radius = radius;\r\n\t        }\r\n\t    }\r\n\t    Circle.prototype.getType = function () {\r\n\t        return this.type;\r\n\t    };\r\n\t    Circle.prototype.getX = function () {\r\n\t        return this.pos.x;\r\n\t    };\r\n\t    Circle.prototype.getY = function () {\r\n\t        return this.pos.y;\r\n\t    };\r\n\t    Circle.prototype.setX = function (x) {\r\n\t        this.pos.x = x;\r\n\t    };\r\n\t    Circle.prototype.setY = function (y) {\r\n\t        this.pos.y = y;\r\n\t    };\r\n\t    Circle.prototype.set = function (x, y, radius) {\r\n\t        this.pos.x = x;\r\n\t        this.pos.y = y;\r\n\t        this.radius = radius;\r\n\t    };\r\n\t    Circle.prototype.get = function () {\r\n\t        return this;\r\n\t    };\r\n\t    Circle.prototype.transform = function (x, y) {\r\n\t        this.pos.x += x;\r\n\t        this.pos.y += y;\r\n\t    };\r\n\t    return Circle;\r\n\t}());\r\n\texports.Circle = Circle;\r\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar geometry_1 = __webpack_require__(1);\r\n\tvar index_1 = __webpack_require__(10);\r\n\tfunction intersects(obj0, obj1) {\r\n\t    var collider = new Collider();\r\n\t    return collider.intersects(obj0, obj1);\r\n\t}\r\n\texports.intersects = intersects;\r\n\t;\r\n\tvar Collider = (function () {\r\n\t    function Collider() {\r\n\t    }\r\n\t    Collider.prototype.intersects = function (obj0, obj1) {\r\n\t        // Need to check the first object if we can use it as main collider body\r\n\t        switch (obj0.type) {\r\n\t            case geometry_1.GeometricEnum.POINT:\r\n\t                switch (obj1.type) {\r\n\t                    case geometry_1.GeometricEnum.LINE:\r\n\t                        return this.pointLine();\r\n\t                    case geometry_1.GeometricEnum.CIRCLE:\r\n\t                        return this.pointCircle(obj0, obj1);\r\n\t                    case geometry_1.GeometricEnum.RECTANGLE:\r\n\t                        return this.pointRectangle(obj0, obj1);\r\n\t                    case geometry_1.GeometricEnum.AABB:\r\n\t                        return this.pointAABB(obj0, obj1);\r\n\t                    case geometry_1.GeometricEnum.POLYGON:\r\n\t                        return this.pointPolygon();\r\n\t                    default:\r\n\t                        throw new Error('Second object not a collidable body');\r\n\t                }\r\n\t            case geometry_1.GeometricEnum.LINE:\r\n\t                switch (obj1.type) {\r\n\t                    case geometry_1.GeometricEnum.POINT:\r\n\t                        return this.linePoint();\r\n\t                    case geometry_1.GeometricEnum.CIRCLE:\r\n\t                        return this.lineCircle();\r\n\t                    case geometry_1.GeometricEnum.RECTANGLE:\r\n\t                        return this.lineRectangle();\r\n\t                    case geometry_1.GeometricEnum.POLYGON:\r\n\t                        return this.linePolygon();\r\n\t                    default:\r\n\t                        throw new Error('Second object not a collidable body');\r\n\t                }\r\n\t            case geometry_1.GeometricEnum.CIRCLE:\r\n\t                switch (obj1.type) {\r\n\t                    case geometry_1.GeometricEnum.CIRCLE:\r\n\t                        return this.circleCircle(obj0, obj1);\r\n\t                    case geometry_1.GeometricEnum.LINE:\r\n\t                        return this.circleLine();\r\n\t                    case geometry_1.GeometricEnum.POINT:\r\n\t                        return this.circlePoint(obj0, obj1);\r\n\t                    case geometry_1.GeometricEnum.RECTANGLE:\r\n\t                        return this.circleRectangle();\r\n\t                    case geometry_1.GeometricEnum.AABB:\r\n\t                        return this.circleAABB(obj0, obj1);\r\n\t                    case geometry_1.GeometricEnum.POLYGON:\r\n\t                        return this.circlePolygon(obj0, obj1);\r\n\t                    default:\r\n\t                        throw new Error('Second object not a collidable body');\r\n\t                }\r\n\t            case geometry_1.GeometricEnum.RECTANGLE:\r\n\t                switch (obj1.type) {\r\n\t                    case geometry_1.GeometricEnum.RECTANGLE:\r\n\t                        return this.rectangleRectangle(obj0, obj1);\r\n\t                    case geometry_1.GeometricEnum.AABB:\r\n\t                        return this.rectangleAABB(obj0, obj1);\r\n\t                    case geometry_1.GeometricEnum.LINE:\r\n\t                        return this.rectangleLine();\r\n\t                    case geometry_1.GeometricEnum.CIRCLE:\r\n\t                        return this.rectangleCircle();\r\n\t                    case geometry_1.GeometricEnum.POINT:\r\n\t                        return this.rectanglePoint(obj0, obj1);\r\n\t                    case geometry_1.GeometricEnum.POLYGON:\r\n\t                        return this.rectanglePolygon();\r\n\t                    default:\r\n\t                        throw new Error('Second object not a collidable body');\r\n\t                }\r\n\t            case geometry_1.GeometricEnum.POLYGON:\r\n\t                switch (obj1.type) {\r\n\t                    case geometry_1.GeometricEnum.POLYGON:\r\n\t                        return this.polygonPolygon();\r\n\t                    case geometry_1.GeometricEnum.LINE:\r\n\t                        return this.polygonLine();\r\n\t                    case geometry_1.GeometricEnum.CIRCLE:\r\n\t                        return this.polygonCircle(obj0, obj1);\r\n\t                    case geometry_1.GeometricEnum.RECTANGLE:\r\n\t                        return this.polygonRectangle();\r\n\t                    case geometry_1.GeometricEnum.POINT:\r\n\t                        return this.polygonPoint();\r\n\t                    default:\r\n\t                        throw new Error('Second object not a collidable body');\r\n\t                }\r\n\t            case geometry_1.GeometricEnum.AABB:\r\n\t                switch (obj1.type) {\r\n\t                    case geometry_1.GeometricEnum.AABB:\r\n\t                        return this.aabbAABB(obj0, obj1);\r\n\t                    case geometry_1.GeometricEnum.POINT:\r\n\t                        return this.aabbPoint(obj0, obj1);\r\n\t                    case geometry_1.GeometricEnum.CIRCLE:\r\n\t                        return this.aabbCircle(obj0, obj1);\r\n\t                    case geometry_1.GeometricEnum.RECTANGLE:\r\n\t                        return this.aabbRectangle(obj0, obj1);\r\n\t                }\r\n\t            default:\r\n\t                throw new Error('Couldn\\'t find any collider for type');\r\n\t        }\r\n\t    };\r\n\t    Collider.prototype.pointLine = function () {\r\n\t        return true;\r\n\t    };\r\n\t    Collider.prototype.linePoint = function () {\r\n\t        return true;\r\n\t    };\r\n\t    Collider.prototype.pointCircle = function (obj0, obj1) {\r\n\t        var v0 = new index_1.Vector2(obj0.x, obj0.y);\r\n\t        var v1 = new index_1.Vector2(obj1.pos.x, obj1.pos.y);\r\n\t        var len = v1.sub(v0).length();\r\n\t        return len < obj1.radius;\r\n\t    };\r\n\t    Collider.prototype.circlePoint = function (obj0, obj1) {\r\n\t        return this.pointCircle(obj1, obj0);\r\n\t    };\r\n\t    Collider.prototype.pointRectangle = function (obj0, obj1) {\r\n\t        return (obj0.x > obj1.pos.x && obj0.x < obj1.pos.x + obj1.width &&\r\n\t            obj0.y > obj1.pos.y && obj0.y < obj1.pos.y + obj1.height);\r\n\t    };\r\n\t    Collider.prototype.rectanglePoint = function (obj0, obj1) {\r\n\t        return this.pointRectangle(obj1, obj0);\r\n\t    };\r\n\t    Collider.prototype.pointPolygon = function () {\r\n\t        return true;\r\n\t    };\r\n\t    Collider.prototype.polygonPoint = function () {\r\n\t        return this.pointPolygon();\r\n\t    };\r\n\t    Collider.prototype.lineLine = function () {\r\n\t        return true;\r\n\t    };\r\n\t    Collider.prototype.lineCircle = function () {\r\n\t        return true;\r\n\t    };\r\n\t    Collider.prototype.circleLine = function () {\r\n\t        return this.lineCircle();\r\n\t    };\r\n\t    Collider.prototype.lineRectangle = function () {\r\n\t        return true;\r\n\t    };\r\n\t    Collider.prototype.rectangleLine = function () {\r\n\t        return this.lineRectangle();\r\n\t    };\r\n\t    Collider.prototype.linePolygon = function () {\r\n\t        return true;\r\n\t    };\r\n\t    Collider.prototype.polygonLine = function () {\r\n\t        return this.linePolygon();\r\n\t    };\r\n\t    Collider.prototype.circleCircle = function (obj0, obj1) {\r\n\t        var v0 = new index_1.Vector2(obj0.pos.x, obj0.pos.y);\r\n\t        var v1 = new index_1.Vector2(obj1.pos.x, obj1.pos.y);\r\n\t        var len = v1.sub(v0).length();\r\n\t        var cRadi = obj0.radius + obj1.radius;\r\n\t        return len < cRadi;\r\n\t    };\r\n\t    Collider.prototype.circleRectangle = function () {\r\n\t        return true;\r\n\t    };\r\n\t    Collider.prototype.rectangleCircle = function () {\r\n\t        return this.circleRectangle();\r\n\t    };\r\n\t    Collider.prototype.circlePolygon = function (obj0, obj1) {\r\n\t        return true;\r\n\t    };\r\n\t    Collider.prototype.polygonCircle = function (obj0, obj1) {\r\n\t        return this.circlePolygon(obj1, obj0);\r\n\t    };\r\n\t    Collider.prototype.rectangleRectangle = function (obj0, obj1) {\r\n\t        return (obj0.pos.x + obj0.width >= obj1.pos.x &&\r\n\t            obj0.pos.y + obj0.height >= obj1.pos.y &&\r\n\t            obj0.pos.x <= obj1.pos.x + obj1.width &&\r\n\t            obj0.pos.y <= obj1.pos.y + obj1.height);\r\n\t    };\r\n\t    Collider.prototype.rectanglePolygon = function () {\r\n\t        return true;\r\n\t    };\r\n\t    Collider.prototype.polygonRectangle = function () {\r\n\t        return this.rectanglePolygon();\r\n\t    };\r\n\t    Collider.prototype.polygonPolygon = function () {\r\n\t        return true;\r\n\t    };\r\n\t    Collider.prototype.pointAABB = function (obj0, obj1) {\r\n\t        if (Math.abs(obj1.pos.x - obj0.x) > obj1.halfWidth) {\r\n\t            return false;\r\n\t        }\r\n\t        else if (Math.abs(obj1.pos.y - obj0.y) > obj1.halfHeight) {\r\n\t            return false;\r\n\t        }\r\n\t        else {\r\n\t            return true;\r\n\t        }\r\n\t    };\r\n\t    Collider.prototype.aabbPoint = function (obj0, obj1) {\r\n\t        return this.pointAABB(obj1, obj0);\r\n\t    };\r\n\t    Collider.prototype.circleAABB = function (obj0, obj1) {\r\n\t        if (Math.abs(obj1.pos.x - obj0.pos.x) > (obj1.halfWidth + obj0.radius)) {\r\n\t            return false;\r\n\t        }\r\n\t        else if (Math.abs(obj1.pos.y - obj0.pos.y) > (obj1.halfHeight + obj0.radius)) {\r\n\t            return false;\r\n\t        }\r\n\t        else {\r\n\t            return true;\r\n\t        }\r\n\t    };\r\n\t    Collider.prototype.aabbCircle = function (obj0, obj1) {\r\n\t        return this.circleAABB(obj1, obj0);\r\n\t    };\r\n\t    Collider.prototype.rectangleAABB = function (obj0, obj1) {\r\n\t        var halfWidth = obj0.width / 2;\r\n\t        var halfHeight = obj0.height / 2;\r\n\t        if (Math.abs(obj0.pos.x + halfWidth - obj1.pos.x) > (halfWidth + obj1.halfWidth)) {\r\n\t            return false;\r\n\t        }\r\n\t        else if (Math.abs(obj0.pos.y + halfHeight - obj1.pos.y) > (halfHeight + obj1.halfHeight)) {\r\n\t            return false;\r\n\t        }\r\n\t        else {\r\n\t            return true;\r\n\t        }\r\n\t    };\r\n\t    Collider.prototype.aabbRectangle = function (obj0, obj1) {\r\n\t        return this.rectangleAABB(obj1, obj0);\r\n\t    };\r\n\t    Collider.prototype.aabbAABB = function (obj0, obj1) {\r\n\t        if (Math.abs(obj0.pos.x - obj1.pos.x) > (obj0.halfWidth + obj1.halfWidth)) {\r\n\t            return false;\r\n\t        }\r\n\t        else if (Math.abs(obj0.pos.y - obj1.pos.y) > (obj0.halfHeight + obj1.halfHeight)) {\r\n\t            return false;\r\n\t        }\r\n\t        else {\r\n\t            return true;\r\n\t        }\r\n\t    };\r\n\t    return Collider;\r\n\t}());\r\n\texports.Collider = Collider;\r\n\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar geometry_1 = __webpack_require__(1);\r\n\tvar point_1 = __webpack_require__(5);\r\n\tvar Line = (function () {\r\n\t    function Line(x0, y0, x1, y1) {\r\n\t        this.type = geometry_1.GeometricEnum.LINE;\r\n\t        this.start = new point_1.Point(-1, 0);\r\n\t        this.end = new point_1.Point(1, 0);\r\n\t        if (x0 && y0) {\r\n\t            this.start.set(x0, y0);\r\n\t        }\r\n\t        if (x1 && y1) {\r\n\t            this.end.set(x1, y1);\r\n\t        }\r\n\t    }\r\n\t    Line.prototype.transform = function (x, y) {\r\n\t        this.start.transform(x, y);\r\n\t        this.end.transform(x, y);\r\n\t    };\r\n\t    Line.prototype.transformStart = function (x, y) {\r\n\t        this.start.transform(x, y);\r\n\t    };\r\n\t    Line.prototype.transformEnd = function (x, y) {\r\n\t        this.end.transform(x, y);\r\n\t    };\r\n\t    Line.prototype.set = function (x0, y0, x1, y1) {\r\n\t        this.start.set(x0, y0);\r\n\t        this.end.set(x1, y1);\r\n\t    };\r\n\t    return Line;\r\n\t}());\r\n\texports.Line = Line;\r\n\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar geometry_1 = __webpack_require__(1);\r\n\tvar point_1 = __webpack_require__(5);\r\n\tvar Polygon = (function () {\r\n\t    function Polygon(points) {\r\n\t        this.type = geometry_1.GeometricEnum.POLYGON;\r\n\t        this.points = [\r\n\t            new point_1.Point(0, 0),\r\n\t            new point_1.Point(1, -1),\r\n\t            new point_1.Point(-1, -1)\r\n\t        ];\r\n\t        this.points = points;\r\n\t    }\r\n\t    Polygon.prototype.addPoint = function (point) {\r\n\t        this.points.push(point);\r\n\t    };\r\n\t    Polygon.prototype.removePoint = function (index) {\r\n\t        this.points.splice(index, 1);\r\n\t    };\r\n\t    Polygon.prototype.removeFirst = function () {\r\n\t        this.points.shift();\r\n\t    };\r\n\t    Polygon.prototype.removeLast = function () {\r\n\t        this.points.pop();\r\n\t    };\r\n\t    return Polygon;\r\n\t}());\r\n\texports.Polygon = Polygon;\r\n\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar geometry_1 = __webpack_require__(1);\r\n\tvar utility_1 = __webpack_require__(8);\r\n\tfunction render(ctx, object) {\r\n\t    var renderer = new Renderer(ctx);\r\n\t    renderer.render(object);\r\n\t}\r\n\texports.render = render;\r\n\t;\r\n\tvar Renderer = (function () {\r\n\t    function Renderer(context) {\r\n\t        this.context = context;\r\n\t    }\r\n\t    Renderer.prototype.render = function (object) {\r\n\t        if (!this.context) {\r\n\t            throw new Error('Renderer must have a context for rendering.');\r\n\t        }\r\n\t        switch (object.type) {\r\n\t            case geometry_1.GeometricEnum.POINT:\r\n\t                this.renderPoint(object);\r\n\t                break;\r\n\t            case geometry_1.GeometricEnum.VECTOR2:\r\n\t                this.renderPoint(object);\r\n\t                break;\r\n\t            case geometry_1.GeometricEnum.LINE:\r\n\t                this.renderLine(object);\r\n\t                break;\r\n\t            case geometry_1.GeometricEnum.AABB:\r\n\t                this.renderAABB(object);\r\n\t                break;\r\n\t            case geometry_1.GeometricEnum.RECTANGLE:\r\n\t                this.renderRectangle(object);\r\n\t                break;\r\n\t            case geometry_1.GeometricEnum.CIRCLE:\r\n\t                this.renderCircle(object);\r\n\t                break;\r\n\t            default:\r\n\t                throw new Error('Not recogniced as a renderable shape.');\r\n\t        }\r\n\t    };\r\n\t    Renderer.prototype.renderPoint = function (obj) {\r\n\t        this.context.beginPath();\r\n\t        this.context.arc(obj.x, obj.y, 1.0, 0, utility_1.PI * 2);\r\n\t        this.context.fill();\r\n\t    };\r\n\t    Renderer.prototype.renderLine = function (obj) {\r\n\t        this.context.beginPath();\r\n\t        this.context.moveTo(obj.start.x, obj.start.y);\r\n\t        this.context.lineTo(obj.end.x, obj.end.x);\r\n\t        this.context.stroke();\r\n\t    };\r\n\t    Renderer.prototype.renderAABB = function (obj) {\r\n\t        this.context.strokeRect(obj.pos.x - obj.halfWidth, obj.pos.y - obj.halfHeight, obj.halfWidth * 2, obj.halfHeight * 2);\r\n\t    };\r\n\t    Renderer.prototype.renderRectangle = function (obj) {\r\n\t        this.context.strokeRect(obj.pos.x, obj.pos.y, obj.width, obj.height);\r\n\t    };\r\n\t    Renderer.prototype.renderCircle = function (obj) {\r\n\t        this.context.beginPath();\r\n\t        this.context.arc(obj.pos.x, obj.pos.y, obj.radius, 0, utility_1.PI * 2);\r\n\t        this.context.stroke();\r\n\t    };\r\n\t    return Renderer;\r\n\t}());\r\n\texports.Renderer = Renderer;\r\n\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar geometry_1 = __webpack_require__(1);\r\n\tvar Vector3 = (function () {\r\n\t    function Vector3(x, y, z) {\r\n\t        this.type = geometry_1.GeometricEnum.VECTOR3;\r\n\t        this.x = 0.0;\r\n\t        this.y = 0.0;\r\n\t        this.z = 0.0;\r\n\t        if (x) {\r\n\t            this.x = x;\r\n\t        }\r\n\t        if (y) {\r\n\t            this.y = y;\r\n\t        }\r\n\t        if (z) {\r\n\t            this.z = z;\r\n\t        }\r\n\t    }\r\n\t    Vector3.prototype.getType = function () {\r\n\t        return this.type;\r\n\t    };\r\n\t    Vector3.prototype.getX = function () {\r\n\t        return this.x;\r\n\t    };\r\n\t    Vector3.prototype.getY = function () {\r\n\t        return this.y;\r\n\t    };\r\n\t    Vector3.prototype.getZ = function () {\r\n\t        return this.z;\r\n\t    };\r\n\t    Vector3.prototype.setX = function (x) {\r\n\t        this.x = x;\r\n\t    };\r\n\t    Vector3.prototype.setY = function (y) {\r\n\t        this.y = y;\r\n\t    };\r\n\t    Vector3.prototype.setZ = function (z) {\r\n\t        this.z = z;\r\n\t    };\r\n\t    Vector3.prototype.set = function (x, y, z) {\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t        this.z = z;\r\n\t    };\r\n\t    Vector3.prototype.get = function () {\r\n\t        return this;\r\n\t    };\r\n\t    Vector3.prototype.add = function (v2) {\r\n\t        return new Vector3(this.x + v2.x, this.y + v2.y, this.z + v2.z);\r\n\t    };\r\n\t    Vector3.prototype.sub = function (v2) {\r\n\t        return new Vector3(this.x - v2.x, this.y - v2.y, this.z - v2.z);\r\n\t    };\r\n\t    Vector3.prototype.invert = function () {\r\n\t        return new Vector3(-this.x, -this.y, -this.z);\r\n\t    };\r\n\t    Vector3.prototype.scale = function (scalar) {\r\n\t        return new Vector3(this.x * scalar, this.y * scalar, this.z * scalar);\r\n\t    };\r\n\t    Vector3.prototype.normalize = function () {\r\n\t        var length = this.length();\r\n\t        if (length === 0) {\r\n\t            return new Vector3(0.0, 0.0, 0.0);\r\n\t        }\r\n\t        return new Vector3(this.x / length, this.y / length, this.z / length);\r\n\t    };\r\n\t    Vector3.prototype.project = function (v2) {\r\n\t        var dot = this.dot(v2);\r\n\t        var length = this.lengthSquared();\r\n\t        return new Vector3((dot / length) * this.x, (dot / length) * this.y, (dot / length) * this.z);\r\n\t    };\r\n\t    Vector3.prototype.length = function () {\r\n\t        return Math.sqrt(this.lengthSquared());\r\n\t    };\r\n\t    Vector3.prototype.lengthSquared = function () {\r\n\t        return (this.x * this.x) + (this.y * this.y) + (this.z * this.z);\r\n\t    };\r\n\t    Vector3.prototype.dot = function (v2) {\r\n\t        return ((this.x * v2.x) + (this.y * v2.y) + (this.z * v2.z));\r\n\t    };\r\n\t    return Vector3;\r\n\t}());\r\n\texports.Vector3 = Vector3;\r\n\n\n/***/ },\n/* 49 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar AnimatedSprite = (function () {\r\n\t    function AnimatedSprite(frames, loop, timePerFrame) {\r\n\t        this.frames = [];\r\n\t        this.loop = false;\r\n\t        this.active = true;\r\n\t        this.timePerFrame = 100;\r\n\t        this.currentFrame = 0;\r\n\t        this.currentDelta = 0;\r\n\t        if (frames) {\r\n\t            this.frames = frames;\r\n\t        }\r\n\t        if (loop) {\r\n\t            this.loop = loop;\r\n\t        }\r\n\t        if (timePerFrame) {\r\n\t            this.timePerFrame = timePerFrame;\r\n\t        }\r\n\t    }\r\n\t    AnimatedSprite.prototype.play = function () {\r\n\t        this.active = true;\r\n\t    };\r\n\t    AnimatedSprite.prototype.stop = function () {\r\n\t        this.active = false;\r\n\t        this.currentFrame = 0;\r\n\t        this.currentDelta = 0;\r\n\t    };\r\n\t    AnimatedSprite.prototype.pause = function () {\r\n\t        this.active = false;\r\n\t    };\r\n\t    AnimatedSprite.prototype.nextFrame = function () {\r\n\t        this.currentFrame += 1;\r\n\t        if (this.currentFrame >= this.frames.length) {\r\n\t            if (!this.loop) {\r\n\t                this.active = false;\r\n\t            }\r\n\t            this.currentFrame = 0;\r\n\t        }\r\n\t    };\r\n\t    AnimatedSprite.prototype.update = function (delta) {\r\n\t        if (this.active) {\r\n\t            this.currentDelta += delta;\r\n\t            if (this.currentDelta > this.timePerFrame) {\r\n\t                this.currentDelta = 0;\r\n\t                this.nextFrame();\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    AnimatedSprite.prototype.render = function (renderer, x, y) {\r\n\t        this.frames[this.currentFrame].render(renderer, x, y);\r\n\t    };\r\n\t    AnimatedSprite.prototype.renderScale = function (renderer, x, y, scale, scaleY) {\r\n\t        if (scaleY) {\r\n\t            this.frames[this.currentFrame].renderScale(renderer, x, y, scale, scaleY);\r\n\t        }\r\n\t        else {\r\n\t            this.frames[this.currentFrame].renderScale(renderer, x, y, scale);\r\n\t        }\r\n\t    };\r\n\t    AnimatedSprite.prototype.renderAngle = function (renderer, x, y, angle) {\r\n\t        this.frames[this.currentFrame].renderAngle(renderer, x, y, angle);\r\n\t    };\r\n\t    AnimatedSprite.prototype.renderAngleScale = function (renderer, x, y, angle, scale, scaleY) {\r\n\t        if (scaleY) {\r\n\t            this.frames[this.currentFrame].renderAngleScale(renderer, x, y, angle, scale, scaleY);\r\n\t        }\r\n\t        else {\r\n\t            this.frames[this.currentFrame].renderAngleScale(renderer, x, y, angle, scale);\r\n\t        }\r\n\t    };\r\n\t    return AnimatedSprite;\r\n\t}());\r\n\texports.AnimatedSprite = AnimatedSprite;\r\n\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar program_1 = __webpack_require__(2);\r\n\tvar color_1 = __webpack_require__(3);\r\n\tvar render_call_1 = __webpack_require__(6);\r\n\tvar vertexShader = 'attribute vec2 a_position;\\n' +\r\n\t    'attribute vec2 a_texCoord;\\n' +\r\n\t    'varying vec2 v_texCoord;\\n' +\r\n\t    'uniform vec2 u_resolution;\\n' +\r\n\t    'void main() {\\n' +\r\n\t    '\tvec2 zeroToOne = a_position / u_resolution;\\n' +\r\n\t    '\tvec2 zeroToTwo = zeroToOne * 2.0;\\n' +\r\n\t    '\tvec2 clipSpace = zeroToTwo - 1.0;\\n' +\r\n\t    '\tgl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\\n' +\r\n\t    '\tv_texCoord = a_texCoord;\\n' +\r\n\t    '}\\n';\r\n\tvar fragmentShader = 'precision mediump float;\\n' +\r\n\t    'uniform sampler2D u_image;\\n' +\r\n\t    'uniform vec4 u_color;\\n' +\r\n\t    'varying vec2 v_texCoord;\\n\\n' +\r\n\t    'void main() {\\n' +\r\n\t    '\tvec4 baseTexture = texture2D(u_image, v_texCoord);\\n' +\r\n\t    '\tgl_FragColor = baseTexture * u_color * u_color.w;\\n' +\r\n\t    '}\\n';\r\n\tvar FontRenderer = (function () {\r\n\t    function FontRenderer(gl) {\r\n\t        this.color = new color_1.Color(255, 255, 255, 1);\r\n\t        this.width = 800;\r\n\t        this.height = 600;\r\n\t        this.renderCalls = {};\r\n\t        this.gl = gl;\r\n\t        this.program = new program_1.Program(this.gl);\r\n\t        this.program.loadShader(program_1.ShaderType.VERTEX, vertexShader);\r\n\t        this.program.loadShader(program_1.ShaderType.FRAGMENT, fragmentShader);\r\n\t        this.program.createProgram();\r\n\t        this.init();\r\n\t    }\r\n\t    FontRenderer.prototype.init = function () {\r\n\t        var gl = this.gl;\r\n\t        this.resolution = gl.getUniformLocation(this.program.program, 'u_resolution');\r\n\t        this.colorLocation = gl.getUniformLocation(this.program.program, 'u_color');\r\n\t        this.position = gl.getAttribLocation(this.program.program, 'a_position');\r\n\t        this.textureCoordinates = gl.getAttribLocation(this.program.program, 'a_texCoord');\r\n\t        this.vertexBuffer = gl.createBuffer();\r\n\t        this.indexBuffer = gl.createBuffer();\r\n\t        this.texCoordBuffer = gl.createBuffer();\r\n\t    };\r\n\t    FontRenderer.prototype.setColor = function (color) {\r\n\t        this.color = color;\r\n\t    };\r\n\t    FontRenderer.prototype.addCall = function (renderCall) {\r\n\t        if (!this.renderCalls[renderCall.texture]) {\r\n\t            this.renderCalls[renderCall.texture] = new render_call_1.RenderCall();\r\n\t            this.renderCalls[renderCall.texture].texture = renderCall.texture;\r\n\t        }\r\n\t        this.renderCalls[renderCall.texture].add(renderCall);\r\n\t    };\r\n\t    FontRenderer.prototype.clear = function () {\r\n\t        this.renderCalls = {};\r\n\t    };\r\n\t    FontRenderer.prototype.execute = function () {\r\n\t        this.flush();\r\n\t        this.clear();\r\n\t    };\r\n\t    FontRenderer.prototype.flush = function () {\r\n\t        var gl = this.gl;\r\n\t        gl.useProgram(this.program.program);\r\n\t        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n\t        gl.uniform2f(this.resolution, this.width, this.height);\r\n\t        for (var call in this.renderCalls) {\r\n\t            gl.bindTexture(gl.TEXTURE_2D, this.renderCalls[call].texture);\r\n\t            var col = this.color.getRGBAFloat();\r\n\t            gl.uniform4f(this.colorLocation, col[0], col[1], col[2], col[3]);\r\n\t            gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n\t            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(this.renderCalls[call].vertices), gl.STATIC_DRAW);\r\n\t            gl.enableVertexAttribArray(this.position);\r\n\t            gl.vertexAttribPointer(this.position, 2, gl.FLOAT, false, 0, 0);\r\n\t            gl.bindBuffer(gl.ARRAY_BUFFER, this.texCoordBuffer);\r\n\t            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(this.renderCalls[call].uvs), gl.STATIC_DRAW);\r\n\t            gl.enableVertexAttribArray(this.textureCoordinates);\r\n\t            gl.vertexAttribPointer(this.textureCoordinates, 2, gl.FLOAT, false, 0, 0);\r\n\t            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n\t            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(this.renderCalls[call].indices), gl.STATIC_DRAW);\r\n\t            gl.drawElements(gl.TRIANGLES, this.renderCalls[call].numIndices, gl.UNSIGNED_SHORT, 0);\r\n\t        }\r\n\t    };\r\n\t    return FontRenderer;\r\n\t}());\r\n\texports.FontRenderer = FontRenderer;\r\n\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar texture_1 = __webpack_require__(13);\r\n\tvar color_1 = __webpack_require__(3);\r\n\tvar http_1 = __webpack_require__(7);\r\n\tvar resource_manager_1 = __webpack_require__(4);\r\n\tvar render_call_1 = __webpack_require__(6);\r\n\tvar bitmap_font_1 = __webpack_require__(22);\r\n\tvar Align;\r\n\t(function (Align) {\r\n\t    Align[Align[\"LEFT\"] = 0] = \"LEFT\";\r\n\t    Align[Align[\"CENTER\"] = 1] = \"CENTER\";\r\n\t    Align[Align[\"RIGHT\"] = 2] = \"RIGHT\";\r\n\t})(Align || (Align = {}));\r\n\tvar Font = (function () {\r\n\t    function Font(gl, configUrl) {\r\n\t        this.texturePage = {};\r\n\t        this.font = new bitmap_font_1.BitmapFont();\r\n\t        this.base = 0;\r\n\t        this.lineHeight = 0;\r\n\t        this.color = new color_1.Color(255, 255, 255, 1.0);\r\n\t        this.align = 0 /* LEFT */;\r\n\t        this.gl = gl;\r\n\t        this.http = new http_1.Http(false);\r\n\t        this.resourceManager = resource_manager_1.ResourceManager.getInstance();\r\n\t        if (configUrl) {\r\n\t            this.configUrl = configUrl;\r\n\t            this.load(configUrl);\r\n\t        }\r\n\t    }\r\n\t    Font.prototype.load = function (configUrl) {\r\n\t        var _this = this;\r\n\t        this.resourceManager.addOther();\r\n\t        this.http.get(configUrl, function (data) {\r\n\t            _this.parseConfig(data.responseXML);\r\n\t        });\r\n\t    };\r\n\t    Font.prototype.parseConfig = function (xmlConfig) {\r\n\t        var pages = xmlConfig.getElementsByTagName('page');\r\n\t        var char = xmlConfig.getElementsByTagName('char');\r\n\t        var common = xmlConfig.getElementsByTagName('common')[0];\r\n\t        var info = xmlConfig.getElementsByTagName('info')[0];\r\n\t        this.font.glyphCount = +xmlConfig.getElementsByTagName('chars')[0].getAttribute('count');\r\n\t        // Info data\r\n\t        this.font.info = {\r\n\t            face: info.getAttribute('face'),\r\n\t            size: +info.getAttribute('size'),\r\n\t            italic: +info.getAttribute('italic'),\r\n\t            charset: info.getAttribute('charset'),\r\n\t            unicode: +info.getAttribute('unicode'),\r\n\t            bold: +info.getAttribute('bold'),\r\n\t            stretchHeight: +info.getAttribute('stretchH'),\r\n\t            smooth: +info.getAttribute('smooth'),\r\n\t            antiAliasing: +info.getAttribute('aa'),\r\n\t            padding: info.getAttribute('padding').split(',').map(function (src) { return +src; }),\r\n\t            spacing: info.getAttribute('spacing').split(',').map(function (src) { return +src; }),\r\n\t            outline: +info.getAttribute('outline')\r\n\t        };\r\n\t        // Common data\r\n\t        this.font.common = {\r\n\t            lineHeight: +common.getAttribute('lineHeight'),\r\n\t            base: +common.getAttribute('base'),\r\n\t            scaleWidth: +common.getAttribute('scaleW'),\r\n\t            scaleHeight: +common.getAttribute('scaleH'),\r\n\t            pages: +common.getAttribute('pages'),\r\n\t            packed: +common.getAttribute('packed'),\r\n\t            alphaChannel: +common.getAttribute('alphaChnl'),\r\n\t            redChannel: +common.getAttribute('redChnl'),\r\n\t            greenChannel: +common.getAttribute('greenChnl'),\r\n\t            blueChannel: +common.getAttribute('blueChnl')\r\n\t        };\r\n\t        for (var i = 0; i < pages.length; i += 1) {\r\n\t            var file = pages[i].getAttribute('file');\r\n\t            var id = +pages[i].getAttribute('id');\r\n\t            this.font.pages[id] = {\r\n\t                file: file\r\n\t            };\r\n\t            this.texturePage[id] = new texture_1.Texture(this.gl, file);\r\n\t        }\r\n\t        for (var i = 0; i < char.length; i += 1) {\r\n\t            var id = +char[i].getAttribute('id');\r\n\t            this.font.glyphs[id] = {\r\n\t                x: +char[i].getAttribute('x'),\r\n\t                y: +char[i].getAttribute('y'),\r\n\t                width: +char[i].getAttribute('width'),\r\n\t                height: +char[i].getAttribute('height'),\r\n\t                xOffset: +char[i].getAttribute('xoffset'),\r\n\t                yOffset: +char[i].getAttribute('yoffset'),\r\n\t                xAdvance: +char[i].getAttribute('xadvance'),\r\n\t                page: +char[i].getAttribute('page'),\r\n\t                channel: +char[i].getAttribute('chnl')\r\n\t            };\r\n\t        }\r\n\t        this.resourceManager.otherReady();\r\n\t    };\r\n\t    Font.prototype.drawString = function (renderer, str, x, y) {\r\n\t        var currentX = x;\r\n\t        var currentY = 0;\r\n\t        if (this.align === 1 /* CENTER */) {\r\n\t            var stringWidth = this.calculateWidth(str);\r\n\t            currentX = x - Math.floor(stringWidth / 2);\r\n\t        }\r\n\t        else if (this.align === 2 /* RIGHT */) {\r\n\t            var stringWidth = this.calculateWidth(str);\r\n\t            currentX = x - stringWidth;\r\n\t        }\r\n\t        for (var i = 0; i < str.length; i += 1) {\r\n\t            var id = str.charCodeAt(i);\r\n\t            if (this.font.glyphs[id]) {\r\n\t                var glyph = this.font.glyphs[id];\r\n\t                this.renderGlyph(renderer, currentX + glyph.xOffset, y + glyph.yOffset, glyph);\r\n\t                currentX += glyph.xAdvance;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    Font.prototype.renderGlyph = function (renderer, x, y, glyph) {\r\n\t        var uvs = [];\r\n\t        uvs[0] = glyph.x / this.font.common.scaleWidth;\r\n\t        uvs[1] = glyph.y / this.font.common.scaleHeight;\r\n\t        uvs[2] = (glyph.x + glyph.width) / this.font.common.scaleWidth;\r\n\t        uvs[3] = (glyph.y + glyph.height) / this.font.common.scaleHeight;\r\n\t        var renderCall = new render_call_1.RenderCall();\r\n\t        renderCall.texture = this.texturePage[glyph.page].texture;\r\n\t        renderCall.vertices = [x, y, x + glyph.width, y, x, y + glyph.height, x + glyph.width, y + glyph.height];\r\n\t        renderCall.uvs = [uvs[0], uvs[1], uvs[2], uvs[1], uvs[0], uvs[3], uvs[2], uvs[3]];\r\n\t        renderCall.indices = [0, 1, 2, 1, 2, 3];\r\n\t        renderCall.numIndices = 6;\r\n\t        renderer.addCall(renderCall);\r\n\t    };\r\n\t    Font.prototype.calculateWidth = function (str) {\r\n\t        var width = 0;\r\n\t        for (var i = 0; i < str.length; i += 1) {\r\n\t            var id = str.charCodeAt(i);\r\n\t            width += +this.font.glyphs[id]['xAdvance'];\r\n\t        }\r\n\t        return width;\r\n\t    };\r\n\t    return Font;\r\n\t}());\r\n\texports.Font = Font;\r\n\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar font_1 = __webpack_require__(51);\r\n\texports.Font = font_1.Font;\r\n\tvar bitmap_font_1 = __webpack_require__(22);\r\n\texports.BitmapFont = bitmap_font_1.BitmapFont;\r\n\tvar font_renderer_1 = __webpack_require__(50);\r\n\texports.FontRenderer = font_renderer_1.FontRenderer;\r\n\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar program_1 = __webpack_require__(2);\r\n\tvar framebuffer_1 = __webpack_require__(12);\r\n\tvar vertexShader = 'attribute vec2 a_position;\\n' +\r\n\t    'attribute vec2 a_texCoord;\\n' +\r\n\t    'varying vec2 v_texCoord;\\n' +\r\n\t    'uniform vec2 u_resolution;\\n' +\r\n\t    'void main() {\\n' +\r\n\t    '\tvec2 zeroToOne = a_position / u_resolution;\\n' +\r\n\t    '\tvec2 zeroToTwo = zeroToOne * 2.0;\\n' +\r\n\t    '\tvec2 clipSpace = zeroToTwo - 1.0;\\n' +\r\n\t    '\tgl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\\n' +\r\n\t    '\tv_texCoord = a_texCoord;\\n' +\r\n\t    '}\\n';\r\n\t/* Combine fragment shader\r\n\t * ===========================================================\r\n\t * GLSL Fragment Shader\r\n\t *  This source code is released under the MIT License.\r\n\t *  Copyright (c) 2015 Guilherme R. Lampert.\r\n\t * ===========================================================\r\n\t */\r\n\tvar combineFragmentShader = 'precision mediump float;\\n' +\r\n\t    'uniform float u_blend_mode;\\n' +\r\n\t    'uniform sampler2D u_scene_texture;\\n' +\r\n\t    'uniform sampler2D u_glow_texture;\\n' +\r\n\t    'varying vec2 v_texCoord;\\n' +\r\n\t    'const float ADDITIVE_BLENDING = 1.0;\\n' +\r\n\t    'const float SCREEN_BLENDING   = 2.0;\\n' +\r\n\t    'void main() {\\n' +\r\n\t    '\tvec4 dst = texture2D(u_scene_texture, v_texCoord); // Rendered scene (tmu:0)\\n' +\r\n\t    '\tvec4 src = texture2D(u_glow_texture,  v_texCoord); // Glow map       (tmu:1)\\n' +\r\n\t    '\tif (u_blend_mode == ADDITIVE_BLENDING) {\\n' +\r\n\t    '\t\t// Additive blending (strong result, high overexposure).\\n' +\r\n\t    '\t\tgl_FragColor = min(src + dst, 1.0);\\n' +\r\n\t    '\t} else if (u_blend_mode == SCREEN_BLENDING) {\\n' +\r\n\t    '\t\t// Screen blending (mild result, medium overexposure).\\n' +\r\n\t    '\t\tgl_FragColor = clamp((src + dst) - (src * dst), 0.0, 1.0);\\n' +\r\n\t    '\t} else {\\n' +\r\n\t    '\t\t// Show the glow map instead (DISPLAY_GLOWMAP).\\n' +\r\n\t    '\t\tgl_FragColor = src;\\n' +\r\n\t    '\t}\\n' +\r\n\t    '}';\r\n\tvar Bloom = (function () {\r\n\t    function Bloom(gl, width, height) {\r\n\t        this.gl = gl;\r\n\t        this.width = width;\r\n\t        this.height = height;\r\n\t        this.combinationProgram = new program_1.Program(this.gl);\r\n\t        this.combinationProgram.loadShader(program_1.ShaderType.VERTEX, vertexShader);\r\n\t        this.combinationProgram.loadShader(program_1.ShaderType.FRAGMENT, combineFragmentShader);\r\n\t        this.combinationProgram.createProgram();\r\n\t        this.init();\r\n\t    }\r\n\t    Bloom.prototype.init = function () {\r\n\t        var gl = this.gl;\r\n\t        this.glowFramebuffer = new framebuffer_1.FrameBuffer(gl, this.width, this.height);\r\n\t        this.blendMode = gl.getUniformLocation(this.combinationProgram.program, 'u_blend_mode');\r\n\t        this.resolution = gl.getUniformLocation(this.combinationProgram.program, 'u_resolution');\r\n\t        this.position = gl.getAttribLocation(this.combinationProgram.program, 'a_position');\r\n\t        this.textureCoordinates = gl.getAttribLocation(this.combinationProgram.program, 'a_texCoord');\r\n\t        this.vertexBuffer = gl.createBuffer();\r\n\t        this.indexBuffer = gl.createBuffer();\r\n\t        this.texCoordBuffer = gl.createBuffer();\r\n\t    };\r\n\t    Bloom.prototype.execute = function (src, dst) {\r\n\t        var gl = this.gl;\r\n\t        gl.bindFramebuffer(gl.FRAMEBUFFER, this.glowFramebuffer.fbo);\r\n\t        this.render(dst, src);\r\n\t        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\t        return this.glowFramebuffer.texture;\r\n\t    };\r\n\t    Bloom.prototype.render = function (src, dst) {\r\n\t        var gl = this.gl;\r\n\t        var vertices = [0, 0, this.width, 0, 0, this.height, this.width, this.height];\r\n\t        var uvs = [\r\n\t            0, 0,\r\n\t            1, 0,\r\n\t            0, 1,\r\n\t            1, 1\r\n\t        ];\r\n\t        var indices = [0, 1, 2, 1, 2, 3];\r\n\t        var numIndices = 6;\r\n\t        gl.useProgram(this.combinationProgram.program);\r\n\t        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n\t        gl.uniform2f(this.resolution, 800, 600);\r\n\t        gl.uniform1f(this.blendMode, 1.0);\r\n\t        gl.activeTexture(gl.TEXTURE0);\r\n\t        gl.bindTexture(gl.TEXTURE_2D, src);\r\n\t        gl.activeTexture(gl.TEXTURE1);\r\n\t        gl.bindTexture(gl.TEXTURE_2D, dst);\r\n\t        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n\t        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\r\n\t        gl.enableVertexAttribArray(this.position);\r\n\t        gl.vertexAttribPointer(this.position, 2, gl.FLOAT, false, 0, 0);\r\n\t        gl.bindBuffer(gl.ARRAY_BUFFER, this.texCoordBuffer);\r\n\t        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(uvs), gl.STATIC_DRAW);\r\n\t        gl.enableVertexAttribArray(this.textureCoordinates);\r\n\t        gl.vertexAttribPointer(this.textureCoordinates, 2, gl.FLOAT, false, 0, 0);\r\n\t        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n\t        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\r\n\t        gl.drawElements(gl.TRIANGLES, numIndices, gl.UNSIGNED_SHORT, 0);\r\n\t        gl.bindTexture(gl.TEXTURE_2D, dst);\r\n\t        gl.activeTexture(gl.TEXTURE0);\r\n\t    };\r\n\t    return Bloom;\r\n\t}());\r\n\texports.Bloom = Bloom;\r\n\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar program_1 = __webpack_require__(2);\r\n\tvar framebuffer_1 = __webpack_require__(12);\r\n\tvar vertexShader = 'attribute vec2 a_position;\\n' +\r\n\t    'attribute vec2 a_texCoord;\\n' +\r\n\t    'varying vec2 v_texCoord;\\n' +\r\n\t    'uniform vec2 u_resolution;\\n' +\r\n\t    'void main() {\\n' +\r\n\t    '\tvec2 zeroToOne = a_position / u_resolution;\\n' +\r\n\t    '\tvec2 zeroToTwo = zeroToOne * 2.0;\\n' +\r\n\t    '\tvec2 clipSpace = zeroToTwo - 1.0;\\n' +\r\n\t    '\tgl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\\n' +\r\n\t    '\tv_texCoord = a_texCoord;\\n' +\r\n\t    '}\\n';\r\n\t/* Blur Fragment shader\r\n\t * ===========================================================\r\n\t * GLSL Fragment Shader\r\n\t *  This source code is released under the MIT License.\r\n\t *  Copyright (c) 2015 Guilherme R. Lampert.\r\n\t * ===========================================================\r\n\t */\r\n\tvar blurFragmentShader = 'precision mediump float;\\n' +\r\n\t    'uniform vec2  u_texel_size;\\n' +\r\n\t    'uniform float u_blur_amount;\\n' +\r\n\t    'uniform float u_blur_scale;\\n' +\r\n\t    'uniform float u_blur_strength;\\n' +\r\n\t    'uniform int u_horizontal;\\n' +\r\n\t    'uniform sampler2D u_color_texture;\\n' +\r\n\t    'varying vec2 v_texCoord;\\n' +\r\n\t    'const float BLUR_PASSES = 20.0;\\n' +\r\n\t    'float gaussian(float x, float deviation) {\\n' +\r\n\t    '\treturn (1.0 / sqrt(6.28318530718 * deviation)) * exp(-((x * x) / (2.0 * deviation)));\\n' +\r\n\t    '}\\n' +\r\n\t    'void main() {\\n' +\r\n\t    '\tvec4  color = vec4(0.0);\\n' +\r\n\t    '\tfloat half_blur = u_blur_amount * 0.5;\\n' +\r\n\t    '\tfloat strength = 1.0 - u_blur_strength;\\n' +\r\n\t    '\tfloat deviation = half_blur * 0.35;\\n' +\r\n\t    '\tdeviation *= deviation;\\n' +\r\n\t    '   if (u_horizontal == 1) {\\n' +\r\n\t    '\t    for (float i = 0.0; i < BLUR_PASSES; i += 1.0) {\\n' +\r\n\t    '\t\t    float offset = i - half_blur;\\n' +\r\n\t    '\t\t    vec4 tex_color = texture2D(u_color_texture, v_texCoord +\\n' +\r\n\t    '\t\t\t    vec2(offset * u_texel_size.x * u_blur_scale, 0.0)) * gaussian(offset * strength, deviation);\\n' +\r\n\t    '\t\t    color += tex_color;\\n' +\r\n\t    '\t    }\\n' +\r\n\t    '   } else {\\n' +\r\n\t    '       for (float i = 0.0; i < BLUR_PASSES; i += 1.0) {\\n' +\r\n\t    '            float offset = i - half_blur;\\n' +\r\n\t    '            vec4 tex_color = texture2D(u_color_texture, v_texCoord +\\n' +\r\n\t    '                vec2(0.0, offset * u_texel_size.y * u_blur_scale)) * gaussian(offset * strength, deviation);\\n' +\r\n\t    '            color += tex_color;\\n' +\r\n\t    '        }\\n' +\r\n\t    '   }\\n' +\r\n\t    '\tgl_FragColor = clamp(color, 0.0, 1.0);\\n' +\r\n\t    '}';\r\n\tvar Blur = (function () {\r\n\t    function Blur(gl, width, height) {\r\n\t        this.gl = gl;\r\n\t        this.width = width;\r\n\t        this.height = height;\r\n\t        this.blurProgram = new program_1.Program(this.gl);\r\n\t        this.blurProgram.loadShader(program_1.ShaderType.VERTEX, vertexShader);\r\n\t        this.blurProgram.loadShader(program_1.ShaderType.FRAGMENT, blurFragmentShader);\r\n\t        this.blurProgram.createProgram();\r\n\t        this.init();\r\n\t    }\r\n\t    Blur.prototype.init = function () {\r\n\t        var gl = this.gl;\r\n\t        this.horizontalFBO = new framebuffer_1.FrameBuffer(gl, this.width, this.height);\r\n\t        this.verticalFBO = new framebuffer_1.FrameBuffer(gl, this.width, this.height);\r\n\t        this.texelSize = gl.getUniformLocation(this.blurProgram.program, 'u_texel_size');\r\n\t        this.blurAmount = gl.getUniformLocation(this.blurProgram.program, 'u_blur_amount');\r\n\t        this.blurScale = gl.getUniformLocation(this.blurProgram.program, 'u_blur_scale');\r\n\t        this.blurStrength = gl.getUniformLocation(this.blurProgram.program, 'u_blur_strength');\r\n\t        this.horizontal = gl.getUniformLocation(this.blurProgram.program, 'u_horizontal');\r\n\t        this.resolution = gl.getUniformLocation(this.blurProgram.program, 'u_resolution');\r\n\t        this.position = gl.getAttribLocation(this.blurProgram.program, 'a_position');\r\n\t        this.textureCoordinates = gl.getAttribLocation(this.blurProgram.program, 'a_texCoord');\r\n\t        this.vertexBuffer = gl.createBuffer();\r\n\t        this.indexBuffer = gl.createBuffer();\r\n\t        this.texCoordBuffer = gl.createBuffer();\r\n\t    };\r\n\t    Blur.prototype.execute = function (texture) {\r\n\t        var gl = this.gl;\r\n\t        gl.bindFramebuffer(gl.FRAMEBUFFER, this.horizontalFBO.fbo);\r\n\t        this.render(true, texture);\r\n\t        gl.bindFramebuffer(gl.FRAMEBUFFER, this.verticalFBO.fbo);\r\n\t        this.render(false, this.horizontalFBO.texture);\r\n\t        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\t        return this.verticalFBO.texture;\r\n\t    };\r\n\t    Blur.prototype.render = function (horizontal, texture) {\r\n\t        var gl = this.gl;\r\n\t        var vertices = [0, 0, this.width, 0, 0, this.height, this.width, this.height];\r\n\t        var uvs = [\r\n\t            0, 0,\r\n\t            1, 0,\r\n\t            0, 1,\r\n\t            1, 1\r\n\t        ];\r\n\t        var indices = [0, 1, 2, 1, 2, 3];\r\n\t        var numIndices = 6;\r\n\t        gl.useProgram(this.blurProgram.program);\r\n\t        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n\t        gl.uniform2f(this.resolution, 800, 600);\r\n\t        gl.uniform2fv(this.texelSize, [(1.0 / this.width), (1.0 / this.height)]);\r\n\t        // gl.uniform2fv(this.texelSize, [1, 1]);\r\n\t        gl.uniform1f(this.blurAmount, 35.0);\r\n\t        gl.uniform1f(this.blurScale, 1.0);\r\n\t        gl.uniform1f(this.blurStrength, 0.2);\r\n\t        if (horizontal) {\r\n\t            gl.uniform1i(this.horizontal, 1);\r\n\t        }\r\n\t        else {\r\n\t            gl.uniform1i(this.horizontal, 0);\r\n\t        }\r\n\t        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n\t        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n\t        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\r\n\t        gl.enableVertexAttribArray(this.position);\r\n\t        gl.vertexAttribPointer(this.position, 2, gl.FLOAT, false, 0, 0);\r\n\t        gl.bindBuffer(gl.ARRAY_BUFFER, this.texCoordBuffer);\r\n\t        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(uvs), gl.STATIC_DRAW);\r\n\t        gl.enableVertexAttribArray(this.textureCoordinates);\r\n\t        gl.vertexAttribPointer(this.textureCoordinates, 2, gl.FLOAT, false, 0, 0);\r\n\t        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n\t        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\r\n\t        gl.drawElements(gl.TRIANGLES, numIndices, gl.UNSIGNED_SHORT, 0);\r\n\t    };\r\n\t    return Blur;\r\n\t}());\r\n\texports.Blur = Blur;\r\n\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar blur_1 = __webpack_require__(54);\r\n\texports.Blur = blur_1.Blur;\r\n\tvar bloom_1 = __webpack_require__(53);\r\n\texports.Bloom = bloom_1.Bloom;\r\n\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar Render2d = __webpack_require__(61);\r\n\texports.Render2d = Render2d;\r\n\tvar Shader = __webpack_require__(63);\r\n\texports.Shader = Shader;\r\n\tvar Particle = __webpack_require__(57);\r\n\texports.Particle = Particle;\r\n\tvar Font = __webpack_require__(52);\r\n\texports.Font = Font;\r\n\tvar Tilemap = __webpack_require__(66);\r\n\texports.Tilemap = Tilemap;\r\n\tvar FX = __webpack_require__(55);\r\n\texports.FX = FX;\r\n\tvar texture_1 = __webpack_require__(13);\r\n\texports.Texture = texture_1.Texture;\r\n\tvar sprite_1 = __webpack_require__(65);\r\n\texports.Sprite = sprite_1.Sprite;\r\n\tvar animated_sprite_1 = __webpack_require__(49);\r\n\texports.AnimatedSprite = animated_sprite_1.AnimatedSprite;\r\n\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar particle_1 = __webpack_require__(23);\r\n\texports.Particle = particle_1.Particle;\r\n\tvar particle_emitter_1 = __webpack_require__(58);\r\n\texports.ParticleEmitter = particle_emitter_1.ParticleEmitter;\r\n\tvar particle_system_1 = __webpack_require__(60);\r\n\texports.ParticleSystem = particle_system_1.ParticleSystem;\r\n\tvar particle_renderer_1 = __webpack_require__(59);\r\n\texports.ParticleRenderer = particle_renderer_1.ParticleRenderer;\r\n\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar particle_1 = __webpack_require__(23);\r\n\tvar index_1 = __webpack_require__(10);\r\n\tvar color_1 = __webpack_require__(3);\r\n\tvar http_1 = __webpack_require__(7);\r\n\tvar ParticleEmitter = (function () {\r\n\t    function ParticleEmitter(gl) {\r\n\t        this.particles = [];\r\n\t        this.vertices = [];\r\n\t        this.sizes = [];\r\n\t        this.constant = false;\r\n\t        this.color = new color_1.Color(240, 175, 25, 0.4);\r\n\t        this.gl = gl;\r\n\t        this.blendSrc = gl.SRC_ALPHA;\r\n\t        this.blendDst = gl.ONE;\r\n\t        this.http = new http_1.Http(false);\r\n\t    }\r\n\t    ParticleEmitter.prototype.setup = function (texture, position, maxDirection, minDirection, maxVelocity, minVelocity, maxSize, minSize, maxLife, minLife, growth, gravity, wind, angularVelocity, lifeCycle, particlesPerSecond, particlesAtStart, constant, color) {\r\n\t        this.texture = texture;\r\n\t        this.pos = position;\r\n\t        this.maxDir = maxDirection;\r\n\t        this.minDir = minDirection;\r\n\t        this.maxVel = maxVelocity;\r\n\t        this.minVel = minVelocity;\r\n\t        this.maxSize = maxSize;\r\n\t        this.minSize = minSize;\r\n\t        this.maxLife = maxLife;\r\n\t        this.minLife = minLife;\r\n\t        this.growth = growth;\r\n\t        this.gravity = gravity;\r\n\t        this.wind = wind;\r\n\t        this.angularVel = angularVelocity;\r\n\t        this.lifeCycle = lifeCycle;\r\n\t        this.particlesPerSecond = particlesPerSecond;\r\n\t        this.particlesAtStart = particlesAtStart;\r\n\t        this.constant = constant;\r\n\t        this.color = color;\r\n\t    };\r\n\t    ParticleEmitter.prototype.load = function (url) {\r\n\t        this.http.get(url, function (data) {\r\n\t            var emitter = JSON.parse(data.responseText);\r\n\t        });\r\n\t    };\r\n\t    ParticleEmitter.prototype.toJson = function () {\r\n\t        return '';\r\n\t    };\r\n\t    ParticleEmitter.prototype.update = function (delta) {\r\n\t        this.vertices = [];\r\n\t        this.sizes = [];\r\n\t        if (this.constant) {\r\n\t            var numParticles = Math.ceil((delta / 1000) * this.particlesPerSecond);\r\n\t            for (var i = 0; i < numParticles; i += 1) {\r\n\t                this.particles.push(this.addParticle());\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            this.currentLife -= delta;\r\n\t            if (this.currentLife < 0) {\r\n\t                for (var i = 0; i < this.particlesAtStart; i += 1) {\r\n\t                    this.particles.push(this.addParticle());\r\n\t                }\r\n\t                this.currentLife = this.lifeCycle;\r\n\t            }\r\n\t        }\r\n\t        var length = this.particles.length;\r\n\t        for (var i = 0; i < length; i += 1) {\r\n\t            this.particles[i].update(this.gravity, this.wind, this.growth, delta);\r\n\t            if (this.particles[i].isDead()) {\r\n\t                this.particles.splice(i, 1);\r\n\t                length -= 1;\r\n\t            }\r\n\t            else {\r\n\t                this.vertices.push(this.particles[i].pos.x);\r\n\t                this.vertices.push(this.particles[i].pos.y);\r\n\t                this.sizes.push(this.particles[i].size);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    ParticleEmitter.prototype.addParticle = function () {\r\n\t        return new particle_1.Particle(new index_1.Point(this.pos.x, this.pos.y), new index_1.Point(this.randomMinMax(this.minDir.x, this.maxDir.x), this.randomMinMax(this.minDir.y, this.maxDir.y)), this.randomMinMax(this.minSize, this.maxSize), this.randomMinMax(this.minVel, this.maxVel), this.randomMinMax(this.minLife, this.maxLife), this.color.getAlpha());\r\n\t    };\r\n\t    ParticleEmitter.prototype.randomMinMax = function (min, max) {\r\n\t        return (Math.random() * (max - min)) + min;\r\n\t    };\r\n\t    return ParticleEmitter;\r\n\t}());\r\n\texports.ParticleEmitter = ParticleEmitter;\r\n\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar program_1 = __webpack_require__(2);\r\n\tvar vertexShader = 'attribute vec2 a_position;\\n' +\r\n\t    'attribute float a_pointSize;\\n' +\r\n\t    'uniform vec2 u_resolution;\\n' +\r\n\t    'void main() {\\n' +\r\n\t    '\tvec2 zeroToOne = a_position / u_resolution;\\n' +\r\n\t    '\tvec2 zeroToTwo = zeroToOne * 2.0;\\n' +\r\n\t    '\tvec2 clipSpace = zeroToTwo - 1.0;\\n' +\r\n\t    '\tgl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\\n' +\r\n\t    '\tgl_PointSize = a_pointSize;\\n' +\r\n\t    '}\\n';\r\n\tvar fragmentShader = 'precision mediump float;\\n' +\r\n\t    'uniform sampler2D u_image;\\n' +\r\n\t    'uniform vec4 u_color;\\n' +\r\n\t    'void main() {\\n' +\r\n\t    '\tvec4 baseTexture = texture2D(u_image, gl_PointCoord);\\n' +\r\n\t    '\tvec4 baseColor = u_color;\\n' +\r\n\t    '\tfloat alpha = u_color.w;\\n' +\r\n\t    '\tgl_FragColor = baseTexture * u_color;\\n' +\r\n\t    '}\\n';\r\n\tvar ParticleRenderer = (function () {\r\n\t    function ParticleRenderer(gl) {\r\n\t        this.width = 800;\r\n\t        this.height = 600;\r\n\t        this.gl = gl;\r\n\t        this.program = new program_1.Program(this.gl);\r\n\t        this.program.loadShader(program_1.ShaderType.VERTEX, vertexShader);\r\n\t        this.program.loadShader(program_1.ShaderType.FRAGMENT, fragmentShader);\r\n\t        this.program.createProgram();\r\n\t        this.init();\r\n\t    }\r\n\t    ParticleRenderer.prototype.init = function () {\r\n\t        var gl = this.gl;\r\n\t        this.resolution = gl.getUniformLocation(this.program.program, 'u_resolution');\r\n\t        this.colorLocation = gl.getUniformLocation(this.program.program, 'u_color');\r\n\t        this.pointSize = gl.getAttribLocation(this.program.program, 'a_pointSize');\r\n\t        this.position = gl.getAttribLocation(this.program.program, 'a_position');\r\n\t        this.vertexBuffer = gl.createBuffer();\r\n\t        this.sizeBuffer = gl.createBuffer();\r\n\t    };\r\n\t    ParticleRenderer.prototype.render = function (emitter) {\r\n\t        var gl = this.gl;\r\n\t        gl.useProgram(this.program.program);\r\n\t        gl.enable(gl.BLEND);\r\n\t        gl.blendFunc(emitter.blendSrc, emitter.blendDst);\r\n\t        gl.uniform2f(this.resolution, this.width, this.height);\r\n\t        gl.bindTexture(gl.TEXTURE_2D, emitter.texture.texture);\r\n\t        var col = emitter.color.getRGBAFloat();\r\n\t        gl.uniform4f(this.colorLocation, col[0], col[1], col[2], col[3]);\r\n\t        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n\t        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(emitter.vertices), gl.STATIC_DRAW);\r\n\t        gl.enableVertexAttribArray(this.position);\r\n\t        gl.vertexAttribPointer(this.position, 2, gl.FLOAT, false, 0, 0);\r\n\t        gl.bindBuffer(gl.ARRAY_BUFFER, this.sizeBuffer);\r\n\t        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(emitter.sizes), gl.STATIC_DRAW);\r\n\t        gl.enableVertexAttribArray(this.pointSize);\r\n\t        gl.vertexAttribPointer(this.pointSize, 1, gl.FLOAT, false, 0, 0);\r\n\t        gl.drawArrays(gl.POINTS, 0, emitter.vertices.length / 2);\r\n\t        gl.disableVertexAttribArray(this.position);\r\n\t        gl.disableVertexAttribArray(this.pointSize);\r\n\t    };\r\n\t    return ParticleRenderer;\r\n\t}());\r\n\texports.ParticleRenderer = ParticleRenderer;\r\n\n\n/***/ },\n/* 60 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar ParticleSystem = (function () {\r\n\t    function ParticleSystem() {\r\n\t    }\r\n\t    return ParticleSystem;\r\n\t}());\r\n\texports.ParticleSystem = ParticleSystem;\r\n\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar renderer2d_1 = __webpack_require__(62);\r\n\texports.Renderer2d = renderer2d_1.Renderer2d;\r\n\tvar render_call_1 = __webpack_require__(6);\r\n\texports.RenderCall = render_call_1.RenderCall;\r\n\tvar framebuffer_1 = __webpack_require__(12);\r\n\texports.FrameBuffer = framebuffer_1.FrameBuffer;\r\n\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar program_1 = __webpack_require__(2);\r\n\tvar render_call_1 = __webpack_require__(6);\r\n\tvar vertexShader = 'attribute vec2 a_position;\\n' +\r\n\t    'attribute vec2 a_texCoord;\\n' +\r\n\t    'varying vec2 v_texCoord;\\n' +\r\n\t    'uniform vec2 u_resolution;\\n' +\r\n\t    'uniform int u_flip;\\n' +\r\n\t    'void main() {\\n' +\r\n\t    '\tvec2 zeroToOne = a_position / u_resolution;\\n' +\r\n\t    '\tvec2 zeroToTwo = zeroToOne * 2.0;\\n' +\r\n\t    '\tvec2 clipSpace = zeroToTwo - 1.0;\\n' +\r\n\t    '   if (u_flip == 1) {\\n' +\r\n\t    '       gl_Position = vec4(clipSpace * vec2(1, 1), 0, 1);\\n' +\r\n\t    '\t} else {\\n' +\r\n\t    '       gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\\n' +\r\n\t    '   }\\n' +\r\n\t    '\tv_texCoord = a_texCoord;\\n' +\r\n\t    '}\\n';\r\n\tvar fragmentShader = 'precision mediump float;\\n' +\r\n\t    'uniform sampler2D u_image;\\n' +\r\n\t    'varying vec2 v_texCoord;\\n\\n' +\r\n\t    'void main() {\\n' +\r\n\t    '\tvec4 baseTexture = texture2D(u_image, v_texCoord);\\n' +\r\n\t    '\tgl_FragColor = baseTexture;\\n' +\r\n\t    '}\\n';\r\n\tvar Renderer2d = (function () {\r\n\t    function Renderer2d(gl) {\r\n\t        this.width = 800;\r\n\t        this.height = 600;\r\n\t        this.flipY = 0;\r\n\t        this.renderCalls = [];\r\n\t        this.gl = gl;\r\n\t        this.program = new program_1.Program(this.gl);\r\n\t        this.program.loadShader(program_1.ShaderType.VERTEX, vertexShader);\r\n\t        this.program.loadShader(program_1.ShaderType.FRAGMENT, fragmentShader);\r\n\t        this.program.createProgram();\r\n\t        this.init();\r\n\t    }\r\n\t    Renderer2d.prototype.init = function () {\r\n\t        var gl = this.gl;\r\n\t        this.resolution = gl.getUniformLocation(this.program.program, 'u_resolution');\r\n\t        this.flip = gl.getUniformLocation(this.program.program, 'u_flip');\r\n\t        this.position = gl.getAttribLocation(this.program.program, 'a_position');\r\n\t        this.textureCoordinates = gl.getAttribLocation(this.program.program, 'a_texCoord');\r\n\t        this.vertexBuffer = gl.createBuffer();\r\n\t        this.indexBuffer = gl.createBuffer();\r\n\t        this.texCoordBuffer = gl.createBuffer();\r\n\t    };\r\n\t    Renderer2d.prototype.addCall = function (renderCall) {\r\n\t        var found = false;\r\n\t        for (var i in this.renderCalls) {\r\n\t            if (this.renderCalls[i].texture === renderCall.texture) {\r\n\t                this.renderCalls[i].add(renderCall);\r\n\t                found = true;\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t        if (!found) {\r\n\t            this.renderCalls.push(new render_call_1.RenderCall());\r\n\t            var i = this.renderCalls.length - 1;\r\n\t            this.renderCalls[i].texture = renderCall.texture;\r\n\t            this.renderCalls[i].add(renderCall);\r\n\t        }\r\n\t    };\r\n\t    Renderer2d.prototype.clear = function () {\r\n\t        this.renderCalls = [];\r\n\t    };\r\n\t    Renderer2d.prototype.execute = function () {\r\n\t        this.flush();\r\n\t        this.clear();\r\n\t    };\r\n\t    Renderer2d.prototype.flush = function () {\r\n\t        var gl = this.gl;\r\n\t        gl.useProgram(this.program.program);\r\n\t        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n\t        gl.cullFace(gl.FRONT_AND_BACK);\r\n\t        gl.uniform2f(this.resolution, this.width, this.height);\r\n\t        gl.uniform1i(this.flip, this.flipY);\r\n\t        for (var call in this.renderCalls) {\r\n\t            gl.bindTexture(gl.TEXTURE_2D, this.renderCalls[call].texture);\r\n\t            gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n\t            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(this.renderCalls[call].vertices), gl.STATIC_DRAW);\r\n\t            gl.enableVertexAttribArray(this.position);\r\n\t            gl.vertexAttribPointer(this.position, 2, gl.FLOAT, false, 0, 0);\r\n\t            gl.bindBuffer(gl.ARRAY_BUFFER, this.texCoordBuffer);\r\n\t            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(this.renderCalls[call].uvs), gl.STATIC_DRAW);\r\n\t            gl.enableVertexAttribArray(this.textureCoordinates);\r\n\t            gl.vertexAttribPointer(this.textureCoordinates, 2, gl.FLOAT, false, 0, 0);\r\n\t            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n\t            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(this.renderCalls[call].indices), gl.STATIC_DRAW);\r\n\t            gl.drawElements(gl.TRIANGLES, this.renderCalls[call].numIndices, gl.UNSIGNED_SHORT, 0);\r\n\t        }\r\n\t    };\r\n\t    return Renderer2d;\r\n\t}());\r\n\texports.Renderer2d = Renderer2d;\r\n\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar program_1 = __webpack_require__(2);\r\n\texports.Program = program_1.Program;\r\n\tvar shader_manager_1 = __webpack_require__(64);\r\n\texports.ShaderManager = shader_manager_1.ShaderManager;\r\n\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar program_1 = __webpack_require__(2);\r\n\tvar ShaderManager = (function () {\r\n\t    function ShaderManager(gl) {\r\n\t        this.programs = {};\r\n\t        this.gl = gl;\r\n\t    }\r\n\t    ShaderManager.prototype.createProgram = function (fragmentShaderUrl, vertexShaderUrl, id) {\r\n\t        this.programs[id] = new program_1.Program(this.gl, fragmentShaderUrl, vertexShaderUrl);\r\n\t    };\r\n\t    ShaderManager.prototype.getProgram = function (id) {\r\n\t        return this.programs[id].getProgram();\r\n\t    };\r\n\t    ShaderManager.prototype.useProgram = function (id) {\r\n\t        this.gl.useProgram(this.programs[id].getProgram());\r\n\t    };\r\n\t    return ShaderManager;\r\n\t}());\r\n\texports.ShaderManager = ShaderManager;\r\n\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar render_call_1 = __webpack_require__(6);\r\n\tvar vector2d_1 = __webpack_require__(11);\r\n\tvar angle_1 = __webpack_require__(31);\r\n\tvar Sprite = (function () {\r\n\t    function Sprite(texture, width, height, uv) {\r\n\t        if (texture) {\r\n\t            this.texture = texture;\r\n\t        }\r\n\t        if (width && height) {\r\n\t            this.width = width;\r\n\t            this.height = height;\r\n\t        }\r\n\t        if (uv) {\r\n\t            this.setUVByPixels(uv[0], uv[1], uv[2], uv[3]);\r\n\t        }\r\n\t    }\r\n\t    Sprite.prototype.setUV = function (x0, y0, x1, y1) {\r\n\t        this.uv = [x0, y0, x1, y1];\r\n\t    };\r\n\t    Sprite.prototype.setUVByPixels = function (x, y, width, height) {\r\n\t        this.uv = [(x / this.texture.width), (y / this.texture.height), ((x + width) / this.texture.width), ((y + height) / this.texture.height)];\r\n\t    };\r\n\t    Sprite.prototype.render = function (renderer, x, y) {\r\n\t        var renderCall = new render_call_1.RenderCall();\r\n\t        renderCall.texture = this.texture.texture;\r\n\t        renderCall.vertices = [x, y, x + this.width, y, x, y + this.height, x + this.width, y + this.height];\r\n\t        renderCall.uvs = [this.uv[0], this.uv[1], this.uv[2], this.uv[1], this.uv[0], this.uv[3], this.uv[2], this.uv[3]];\r\n\t        renderCall.indices = [0, 1, 2, 1, 2, 3];\r\n\t        renderCall.numIndices = 6;\r\n\t        renderer.addCall(renderCall);\r\n\t    };\r\n\t    Sprite.prototype.renderScale = function (renderer, x, y, scale, scaleY) {\r\n\t        var renderCall = new render_call_1.RenderCall();\r\n\t        if (scaleY) {\r\n\t            renderCall.vertices = [x, y,\r\n\t                x + (this.width * scaleY), y,\r\n\t                x, y + (this.height * scale),\r\n\t                x + (this.width * scaleY), y + (this.height * scale)];\r\n\t        }\r\n\t        else {\r\n\t            renderCall.vertices = [x, y,\r\n\t                x + (this.width * scale), y,\r\n\t                x, y + (this.height * scale),\r\n\t                x + (this.width * scale), y + (this.height * scale)];\r\n\t        }\r\n\t        renderCall.texture = this.texture.texture;\r\n\t        renderCall.uvs = [this.uv[0], this.uv[1], this.uv[2], this.uv[1], this.uv[0], this.uv[3], this.uv[2], this.uv[3]];\r\n\t        renderCall.indices = [0, 1, 2, 1, 2, 3];\r\n\t        renderCall.numIndices = 6;\r\n\t        renderer.addCall(renderCall);\r\n\t    };\r\n\t    Sprite.prototype.renderAngle = function (renderer, x, y, angle) {\r\n\t        var vec = [];\r\n\t        var px = x + (this.width / 2);\r\n\t        var py = y + (this.height / 2);\r\n\t        vec[0] = new vector2d_1.Vector2(x, y);\r\n\t        vec[1] = new vector2d_1.Vector2(x + this.width, y);\r\n\t        vec[2] = new vector2d_1.Vector2(x, y + this.height);\r\n\t        vec[3] = new vector2d_1.Vector2(x + this.width, y + this.height);\r\n\t        for (var vector in vec) {\r\n\t            vec[vector] = vec[vector].rotatePivot(px, py, angle_1.degreeToRadian(angle));\r\n\t        }\r\n\t        var renderCall = new render_call_1.RenderCall();\r\n\t        renderCall.texture = this.texture.texture;\r\n\t        renderCall.vertices = [vec[0].x, vec[0].y,\r\n\t            vec[1].x, vec[1].y,\r\n\t            vec[2].x, vec[2].y,\r\n\t            vec[3].x, vec[3].y];\r\n\t        renderCall.uvs = [this.uv[0], this.uv[1], this.uv[2], this.uv[1], this.uv[0], this.uv[3], this.uv[2], this.uv[3]];\r\n\t        renderCall.indices = [0, 1, 2, 1, 2, 3];\r\n\t        renderCall.numIndices = 6;\r\n\t        renderer.addCall(renderCall);\r\n\t    };\r\n\t    Sprite.prototype.renderAngleScale = function (renderer, x, y, angle, scale, scaleY) {\r\n\t        var vec = [];\r\n\t        var px = x + ((this.width * scale) / 2);\r\n\t        var py = y + ((this.height * scale) / 2);\r\n\t        if (scaleY) {\r\n\t            vec[0] = new vector2d_1.Vector2(x, y);\r\n\t            vec[1] = new vector2d_1.Vector2(x + (this.width * scale), y);\r\n\t            vec[2] = new vector2d_1.Vector2(x, y + (this.height * scaleY));\r\n\t            vec[3] = new vector2d_1.Vector2(x + (this.width * scale), y + (this.height * scaleY));\r\n\t        }\r\n\t        else {\r\n\t            vec[0] = new vector2d_1.Vector2(x, y);\r\n\t            vec[1] = new vector2d_1.Vector2(x + (this.width * scale), y);\r\n\t            vec[2] = new vector2d_1.Vector2(x, y + (this.height * scale));\r\n\t            vec[3] = new vector2d_1.Vector2(x + (this.width * scale), y + (this.height * scale));\r\n\t        }\r\n\t        for (var vector in vec) {\r\n\t            vec[vector] = vec[vector].rotatePivot(px, py, angle_1.degreeToRadian(angle));\r\n\t        }\r\n\t        var renderCall = new render_call_1.RenderCall();\r\n\t        renderCall.texture = this.texture.texture;\r\n\t        renderCall.vertices = [vec[0].x, vec[0].y,\r\n\t            vec[1].x, vec[1].y,\r\n\t            vec[2].x, vec[2].y,\r\n\t            vec[3].x, vec[3].y];\r\n\t        renderCall.uvs = [this.uv[0], this.uv[1], this.uv[2], this.uv[1], this.uv[0], this.uv[3], this.uv[2], this.uv[3]];\r\n\t        renderCall.indices = [0, 1, 2, 1, 2, 3];\r\n\t        renderCall.numIndices = 6;\r\n\t        renderer.addCall(renderCall);\r\n\t    };\r\n\t    Sprite.prototype.renderFBO = function (renderer) {\r\n\t        var renderCall = new render_call_1.RenderCall();\r\n\t        renderCall.texture = this.texture.texture;\r\n\t        renderCall.vertices = [0, this.height, this.width, this.height, 0, 0, this.width, 0];\r\n\t        renderCall.uvs = [this.uv[0], this.uv[1], this.uv[2], this.uv[1], this.uv[0], this.uv[3], this.uv[2], this.uv[3]];\r\n\t        renderCall.indices = [0, 1, 2, 1, 2, 3];\r\n\t        renderCall.numIndices = 6;\r\n\t        renderer.addCall(renderCall);\r\n\t    };\r\n\t    return Sprite;\r\n\t}());\r\n\texports.Sprite = Sprite;\r\n\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar tilemap_1 = __webpack_require__(68);\r\n\texports.Tilemap = tilemap_1.Tilemap;\r\n\tvar tilemap_layer_1 = __webpack_require__(24);\r\n\texports.TilemapLayer = tilemap_layer_1.TilemapLayer;\r\n\tvar tileset_1 = __webpack_require__(25);\r\n\texports.Tileset = tileset_1.Tileset;\r\n\tvar tile_1 = __webpack_require__(67);\r\n\texports.Tile = tile_1.Tile;\r\n\n\n/***/ },\n/* 67 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Tile = (function () {\r\n\t    function Tile() {\r\n\t    }\r\n\t    return Tile;\r\n\t}());\r\n\texports.Tile = Tile;\r\n\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar tilemap_layer_1 = __webpack_require__(24);\r\n\tvar tileset_1 = __webpack_require__(25);\r\n\tvar color_1 = __webpack_require__(3);\r\n\tvar http_1 = __webpack_require__(7);\r\n\tvar resource_manager_1 = __webpack_require__(4);\r\n\tvar rectangle_1 = __webpack_require__(21);\r\n\tvar Tilemap = (function () {\r\n\t    function Tilemap(gl) {\r\n\t        this.layers = [];\r\n\t        this.tilesets = [];\r\n\t        this.backgroundColor = new color_1.Color(100, 100, 100, 1);\r\n\t        this.ready = false;\r\n\t        this.activeLayer = 0;\r\n\t        if (gl) {\r\n\t            this.gl = gl;\r\n\t        }\r\n\t        this.resourceManager = resource_manager_1.ResourceManager.getInstance();\r\n\t        this.http = new http_1.Http(false);\r\n\t    }\r\n\t    Tilemap.prototype.loadTiledMap = function (url) {\r\n\t        var _this = this;\r\n\t        this.resourceManager.addOther();\r\n\t        this.http.get(url, function (data) {\r\n\t            _this.parseTiledMap(data.responseText);\r\n\t        });\r\n\t    };\r\n\t    Tilemap.prototype.parseTiledMap = function (json) {\r\n\t        var map = JSON.parse(json);\r\n\t        this.width = map.width;\r\n\t        this.height = map.height;\r\n\t        this.tileWidth = map.tilewidth;\r\n\t        this.tileHeight = map.tileheight;\r\n\t        this.orientation = map.orientation;\r\n\t        this.renderOrder = map.renderorder;\r\n\t        this.nextObjectId = map.nextobjectid;\r\n\t        if (map.backgroundcolor) {\r\n\t            this.backgroundColor.setHex(map.backgroundcolor);\r\n\t        }\r\n\t        for (var _i = 0, _a = map.layers; _i < _a.length; _i++) {\r\n\t            var layer = _a[_i];\r\n\t            this.layers.push(new tilemap_layer_1.TilemapLayer(layer.data, layer.encoding, layer.width, layer.height, layer.x, layer.y, layer.opacity, layer.visible, layer.name, layer.type));\r\n\t        }\r\n\t        for (var _b = 0, _c = map.tilesets; _b < _c.length; _b++) {\r\n\t            var tileset = _c[_b];\r\n\t            this.tilesets.push(new tileset_1.Tileset(this.gl, tileset.name, tileset.image, tileset.imagewidth, tileset.imageheight, tileset.firstgid, tileset.margin, tileset.spacing, tileset.columns, tileset.tilecount, tileset.tilewidth, tileset.tileheight));\r\n\t        }\r\n\t        this.resourceManager.otherReady();\r\n\t    };\r\n\t    Tilemap.prototype.setActiveLayer = function (activeLayer) {\r\n\t        this.activeLayer = activeLayer;\r\n\t    };\r\n\t    Tilemap.prototype.getActiveLayer = function () {\r\n\t        return this.activeLayer;\r\n\t    };\r\n\t    Tilemap.prototype.getContainedTiles = function (container, scale) {\r\n\t        var tiles = [];\r\n\t        return tiles;\r\n\t    };\r\n\t    Tilemap.prototype.getTileAt = function (x, y, scale) {\r\n\t        var tile = {\r\n\t            id: 0\r\n\t        };\r\n\t        if (scale) {\r\n\t            var row = Math.floor(y / (this.tileHeight * scale));\r\n\t            var col = Math.floor(x / (this.tileWidth * scale));\r\n\t            var pos = (row * this.width) + col;\r\n\t            var tileData = this.layers[this.activeLayer].getTile(pos);\r\n\t            tile.id = tileData.tileid;\r\n\t            tile.row = tileData.row;\r\n\t            tile.col = tileData.col;\r\n\t            tile.collider = new rectangle_1.Rectangle((this.tileWidth * scale) * col, (this.tileHeight * scale) * row, (this.tileWidth * scale), (this.tileHeight * scale));\r\n\t        }\r\n\t        else {\r\n\t            var row = Math.floor(y / this.tileHeight);\r\n\t            var col = Math.floor(x / this.tileWidth);\r\n\t            var pos = (row * this.width) + col;\r\n\t            var tileData = this.layers[this.activeLayer].getTile(pos);\r\n\t            console.log(col, row, pos);\r\n\t            tile.id = tileData.tileid;\r\n\t            tile.row = tileData.row;\r\n\t            tile.col = tileData.col;\r\n\t            tile.collider = new rectangle_1.Rectangle(this.tileWidth * col, this.tileHeight * row, this.tileWidth, this.tileHeight);\r\n\t        }\r\n\t        return tile;\r\n\t    };\r\n\t    Tilemap.prototype.render = function (renderer, x, y, scale, scaleY) {\r\n\t        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\r\n\t            var layer = _a[_i];\r\n\t            if (layer.isVisible()) {\r\n\t                for (var i in layer.tiles) {\r\n\t                    var tileData = layer.getTile(+i);\r\n\t                    var tileX = this.tileWidth * tileData.col + x;\r\n\t                    var tileY = this.tileHeight * tileData.row + y;\r\n\t                    if (tileData.tileid !== 0) {\r\n\t                        for (var j in this.tilesets) {\r\n\t                            if (tileData.tileid >= this.tilesets[j].firstgid && tileData.tileid <= this.tilesets[j].lastgid) {\r\n\t                                this.tilesets[j].renderTile(renderer, tileX, tileY, tileData.tileid);\r\n\t                                break;\r\n\t                            }\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    Tilemap.prototype.renderScale = function (renderer, x, y, scale) {\r\n\t        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\r\n\t            var layer = _a[_i];\r\n\t            if (layer.isVisible()) {\r\n\t                for (var i in layer.tiles) {\r\n\t                    var tileData = layer.getTile(+i);\r\n\t                    var tileX = (this.tileWidth * scale) * tileData.col + x;\r\n\t                    var tileY = (this.tileHeight * scale) * tileData.row + y;\r\n\t                    if (tileData.tileid !== 0) {\r\n\t                        for (var j in this.tilesets) {\r\n\t                            if (tileData.tileid >= this.tilesets[j].firstgid && tileData.tileid <= this.tilesets[j].lastgid) {\r\n\t                                this.tilesets[j].renderTileScale(renderer, tileX, tileY, tileData.tileid, scale);\r\n\t                                break;\r\n\t                            }\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return Tilemap;\r\n\t}());\r\n\texports.Tilemap = Tilemap;\r\n\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar color_1 = __webpack_require__(3);\r\n\texports.Color = color_1.Color;\r\n\tvar surface2d_1 = __webpack_require__(27);\r\n\texports.Surface2d = surface2d_1.Surface2d;\r\n\tvar surface3d_1 = __webpack_require__(28);\r\n\texports.Surface3d = surface3d_1.Surface3d;\r\n\tvar sprite_1 = __webpack_require__(70);\r\n\texports.Sprite = sprite_1.Sprite;\r\n\n\n/***/ },\n/* 70 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Sprite = (function () {\r\n\t    function Sprite(url) {\r\n\t        this.loaded = false;\r\n\t        if (url) {\r\n\t            this.url = url;\r\n\t            this.load(this.url);\r\n\t        }\r\n\t    }\r\n\t    Sprite.prototype.load = function (url) {\r\n\t        var _this = this;\r\n\t        this.image = new Image();\r\n\t        this.image.src = url;\r\n\t        this.image.addEventListener('load', function (event) {\r\n\t            _this.loadHandler(event);\r\n\t        });\r\n\t        this.image.addEventListener('error', _this.errorHandler);\r\n\t    };\r\n\t    Sprite.prototype.render = function (context, x, y) {\r\n\t        context.drawImage(this.image, x, y);\r\n\t    };\r\n\t    Sprite.prototype.renderSize = function (context, x, y, width, height) {\r\n\t        context.drawImage(this.image, x, y, width, height);\r\n\t    };\r\n\t    Sprite.prototype.renderSegment = function (context, x, y, segmentX, segmentY, segmentWidth, segmentHeight) {\r\n\t        context.drawImage(this.image, segmentX, segmentY, segmentWidth, segmentHeight, x, y, this.width, this.height);\r\n\t    };\r\n\t    Sprite.prototype.renderSegmentSize = function (context, x, y, width, height, segmentX, segmentY, segmentWidth, segmentHeight) {\r\n\t        context.drawImage(this.image, segmentX, segmentY, segmentWidth, segmentHeight, x, y, width, height);\r\n\t    };\r\n\t    Sprite.prototype.errorHandler = function (event) {\r\n\t        throw new Error('Failed to load sprite.');\r\n\t    };\r\n\t    Sprite.prototype.loadHandler = function (event) {\r\n\t        this.loaded = true;\r\n\t        this.width = this.image.width;\r\n\t        this.height = this.image.height;\r\n\t    };\r\n\t    return Sprite;\r\n\t}());\r\n\texports.Sprite = Sprite;\r\n\n\n/***/ },\n/* 71 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Controller = (function () {\r\n\t    function Controller() {\r\n\t        this.index = 0;\r\n\t        this.connected = false;\r\n\t        var _this = this;\r\n\t        if (Controller.instance) {\r\n\t            throw new Error('Error: Instantiation failed, Use Mouse.getInstance() instead of new.');\r\n\t        }\r\n\t        Controller.instance = this;\r\n\t        var gamepads = navigator.getGamepads();\r\n\t        if (gamepads[0] && gamepads[0].connected) {\r\n\t            this.connected = true;\r\n\t        }\r\n\t        window.addEventListener('gamepadconnected', function (event) {\r\n\t            console.log('Connecting gamepad ' + event.gamepad.id);\r\n\t            _this.setupController(event);\r\n\t        });\r\n\t    }\r\n\t    Controller.getInstance = function () {\r\n\t        return Controller.instance;\r\n\t    };\r\n\t    Controller.prototype.setupController = function (controller) {\r\n\t        this.buttons = controller.gamepad.buttons;\r\n\t        this.axes = controller.gamepad.axes;\r\n\t        this.id = controller.gamepad.id;\r\n\t        this.index = controller.gamepad.index;\r\n\t        this.mapping = controller.gamepad.mapping;\r\n\t        this.connected = controller.gamepad.connected;\r\n\t    };\r\n\t    Controller.prototype.update = function (delta) {\r\n\t        var gamepad = navigator.getGamepads()[this.index];\r\n\t        this.buttons = gamepad.buttons;\r\n\t        this.axes = gamepad.axes;\r\n\t    };\r\n\t    Controller.instance = new Controller();\r\n\t    return Controller;\r\n\t}());\r\n\texports.Controller = Controller;\r\n\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar mouse_1 = __webpack_require__(74);\r\n\texports.Mouse = mouse_1.Mouse;\r\n\tvar keyboard_1 = __webpack_require__(73);\r\n\texports.Keyboard = keyboard_1.Keyboard;\r\n\texports.Key = keyboard_1.Key;\r\n\tvar touch_1 = __webpack_require__(75);\r\n\texports.Touch = touch_1.Touch;\r\n\tvar controller_1 = __webpack_require__(71);\r\n\texports.Controller = controller_1.Controller;\r\n\n\n/***/ },\n/* 73 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t(function (Key) {\r\n\t    Key[Key['BACKSPACE'] = 8] = 'BACKSPACE';\r\n\t    Key[Key['TAB'] = 9] = 'TAB';\r\n\t    Key[Key['ENTER'] = 13] = 'ENTER';\r\n\t    Key[Key['SHIFT'] = 16] = 'SHIFT';\r\n\t    Key[Key['CTRL'] = 17] = 'CTRL';\r\n\t    Key[Key['ALT'] = 18] = 'ALT';\r\n\t    Key[Key['PAUSE'] = 19] = 'PAUSE';\r\n\t    Key[Key['CAPS'] = 20] = 'CAPS';\r\n\t    Key[Key['ESCAPE'] = 27] = 'ESCAPE';\r\n\t    Key[Key['PAGEUP'] = 33] = 'PAGEUP';\r\n\t    Key[Key['PAGEDOWN'] = 34] = 'PAGEDOWN';\r\n\t    Key[Key['END'] = 35] = 'END';\r\n\t    Key[Key['HOME'] = 36] = 'HOME';\r\n\t    Key[Key['LEFT'] = 37] = 'LEFT';\r\n\t    Key[Key['UP'] = 38] = 'UP';\r\n\t    Key[Key['RIGHT'] = 39] = 'RIGHT';\r\n\t    Key[Key['DOWN'] = 40] = 'DOWN';\r\n\t    Key[Key['INSERT'] = 45] = 'INSERT';\r\n\t    Key[Key['DELETE'] = 46] = 'DELETE';\r\n\t    Key[Key['ZERO'] = 48] = 'ZERO';\r\n\t    Key[Key['ONE'] = 49] = 'ONE';\r\n\t    Key[Key['TWO'] = 50] = 'TWO';\r\n\t    Key[Key['THREE'] = 51] = 'THREE';\r\n\t    Key[Key['FOUR'] = 52] = 'FOUR';\r\n\t    Key[Key['FIVE'] = 53] = 'FIVE';\r\n\t    Key[Key['SIX'] = 54] = 'SIX';\r\n\t    Key[Key['SEVEN'] = 55] = 'SEVEN';\r\n\t    Key[Key['EIGHT'] = 56] = 'EIGHT';\r\n\t    Key[Key['NINE'] = 57] = 'NINE';\r\n\t    Key[Key['A'] = 65] = 'A';\r\n\t    Key[Key['B'] = 66] = 'B';\r\n\t    Key[Key['C'] = 67] = 'C';\r\n\t    Key[Key['D'] = 68] = 'D';\r\n\t    Key[Key['E'] = 69] = 'E';\r\n\t    Key[Key['F'] = 70] = 'F';\r\n\t    Key[Key['G'] = 71] = 'G';\r\n\t    Key[Key['H'] = 72] = 'H';\r\n\t    Key[Key['I'] = 73] = 'I';\r\n\t    Key[Key['J'] = 74] = 'J';\r\n\t    Key[Key['K'] = 75] = 'K';\r\n\t    Key[Key['L'] = 76] = 'L';\r\n\t    Key[Key['M'] = 77] = 'M';\r\n\t    Key[Key['N'] = 78] = 'N';\r\n\t    Key[Key['O'] = 79] = 'O';\r\n\t    Key[Key['P'] = 80] = 'P';\r\n\t    Key[Key['Q'] = 81] = 'Q';\r\n\t    Key[Key['R'] = 82] = 'R';\r\n\t    Key[Key['S'] = 83] = 'S';\r\n\t    Key[Key['T'] = 84] = 'T';\r\n\t    Key[Key['U'] = 85] = 'U';\r\n\t    Key[Key['V'] = 86] = 'V';\r\n\t    Key[Key['W'] = 87] = 'W';\r\n\t    Key[Key['Y'] = 88] = 'Y';\r\n\t    Key[Key['X'] = 89] = 'X';\r\n\t    Key[Key['Z'] = 90] = 'Z';\r\n\t    Key[Key['LEFTSUPER'] = 91] = 'LEFTSUPER';\r\n\t    Key[Key['RIGHTSUPER'] = 92] = 'RIGHTSUPER';\r\n\t    Key[Key['SELECT'] = 93] = 'SELECT';\r\n\t    Key[Key['NUM0'] = 96] = 'NUM0';\r\n\t    Key[Key['NUM1'] = 97] = 'NUM1';\r\n\t    Key[Key['NUM2'] = 98] = 'NUM2';\r\n\t    Key[Key['NUM3'] = 99] = 'NUM3';\r\n\t    Key[Key['NUM4'] = 100] = 'NUM4';\r\n\t    Key[Key['NUM5'] = 101] = 'NUM5';\r\n\t    Key[Key['NUM6'] = 102] = 'NUM6';\r\n\t    Key[Key['NUM7'] = 103] = 'NUM7';\r\n\t    Key[Key['NUM8'] = 104] = 'NUM8';\r\n\t    Key[Key['NUM9'] = 105] = 'NUM9';\r\n\t    Key[Key['MULTIPLY'] = 106] = 'MULTIPLY';\r\n\t    Key[Key['ADD'] = 107] = 'ADD';\r\n\t    Key[Key['SUBSTRACT'] = 108] = 'SUBSTRACT';\r\n\t    Key[Key['DECIMAL'] = 110] = 'DECIMAL';\r\n\t    Key[Key['DIVIDE'] = 111] = 'DIVIDE';\r\n\t    Key[Key['F1'] = 112] = 'F1';\r\n\t    Key[Key['F2'] = 113] = 'F2';\r\n\t    Key[Key['F3'] = 114] = 'F3';\r\n\t    Key[Key['F4'] = 115] = 'F4';\r\n\t    Key[Key['F5'] = 116] = 'F5';\r\n\t    Key[Key['F7'] = 118] = 'F7';\r\n\t    Key[Key['F8'] = 119] = 'F8';\r\n\t    Key[Key['F9'] = 120] = 'F9';\r\n\t    Key[Key['F10'] = 121] = 'F10';\r\n\t    Key[Key['F11'] = 122] = 'F11';\r\n\t    Key[Key['F12'] = 123] = 'F12';\r\n\t    Key[Key['NUMLOCK'] = 144] = 'NUMLOCK';\r\n\t    Key[Key['SCROLLLOCK'] = 145] = 'SCROLLLOCK';\r\n\t    Key[Key['SEMICOLON'] = 186] = 'SEMICOLON';\r\n\t    Key[Key['EQUAL'] = 187] = 'EQUAL';\r\n\t    Key[Key['COMMA'] = 188] = 'COMMA';\r\n\t    Key[Key['DASH'] = 189] = 'DASH';\r\n\t    Key[Key['PERIOD'] = 190] = 'PERIOD';\r\n\t    Key[Key['FORWARDSLASH'] = 191] = 'FORWARDSLASH';\r\n\t    Key[Key['GRAVEACCENT'] = 192] = 'GRAVEACCENT';\r\n\t    Key[Key['OPENBRACKET'] = 219] = 'OPENBRACKET';\r\n\t    Key[Key['BACKSLASH'] = 220] = 'BACKSLASH';\r\n\t    Key[Key['CLOSEBRAKET'] = 221] = 'CLOSEBRAKET';\r\n\t    Key[Key['SINGLEQUOTE'] = 222] = 'SINGLEQUOTE';\r\n\t})(exports.Key || (exports.Key = {}));\r\n\tvar Key = exports.Key;\r\n\t;\r\n\tvar Keyboard = (function () {\r\n\t    function Keyboard() {\r\n\t        this.keys = [];\r\n\t        this.preventDefault = false;\r\n\t        this.stopPropagation = false;\r\n\t        this.keyLogger = false;\r\n\t        if (Keyboard.instance) {\r\n\t            throw new Error('Error: Instantiation failed, Use Keyboard.getInstance() instead of new.');\r\n\t        }\r\n\t        Keyboard.instance = this;\r\n\t        var _this = this;\r\n\t        for (var i = 0; i < 256; i++) {\r\n\t            this.keys[i] = false;\r\n\t        }\r\n\t        window.addEventListener('keydown', function (event) {\r\n\t            _this.handleKeydown(event);\r\n\t        });\r\n\t        window.addEventListener('keyup', function (event) {\r\n\t            _this.handleKeyup(event);\r\n\t        });\r\n\t    }\r\n\t    Keyboard.getInstance = function () {\r\n\t        return Keyboard.instance;\r\n\t    };\r\n\t    Keyboard.prototype.clearKeys = function () {\r\n\t        for (var key in this.keys) {\r\n\t            this.keys[key] = false;\r\n\t        }\r\n\t    };\r\n\t    Keyboard.prototype.handleKeydown = function (event) {\r\n\t        if (this.preventDefault) {\r\n\t            event.preventDefault();\r\n\t        }\r\n\t        if (this.stopPropagation) {\r\n\t            event.stopPropagation();\r\n\t        }\r\n\t        this.keys[event.keyCode] = true;\r\n\t    };\r\n\t    Keyboard.prototype.handleKeyup = function (event) {\r\n\t        if (this.preventDefault) {\r\n\t            event.preventDefault();\r\n\t        }\r\n\t        if (this.stopPropagation) {\r\n\t            event.stopPropagation();\r\n\t        }\r\n\t        this.keys[event.keyCode] = false;\r\n\t    };\r\n\t    Keyboard.instance = new Keyboard();\r\n\t    return Keyboard;\r\n\t}());\r\n\texports.Keyboard = Keyboard;\r\n\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar gamesaw_1 = __webpack_require__(20);\r\n\tvar Mouse = (function () {\r\n\t    function Mouse() {\r\n\t        this.stopPropagation = false;\r\n\t        this.preventDefault = false;\r\n\t        if (Mouse.instance) {\r\n\t            throw new Error('Error: Instantiation failed, Use Mouse.getInstance() instead of new.');\r\n\t        }\r\n\t        Mouse.instance = this;\r\n\t        this.button = [false, false, false];\r\n\t        this.click = [false, false, false];\r\n\t    }\r\n\t    Mouse.prototype.init = function () {\r\n\t        var _this = this;\r\n\t        this.container = document.getElementById(gamesaw_1.CONTAINER_ID);\r\n\t        this.container.addEventListener('click', function (event) {\r\n\t            _this.handleClick(event);\r\n\t        });\r\n\t        this.container.addEventListener('mousemove', function (event) {\r\n\t            _this.calculateMousePosition(event);\r\n\t        });\r\n\t        this.container.addEventListener('mousedown', function (event) {\r\n\t            _this.handleMouseDown(event);\r\n\t        });\r\n\t        this.container.addEventListener('mouseup', function (event) {\r\n\t            _this.handleMouseUp(event);\r\n\t        });\r\n\t    };\r\n\t    Mouse.getInstance = function () {\r\n\t        return Mouse.instance;\r\n\t    };\r\n\t    Mouse.prototype.clearClicks = function () {\r\n\t        this.click = [false, false, false];\r\n\t    };\r\n\t    Mouse.prototype.handleClick = function (event) {\r\n\t        if (this.preventDefault) {\r\n\t            event.preventDefault();\r\n\t        }\r\n\t        if (this.stopPropagation) {\r\n\t            event.stopPropagation();\r\n\t        }\r\n\t        this.click[event.button] = true;\r\n\t    };\r\n\t    Mouse.prototype.handleMouseDown = function (event) {\r\n\t        if (this.preventDefault) {\r\n\t            event.preventDefault();\r\n\t        }\r\n\t        if (this.stopPropagation) {\r\n\t            event.stopPropagation();\r\n\t        }\r\n\t        this.button[event.button] = true;\r\n\t    };\r\n\t    Mouse.prototype.handleMouseUp = function (event) {\r\n\t        if (this.preventDefault) {\r\n\t            event.preventDefault();\r\n\t        }\r\n\t        if (this.stopPropagation) {\r\n\t            event.stopPropagation();\r\n\t        }\r\n\t        this.button[event.button] = false;\r\n\t    };\r\n\t    Mouse.prototype.calculateMousePosition = function (event) {\r\n\t        if (event.pageX && event.pageY) {\r\n\t            this.x = event.pageX;\r\n\t            this.y = event.pageY;\r\n\t        }\r\n\t        else {\r\n\t            this.x = event.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\r\n\t            this.y = event.clientY + document.body.scrollTop + document.documentElement.scrollTop;\r\n\t        }\r\n\t        this.x -= this.container.offsetLeft;\r\n\t        this.y -= this.container.offsetTop;\r\n\t    };\r\n\t    Mouse.instance = new Mouse();\r\n\t    return Mouse;\r\n\t}());\r\n\texports.Mouse = Mouse;\r\n\n\n/***/ },\n/* 75 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Touch = (function () {\r\n\t    function Touch() {\r\n\t    }\r\n\t    return Touch;\r\n\t}());\r\n\texports.Touch = Touch;\r\n\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar angle_1 = __webpack_require__(31);\r\n\texports.degreeToRadian = angle_1.degreeToRadian;\r\n\texports.radianToDegree = angle_1.radianToDegree;\r\n\tvar http_1 = __webpack_require__(7);\r\n\texports.Http = http_1.Http;\r\n\tvar utility_1 = __webpack_require__(8);\r\n\texports.PI = utility_1.PI;\r\n\texports.capitalize = utility_1.capitalize;\r\n\tvar resource_manager_1 = __webpack_require__(4);\r\n\texports.ResourceManager = resource_manager_1.ResourceManager;\r\n\n\n/***/ },\n/* 77 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar gamesaw = __webpack_require__(9);\r\n\tvar projectile_1 = __webpack_require__(32);\r\n\tvar Enemy = (function () {\r\n\t    function Enemy(gl, texture, collider) {\r\n\t        this.health = 5;\r\n\t        this.armor = 0;\r\n\t        this.damage = 10;\r\n\t        this.worth = 100;\r\n\t        this.dead = false;\r\n\t        this.speed = 0.07;\r\n\t        this.fireTimeout = 0;\r\n\t        this.msBetweenRounds = 1000;\r\n\t        this.projectiles = [];\r\n\t        this.gl = gl;\r\n\t        this.texture = texture;\r\n\t        this.collider = collider;\r\n\t        this.baseSprite = new gamesaw.GL.Sprite(this.texture, 16, 16, [400, 0, 16, 16]);\r\n\t        this.dirSprite = new gamesaw.GL.Sprite(this.texture, 16, 16, [416, 16, 16, 16]);\r\n\t        this.direction = new gamesaw.Geometry.Vector2(0.0, 0.0);\r\n\t        this.msBetweenRounds = Math.random() * 1000 - 500 + 1000;\r\n\t    }\r\n\t    Enemy.prototype.update = function (delta, player) {\r\n\t        this.direction = this.seek(new gamesaw.Geometry.Vector2(player.collider.pos.x, player.collider.pos.y));\r\n\t        this.updateMovement(this.direction, delta);\r\n\t        this.fireTimeout += delta;\r\n\t        if (this.fireTimeout > this.msBetweenRounds) {\r\n\t            this.fireTimeout = 0;\r\n\t            this.projectiles.push(new projectile_1.Projectile(this.gl, this.texture, new gamesaw.Geometry.Circle(this.collider.pos.x, this.collider.pos.y, 3), 0.6, this.damage, this.direction.copy()));\r\n\t        }\r\n\t        for (var i in this.projectiles) {\r\n\t            this.projectiles[+i].update(delta);\r\n\t            if (this.projectiles[+i].isDead()) {\r\n\t                this.projectiles.splice(+i, 1);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    Enemy.prototype.render = function (renderer) {\r\n\t        // this.baseSprite.renderScale(renderer, this.collider.pos.x - this.collider.radius, this.collider.pos.y - this.collider.radius, 2);\r\n\t        this.baseSprite.renderAngleScale(renderer, this.collider.pos.x - this.collider.radius, this.collider.pos.y - this.collider.radius, gamesaw.Utility.radianToDegree(this.direction.angle()), 2);\r\n\t        for (var i in this.projectiles) {\r\n\t            this.projectiles[+i].render(renderer);\r\n\t        }\r\n\t    };\r\n\t    Enemy.prototype.getProjectiles = function () {\r\n\t        return this.projectiles;\r\n\t    };\r\n\t    Enemy.prototype.getCollider = function () {\r\n\t        return this.collider;\r\n\t    };\r\n\t    Enemy.prototype.getWorth = function () {\r\n\t        return this.worth;\r\n\t    };\r\n\t    Enemy.prototype.doDamage = function (damage) {\r\n\t        this.health -= damage;\r\n\t        if (this.health < 0) {\r\n\t            this.dead = true;\r\n\t        }\r\n\t    };\r\n\t    Enemy.prototype.isDead = function () {\r\n\t        return this.dead;\r\n\t    };\r\n\t    Enemy.prototype.seek = function (playerPosition) {\r\n\t        var positionVector = new gamesaw.Geometry.Vector2(this.collider.pos.x, this.collider.pos.y);\r\n\t        return playerPosition.sub(positionVector).normalize();\r\n\t    };\r\n\t    Enemy.prototype.updateMovement = function (direction, delta) {\r\n\t        var position = new gamesaw.Geometry.Vector2(this.collider.pos.x, this.collider.pos.y);\r\n\t        direction = direction.scale(this.speed * delta);\r\n\t        position = position.add(direction);\r\n\t        this.collider.setX(position.x);\r\n\t        this.collider.setY(position.y);\r\n\t    };\r\n\t    return Enemy;\r\n\t}());\r\n\texports.Enemy = Enemy;\r\n\n\n/***/ },\n/* 78 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar gamesaw = __webpack_require__(9);\r\n\tvar player_1 = __webpack_require__(79);\r\n\tvar enemy_1 = __webpack_require__(77);\r\n\tvar Game = (function () {\r\n\t    function Game() {\r\n\t        this.width = 800;\r\n\t        this.height = 600;\r\n\t        this.targetFps = 60;\r\n\t        this.backgroundColor = new gamesaw.Graphics.Color(50, 50, 50);\r\n\t        this.enemies = [];\r\n\t        this.splatter = [];\r\n\t        this.paused = true;\r\n\t        this.showGameover = false;\r\n\t        this.showStartGame = true;\r\n\t        this.killCount = 0;\r\n\t        this.startTimeout = 0;\r\n\t        // Powerup & Weapon spawn\r\n\t        this.spawns = [];\r\n\t        this.spawnTimeout = 0;\r\n\t        this.spawnTime = 10000;\r\n\t        this.spawnSprites = [];\r\n\t        // Enemy spawn\r\n\t        this.enemyPoints = [\r\n\t            new gamesaw.Geometry.Point(400, 100),\r\n\t            new gamesaw.Geometry.Point(50, 350),\r\n\t            new gamesaw.Geometry.Point(750, 350),\r\n\t            new gamesaw.Geometry.Point(400, 560)\r\n\t        ];\r\n\t        this.enemyTimeout = 0;\r\n\t        this.enemyTime = 1000;\r\n\t        var that = this;\r\n\t        this.application = new gamesaw.Application(this.width, this.height, this.targetFps);\r\n\t        this.scene = this.application.sceneManager.addScene('menu');\r\n\t        this.scene.add3dSurface('main');\r\n\t        this.scene.render = function (delta) {\r\n\t            that.render(delta);\r\n\t        };\r\n\t        this.scene.update = function (delta) {\r\n\t            that.update(delta);\r\n\t        };\r\n\t        this.gl = this.scene.getContext('main');\r\n\t        var bgCol = this.backgroundColor.getRGBAFloat();\r\n\t        this.gl.clearColor(bgCol[0], bgCol[1], bgCol[2], 1);\r\n\t        this.mouse = gamesaw.Input.Mouse.getInstance();\r\n\t        this.keyboard = gamesaw.Input.Keyboard.getInstance();\r\n\t        this.mouse.init();\r\n\t        this.renderer = new gamesaw.GL.Render2d.Renderer2d(this.gl);\r\n\t        this.texture = new gamesaw.GL.Texture(this.gl, '../assets/img/texture.png');\r\n\t        this.texture.width = 512;\r\n\t        this.texture.height = 512;\r\n\t        this.backgroundSprite = new gamesaw.GL.Sprite(this.texture, 400, 300, [0, 0, 400, 300]);\r\n\t        this.healthSprite = new gamesaw.GL.Sprite(this.texture, 7, 7, [432, 0, 7, 7]);\r\n\t        this.armorSprite = new gamesaw.GL.Sprite(this.texture, 7, 7, [440, 0, 7, 7]);\r\n\t        this.gameoverSprite = new gamesaw.GL.Sprite(this.texture, 160, 32, [0, 304, 160, 32]);\r\n\t        this.getPsychedSprite = new gamesaw.GL.Sprite(this.texture, 160, 32, [0, 340, 160, 32]);\r\n\t        this.splatterSprite = new gamesaw.GL.Sprite(this.texture, 16, 16, [432, 16, 16, 16]);\r\n\t        this.spawnSprites = [\r\n\t            new gamesaw.GL.Sprite(this.texture, 32, 16, [400, 64, 32, 16]),\r\n\t            new gamesaw.GL.Sprite(this.texture, 32, 16, [400, 48, 32, 16]),\r\n\t            new gamesaw.GL.Sprite(this.texture, 16, 16, [400, 32, 16, 16]),\r\n\t            new gamesaw.GL.Sprite(this.texture, 16, 16, [416, 32, 16, 16]),\r\n\t            new gamesaw.GL.Sprite(this.texture, 16, 16, [432, 32, 16, 16]),\r\n\t            new gamesaw.GL.Sprite(this.texture, 16, 16, [448, 32, 16, 16]),\r\n\t            new gamesaw.GL.Sprite(this.texture, 16, 16, [464, 32, 16, 16]) // Quad damage\r\n\t        ];\r\n\t        this.fontRenderer = new gamesaw.GL.Font.FontRenderer(this.gl);\r\n\t        this.font = new gamesaw.GL.Font.Font(this.gl, '../assets/data/default.xml');\r\n\t        this.player = new player_1.Player(this.gl, this.texture);\r\n\t        this.application.init();\r\n\t    }\r\n\t    Game.prototype.update = function (delta) {\r\n\t        var key = gamesaw.Input.Key;\r\n\t        if (this.keyboard.keys[key['PAUSE']] || this.keyboard.keys[key['P']]) {\r\n\t            this.paused = !this.paused;\r\n\t            this.keyboard.keys[key['PAUSE']] = false;\r\n\t            this.keyboard.keys[key['P']] = false;\r\n\t        }\r\n\t        if (!this.paused) {\r\n\t            this.player.update(delta);\r\n\t            this.updateEnemies(delta);\r\n\t            this.updatePowerupWeaponSpawn(delta);\r\n\t            for (var s in this.spawns) {\r\n\t                if (gamesaw.Geometry.intersects(this.player.collider, this.spawns[+s].collider)) {\r\n\t                    if (this.spawns[+s].type === 'weapon') {\r\n\t                        this.player.applyWeapon(this.spawns[+s].id, this.spawns[+s].sprite);\r\n\t                    }\r\n\t                    else {\r\n\t                        this.player.applyPowerUp(this.spawns[+s].id, this.spawns[+s].sprite);\r\n\t                    }\r\n\t                    this.spawns.splice(+s, 1);\r\n\t                }\r\n\t            }\r\n\t            this.checkProjectileCollision();\r\n\t            if (this.player.health < 0) {\r\n\t                this.paused = true;\r\n\t                this.showGameover = true;\r\n\t                this.startTimeout = 1000;\r\n\t            }\r\n\t        }\r\n\t        if (this.showGameover) {\r\n\t            this.startTimeout -= delta;\r\n\t            if (this.mouse.button[0] && this.startTimeout < 0) {\r\n\t                this.resetGame();\r\n\t            }\r\n\t        }\r\n\t        if (this.showStartGame) {\r\n\t            if (this.mouse.button[0]) {\r\n\t                this.showStartGame = false;\r\n\t                this.paused = false;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    Game.prototype.render = function (delta) {\r\n\t        this.scene.clear('main');\r\n\t        this.backgroundSprite.renderScale(this.renderer, 0, 0, 2);\r\n\t        for (var _i = 0, _a = this.splatter; _i < _a.length; _i++) {\r\n\t            var gore = _a[_i];\r\n\t            this.splatterSprite.renderScale(this.renderer, gore.x, gore.y, 2);\r\n\t        }\r\n\t        this.player.render(this.renderer);\r\n\t        for (var e in this.enemies) {\r\n\t            this.enemies[+e].render(this.renderer);\r\n\t        }\r\n\t        for (var s in this.spawns) {\r\n\t            var collider = this.spawns[+s].collider;\r\n\t            this.spawns[+s].sprite.renderScale(this.renderer, collider.pos.x - collider.halfWidth, collider.pos.y - collider.halfHeight, 2);\r\n\t        }\r\n\t        this.renderStatus();\r\n\t        this.renderer.execute();\r\n\t        this.fontRenderer.execute();\r\n\t    };\r\n\t    Game.prototype.renderStatus = function () {\r\n\t        var healthWidth = 70 * (this.player.health / this.player.maxHealth);\r\n\t        var armorWidth = 70 * (this.player.armor / this.player.maxArmor);\r\n\t        if (armorWidth < 0) {\r\n\t            armorWidth = 0;\r\n\t        }\r\n\t        if (healthWidth < 0) {\r\n\t            healthWidth = 0;\r\n\t        }\r\n\t        this.healthSprite.width = healthWidth;\r\n\t        this.armorSprite.width = armorWidth;\r\n\t        this.healthSprite.renderScale(this.renderer, 450, 10, 2);\r\n\t        this.armorSprite.renderScale(this.renderer, 450, 38, 2);\r\n\t        this.font.align = 2;\r\n\t        this.font.drawString(this.fontRenderer, this.player.getScore(), 770, 16);\r\n\t        // 44, 6\r\n\t        this.font.align = 1;\r\n\t        this.font.drawString(this.fontRenderer, this.killCount.toString(), 88, 8);\r\n\t        // 180, 7\r\n\t        this.font.drawString(this.fontRenderer, this.player.getAmmo(), 360, 10);\r\n\t        if (this.showGameover) {\r\n\t            this.gameoverSprite.renderScale(this.renderer, 240, 176, 2);\r\n\t        }\r\n\t        if (this.showStartGame) {\r\n\t            this.getPsychedSprite.renderScale(this.renderer, 240, 176, 2);\r\n\t        }\r\n\t    };\r\n\t    Game.prototype.updatePowerupWeaponSpawn = function (delta) {\r\n\t        this.spawnTimeout += delta;\r\n\t        if (this.spawnTimeout > this.spawnTime) {\r\n\t            this.spawnTimeout = 0;\r\n\t            var weaponSpawn = (Math.random() * 10 > 7);\r\n\t            if (weaponSpawn) {\r\n\t                var weaponType = (Math.random() * 10 > 7) ? 1 : 2;\r\n\t                var x = (Math.random() * 600) + 100;\r\n\t                var y = (Math.random() * 400) + 150;\r\n\t                var sprite = this.spawnSprites[weaponType - 1];\r\n\t                this.spawns.push({ type: 'weapon', id: weaponType, collider: new gamesaw.Geometry.AABB(x, y, 32, 16), sprite: sprite });\r\n\t            }\r\n\t            else {\r\n\t                var powerupType = Math.floor(Math.random() * 5);\r\n\t                var x = (Math.random() * 600) + 100;\r\n\t                var y = (Math.random() * 400) + 150;\r\n\t                var sprite = void 0;\r\n\t                switch (powerupType) {\r\n\t                    case 0:\r\n\t                        sprite = this.spawnSprites[2];\r\n\t                        break;\r\n\t                    case 1:\r\n\t                        sprite = this.spawnSprites[3];\r\n\t                        break;\r\n\t                    case 2:\r\n\t                        sprite = this.spawnSprites[4];\r\n\t                        break;\r\n\t                    case 3:\r\n\t                        sprite = this.spawnSprites[5];\r\n\t                        break;\r\n\t                    case 4:\r\n\t                        sprite = this.spawnSprites[6];\r\n\t                        break;\r\n\t                    case 5:\r\n\t                        sprite = this.spawnSprites[2];\r\n\t                        break;\r\n\t                }\r\n\t                this.spawns.push({ type: 'powerup', id: powerupType, collider: new gamesaw.Geometry.AABB(x, y, 16, 16), sprite: sprite });\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    Game.prototype.updateEnemies = function (delta) {\r\n\t        for (var e in this.enemies) {\r\n\t            this.enemies[+e].update(delta, this.player);\r\n\t            if (this.enemies[+e].isDead()) {\r\n\t                this.killCount += 1;\r\n\t                this.player.addScore(this.enemies[+e].getWorth());\r\n\t                this.splatter.push(new gamesaw.Geometry.Point(this.enemies[+e].collider.pos.x - 16, this.enemies[+e].collider.pos.y - 16));\r\n\t                this.enemies.splice(+e, 1);\r\n\t            }\r\n\t        }\r\n\t        this.enemyTimeout += delta;\r\n\t        if (this.enemyTimeout > this.enemyTime) {\r\n\t            this.enemyTimeout = 0;\r\n\t            var point = this.enemyPoints[Math.floor(Math.random() * 4)];\r\n\t            this.enemies.push(new enemy_1.Enemy(this.gl, this.texture, new gamesaw.Geometry.Circle(point.x, point.y, 16)));\r\n\t        }\r\n\t    };\r\n\t    Game.prototype.checkProjectileCollision = function () {\r\n\t        var playerProjectiles = this.player.getProjectiles();\r\n\t        var playerCollider = this.player.getCollider();\r\n\t        for (var i in playerProjectiles) {\r\n\t            for (var e in this.enemies) {\r\n\t                var enemyCollider = this.enemies[+e].getCollider();\r\n\t                if (gamesaw.Geometry.intersects(playerProjectiles[+i].collider, enemyCollider)) {\r\n\t                    this.enemies[+e].doDamage(playerProjectiles[+i].damage);\r\n\t                    playerProjectiles[+i].dead = true;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        for (var e in this.enemies) {\r\n\t            var enemyProjectiles = this.enemies[+e].projectiles;\r\n\t            for (var i in enemyProjectiles) {\r\n\t                if (gamesaw.Geometry.intersects(enemyProjectiles[+i].collider, playerCollider)) {\r\n\t                    this.player.doDamage(enemyProjectiles[+i].damage);\r\n\t                    enemyProjectiles[+i].dead = true;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    Game.prototype.resetGame = function () {\r\n\t        this.player = new player_1.Player(this.gl, this.texture);\r\n\t        this.spawns = [];\r\n\t        this.enemies = [];\r\n\t        this.splatter = [];\r\n\t        this.killCount = 0;\r\n\t        this.spawnTimeout = 0;\r\n\t        this.enemyTimeout = 0;\r\n\t        this.showGameover = false;\r\n\t        this.paused = false;\r\n\t    };\r\n\t    return Game;\r\n\t}());\r\n\texports.Game = Game;\r\n\n\n/***/ },\n/* 79 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar gamesaw = __webpack_require__(9);\r\n\tvar projectile_1 = __webpack_require__(32);\r\n\tvar weapon_1 = __webpack_require__(81);\r\n\tvar powerup_1 = __webpack_require__(80);\r\n\tvar Player = (function () {\r\n\t    function Player(gl, texture) {\r\n\t        this.health = 100;\r\n\t        this.maxHealth = 100;\r\n\t        this.armor = 50;\r\n\t        this.maxArmor = 100;\r\n\t        this.score = 0;\r\n\t        this.fireCooldown = 0;\r\n\t        this.speedBoost = false;\r\n\t        this.quadDamage = false;\r\n\t        this.speed = 0.2;\r\n\t        this.projectiles = [];\r\n\t        this.gl = gl;\r\n\t        this.texture = texture;\r\n\t        this.collider = new gamesaw.Geometry.Circle(400, 300, 16);\r\n\t        this.baseSprite = new gamesaw.GL.Sprite(this.texture, 16, 16, [416, 0, 16, 16]);\r\n\t        this.dirSprite = new gamesaw.GL.Sprite(this.texture, 16, 16, [416, 16, 16, 16]);\r\n\t        this.direction = new gamesaw.Geometry.Vector2(0.0, 0.0);\r\n\t        this.weapon = new weapon_1.Weapon();\r\n\t        this.weapon.setWeapon(0, null);\r\n\t        this.mouse = gamesaw.Input.Mouse.getInstance();\r\n\t        this.keyboard = gamesaw.Input.Keyboard.getInstance();\r\n\t    }\r\n\t    Player.prototype.update = function (delta) {\r\n\t        this.calculateDirection();\r\n\t        this.updateMovement(this.handleInput(delta), delta);\r\n\t        if (this.powerup) {\r\n\t            this.powerup.update(delta);\r\n\t            if (!this.powerup.isActive()) {\r\n\t                this.powerup = null;\r\n\t                this.speedBoost = false;\r\n\t                this.quadDamage = false;\r\n\t            }\r\n\t        }\r\n\t        for (var i in this.projectiles) {\r\n\t            this.projectiles[+i].update(delta);\r\n\t            if (this.projectiles[+i].isDead()) {\r\n\t                this.projectiles.splice(+i, 1);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.render = function (renderer) {\r\n\t        // this.baseSprite.renderScale(renderer, this.collider.pos.x - this.collider.radius, this.collider.pos.y - this.collider.radius, 2);\r\n\t        this.baseSprite.renderAngleScale(renderer, this.collider.pos.x - this.collider.radius, this.collider.pos.y - this.collider.radius, gamesaw.Utility.radianToDegree(this.direction.angle()), 2);\r\n\t        if (this.powerup) {\r\n\t            this.powerup.render(renderer);\r\n\t        }\r\n\t        if (this.weapon.type !== 0) {\r\n\t            this.weapon.render(renderer);\r\n\t        }\r\n\t        for (var i in this.projectiles) {\r\n\t            this.projectiles[+i].render(renderer);\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.getProjectiles = function () {\r\n\t        return this.projectiles;\r\n\t    };\r\n\t    Player.prototype.getCollider = function () {\r\n\t        return this.collider;\r\n\t    };\r\n\t    Player.prototype.addScore = function (score) {\r\n\t        this.score += score;\r\n\t    };\r\n\t    Player.prototype.getScore = function () {\r\n\t        return this.score.toString();\r\n\t    };\r\n\t    Player.prototype.getAmmo = function () {\r\n\t        return this.weapon.ammo.toString();\r\n\t    };\r\n\t    Player.prototype.doDamage = function (damage) {\r\n\t        this.health -= damage;\r\n\t    };\r\n\t    Player.prototype.applyWeapon = function (type, sprite) {\r\n\t        this.weapon.setWeapon(type, sprite);\r\n\t    };\r\n\t    Player.prototype.applyPowerUp = function (type, sprite) {\r\n\t        switch (type) {\r\n\t            case 0:\r\n\t                this.health += 25;\r\n\t                break;\r\n\t            case 1:\r\n\t                this.health += 50;\r\n\t                break;\r\n\t            case 2:\r\n\t                this.health += 100;\r\n\t                break;\r\n\t            case 3:\r\n\t                this.speedBoost = true;\r\n\t                this.quadDamage = false;\r\n\t                this.powerup = new powerup_1.Powerup(sprite, 20000);\r\n\t                break;\r\n\t            case 4:\r\n\t                this.quadDamage = true;\r\n\t                this.speedBoost = false;\r\n\t                this.powerup = new powerup_1.Powerup(sprite, 10000);\r\n\t                break;\r\n\t        }\r\n\t        if (this.health > 100) {\r\n\t            this.health = 100;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.calculateDirection = function () {\r\n\t        var mouseVector = new gamesaw.Geometry.Vector2(this.mouse.x, this.mouse.y);\r\n\t        var positionVector = new gamesaw.Geometry.Vector2(this.collider.pos.x, this.collider.pos.y);\r\n\t        this.direction = mouseVector.sub(positionVector).normalize();\r\n\t    };\r\n\t    Player.prototype.handleInput = function (delta) {\r\n\t        var key = gamesaw.Input.Key;\r\n\t        var directionVector = new gamesaw.Geometry.Vector2(0.0, 0.0);\r\n\t        if (this.keyboard.keys[key['W']]) {\r\n\t            directionVector = directionVector.add(new gamesaw.Geometry.Vector2(0.0, -1.0));\r\n\t        }\r\n\t        if (this.keyboard.keys[key['A']]) {\r\n\t            directionVector = directionVector.add(new gamesaw.Geometry.Vector2(-1.0, 0.0));\r\n\t        }\r\n\t        if (this.keyboard.keys[key['S']]) {\r\n\t            directionVector = directionVector.add(new gamesaw.Geometry.Vector2(0.0, 1.0));\r\n\t        }\r\n\t        if (this.keyboard.keys[key['D']]) {\r\n\t            directionVector = directionVector.add(new gamesaw.Geometry.Vector2(1.0, 0.0));\r\n\t        }\r\n\t        if (this.mouse.button[0]) {\r\n\t            this.fireWeapon(delta);\r\n\t        }\r\n\t        return directionVector.normalize();\r\n\t    };\r\n\t    Player.prototype.fireWeapon = function (delta) {\r\n\t        var canFire = true;\r\n\t        var damage = this.weapon.damage;\r\n\t        if (this.quadDamage) {\r\n\t            damage = damage * 4;\r\n\t        }\r\n\t        if (!this.weapon.autoFire) {\r\n\t            this.mouse.button[0] = false;\r\n\t        }\r\n\t        else {\r\n\t            this.fireCooldown -= delta;\r\n\t            if (this.fireCooldown > 0) {\r\n\t                canFire = false;\r\n\t            }\r\n\t        }\r\n\t        switch (this.weapon.type) {\r\n\t            case 0:\r\n\t                this.projectiles.push(new projectile_1.Projectile(this.gl, this.texture, new gamesaw.Geometry.Circle(this.collider.pos.x, this.collider.pos.y, 3), 0.6, damage, this.direction.copy()));\r\n\t                break;\r\n\t            case 1:\r\n\t                this.projectiles.push(new projectile_1.Projectile(this.gl, this.texture, new gamesaw.Geometry.Circle(this.collider.pos.x, this.collider.pos.y, 3), 0.6, damage, this.direction.rotate(-0.125)));\r\n\t                this.projectiles.push(new projectile_1.Projectile(this.gl, this.texture, new gamesaw.Geometry.Circle(this.collider.pos.x, this.collider.pos.y, 3), 0.6, damage, this.direction.rotate(-0.062)));\r\n\t                this.projectiles.push(new projectile_1.Projectile(this.gl, this.texture, new gamesaw.Geometry.Circle(this.collider.pos.x, this.collider.pos.y, 3), 0.6, damage, this.direction.copy()));\r\n\t                this.projectiles.push(new projectile_1.Projectile(this.gl, this.texture, new gamesaw.Geometry.Circle(this.collider.pos.x, this.collider.pos.y, 3), 0.6, damage, this.direction.rotate(0.062)));\r\n\t                this.projectiles.push(new projectile_1.Projectile(this.gl, this.texture, new gamesaw.Geometry.Circle(this.collider.pos.x, this.collider.pos.y, 3), 0.6, damage, this.direction.rotate(0.125)));\r\n\t                this.weapon.useAmmo();\r\n\t                break;\r\n\t            case 2:\r\n\t                if (canFire) {\r\n\t                    this.projectiles.push(new projectile_1.Projectile(this.gl, this.texture, new gamesaw.Geometry.Circle(this.collider.pos.x, this.collider.pos.y, 3), 0.6, damage, this.direction.copy()));\r\n\t                    this.weapon.useAmmo();\r\n\t                    this.fireCooldown = 100;\r\n\t                }\r\n\t                break;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.updateMovement = function (direction, delta) {\r\n\t        var position = new gamesaw.Geometry.Vector2(this.collider.pos.x, this.collider.pos.y);\r\n\t        if (this.speedBoost) {\r\n\t            direction = direction.scale((this.speed * 2) * delta);\r\n\t        }\r\n\t        else {\r\n\t            direction = direction.scale(this.speed * delta);\r\n\t        }\r\n\t        position = position.add(direction);\r\n\t        if (position.y > 530) {\r\n\t            position.y = 530;\r\n\t        }\r\n\t        if (position.y < 140) {\r\n\t            position.y = 140;\r\n\t        }\r\n\t        if (position.x < 80) {\r\n\t            position.x = 80;\r\n\t        }\r\n\t        if (position.x > 720) {\r\n\t            position.x = 720;\r\n\t        }\r\n\t        this.collider.setX(position.x);\r\n\t        this.collider.setY(position.y);\r\n\t    };\r\n\t    return Player;\r\n\t}());\r\n\texports.Player = Player;\r\n\n\n/***/ },\n/* 80 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Powerups = [\r\n\t    {\r\n\t        type: 0,\r\n\t        name: 'Small medkit',\r\n\t        value: 25\r\n\t    },\r\n\t    {\r\n\t        type: 1,\r\n\t        name: 'Medium medkit',\r\n\t        value: 50\r\n\t    },\r\n\t    {\r\n\t        type: 2,\r\n\t        name: 'Super health',\r\n\t        value: 100\r\n\t    },\r\n\t    {\r\n\t        type: 3,\r\n\t        name: 'Speed',\r\n\t        value: 2\r\n\t    },\r\n\t    {\r\n\t        type: 4,\r\n\t        name: 'Quad damage',\r\n\t        value: 4\r\n\t    }\r\n\t];\r\n\tvar Powerup = (function () {\r\n\t    function Powerup(sprite, time) {\r\n\t        this.sprite = sprite;\r\n\t        this.timeout = time;\r\n\t        this.active = true;\r\n\t    }\r\n\t    Powerup.prototype.update = function (delta) {\r\n\t        this.timeout -= delta;\r\n\t        if (this.timeout < 0) {\r\n\t            this.active = false;\r\n\t        }\r\n\t    };\r\n\t    Powerup.prototype.render = function (renderer) {\r\n\t        this.sprite.renderScale(renderer, 143, 10, 2);\r\n\t    };\r\n\t    Powerup.prototype.isActive = function () {\r\n\t        return this.active;\r\n\t    };\r\n\t    Powerup.prototype.getRemainingTime = function () {\r\n\t        return this.timeout;\r\n\t    };\r\n\t    return Powerup;\r\n\t}());\r\n\texports.Powerup = Powerup;\r\n\n\n/***/ },\n/* 81 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Weapons = [\r\n\t    {\r\n\t        type: 0,\r\n\t        name: 'Widowmaker',\r\n\t        damage: 5,\r\n\t        autoFire: false,\r\n\t        melee: false,\r\n\t        startAmmo: 0\r\n\t    },\r\n\t    {\r\n\t        type: 1,\r\n\t        name: 'Shotgun',\r\n\t        damage: 10,\r\n\t        autoFire: false,\r\n\t        melee: false,\r\n\t        startAmmo: 20\r\n\t    },\r\n\t    {\r\n\t        type: 2,\r\n\t        name: 'Minigun',\r\n\t        damage: 5,\r\n\t        autoFire: true,\r\n\t        melee: false,\r\n\t        startAmmo: 100\r\n\t    }\r\n\t];\r\n\tvar Weapon = (function () {\r\n\t    function Weapon() {\r\n\t    }\r\n\t    Weapon.prototype.setWeapon = function (type, sprite) {\r\n\t        var data = Weapons[type];\r\n\t        this.type = data.type;\r\n\t        this.name = data.name;\r\n\t        this.damage = data.damage;\r\n\t        this.autoFire = data.autoFire;\r\n\t        this.melee = data.melee;\r\n\t        this.startAmmo = data.startAmmo;\r\n\t        this.ammo = data.startAmmo;\r\n\t        this.sprite = sprite;\r\n\t    };\r\n\t    Weapon.prototype.useAmmo = function () {\r\n\t        this.ammo -= 1;\r\n\t        if (this.ammo === 0) {\r\n\t            this.setWeapon(0, null);\r\n\t        }\r\n\t    };\r\n\t    Weapon.prototype.render = function (renderer) {\r\n\t        this.sprite.renderScale(renderer, 220, 12, 2);\r\n\t    };\r\n\t    return Weapon;\r\n\t}());\r\n\texports.Weapon = Weapon;\r\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// ld37.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4f6de5937f1e902d2b46","export enum GeometricEnum {\r\n    POINT,\r\n    CIRCLE,\r\n    VECTOR2,\r\n    VECTOR3,\r\n    LINE,\r\n    TRIANGLE,\r\n    RECTANGLE,\r\n    AABB,\r\n    POLYGON,\r\n    BEZIER,\r\n    BSPLINE\r\n};\r\n\r\nexport const GeometricName: string[] = [\r\n    'point',\r\n    'circle',\r\n    'vector2',\r\n    'vector3',\r\n    'line',\r\n    'triangle',\r\n    'rectangle',\r\n    'aabb',\r\n    'polygon',\r\n    'bezier',\r\n    'bspline'\r\n];\r\n\r\nexport interface GeometricObject {\r\n    type: GeometricEnum;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/geometry/geometry.ts","import { Http } from '../../utility/http';\r\nimport { ResourceManager } from '../../utility/resource-manager';\r\n\r\ninterface AJAXResponse {\r\n    responseText?: string;\r\n}\r\n\r\nexport enum ShaderType {\r\n    VERTEX,\r\n    FRAGMENT\r\n}\r\n\r\nexport class Program {\r\n    public vertexShader: WebGLShader;\r\n    public fragmentShader: WebGLShader;\r\n    public program: WebGLProgram;\r\n    public gl: WebGLRenderingContext;\r\n    private http: Http;\r\n    private resourceManager: ResourceManager;\r\n\r\n    constructor(gl: WebGLRenderingContext, fragmentShaderUrl?: string, vertexShaderUrl?: string) {\r\n        this.gl = gl;\r\n        this.http = new Http(false);\r\n\r\n        this.resourceManager = ResourceManager.getInstance();\r\n\r\n        if (fragmentShaderUrl && vertexShaderUrl) {\r\n            this.initShader(fragmentShaderUrl, vertexShaderUrl);\r\n        }\r\n    }\r\n\r\n    public getProgram(): WebGLProgram {\r\n        return this.program;\r\n    }\r\n\r\n    public loadShader(type: ShaderType, shader: string): void {\r\n        if (type === ShaderType.VERTEX) {\r\n            this.vertexShader = this.compileShader(type, shader);\r\n        } else {\r\n            this.fragmentShader = this.compileShader(type, shader);\r\n        }\r\n    }\r\n\r\n    private compileShader(type: ShaderType, shaderSrc: string): WebGLShader {\r\n        let shader: WebGLShader;\r\n\r\n        if (type === ShaderType.VERTEX) {\r\n            shader = this.gl.createShader(this.gl.VERTEX_SHADER);\r\n        } else if (type === ShaderType.FRAGMENT) {\r\n            shader = this.gl.createShader(this.gl.FRAGMENT_SHADER);\r\n        } else {\r\n            throw new Error('No valid shader type specified.');\r\n        }\r\n\r\n        this.gl.shaderSource(shader, shaderSrc);\r\n        this.gl.compileShader(shader);\r\n\r\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\r\n            throw new Error(this.gl.getShaderInfoLog(shader));\r\n        }\r\n\r\n        return shader;\r\n    }\r\n\r\n    public createProgram(): void {\r\n        this.program = this.gl.createProgram();\r\n\r\n        this.gl.attachShader(this.program, this.vertexShader);\r\n        this.gl.attachShader(this.program, this.fragmentShader);\r\n        this.gl.linkProgram(this.program);\r\n\r\n        if (!this.gl.getProgramParameter(this.program, this.gl.LINK_STATUS)) {\r\n            throw new Error('Unable to initialize the shader program.');\r\n        }\r\n\r\n        this.gl.useProgram(this.program);\r\n    }\r\n\r\n    public initShader(fsUrl: string, vsUrl: string): void {\r\n        let _this = this;\r\n\r\n        this.resourceManager.addOther();\r\n\r\n        this.http.get(fsUrl, (data: AJAXResponse) => {\r\n            _this.loadShader(ShaderType.FRAGMENT, data.responseText);\r\n        });\r\n\r\n        this.http.get(vsUrl, (data: AJAXResponse) => {\r\n            _this.loadShader(ShaderType.VERTEX, data.responseText);\r\n        });\r\n\r\n        this.resourceManager.otherReady();\r\n        this.createProgram();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/shader/program.ts","export enum RGBA {\r\n    RED,\r\n    GREEN,\r\n    BLUE,\r\n    ALPHA\r\n}\r\n\r\nexport enum HSLA {\r\n    HUE,\r\n    SATURATION,\r\n    LUMINOSITY,\r\n    ALPHA\r\n}\r\n\r\nexport interface RGB {\r\n    r: number;\r\n    g: number;\r\n    b: number;\r\n}\r\n\r\nexport interface HSL {\r\n    h: number;\r\n    s: number;\r\n    l: number;\r\n}\r\n\r\nexport class Color {\r\n    public rgb: number[] = [\r\n        255,\r\n        255,\r\n        255\r\n    ];\r\n    public hsl: number[] = [\r\n        360,\r\n        100,\r\n        100\r\n    ];\r\n    public alpha: number = 1;\r\n\r\n    constructor(red?: number, green?: number, blue?: number, alpha?: number) {\r\n        if (red && green && blue) {\r\n            this.rgb[RGBA.RED] = red;\r\n            this.rgb[RGBA.GREEN] = green;\r\n            this.rgb[RGBA.BLUE] = blue;\r\n            this.RGBtoHSL();\r\n        }\r\n\r\n        if (alpha) {\r\n            this.alpha = alpha;\r\n        }\r\n    }\r\n\r\n    public setRGB(red: number, green: number, blue: number): void {\r\n        this.rgb[RGBA.RED] = red;\r\n        this.rgb[RGBA.GREEN] = green;\r\n        this.rgb[RGBA.BLUE] = blue;\r\n        this.RGBtoHSL();\r\n    }\r\n\r\n    public setHSL(hue: number, saturation: number, luminosity: number): void {\r\n        this.hsl[HSLA.HUE] = hue;\r\n        this.hsl[HSLA.SATURATION] = saturation;\r\n        this.hsl[HSLA.LUMINOSITY] = luminosity;\r\n        this.HSLtoRGB();\r\n    }\r\n\r\n    public setAlpha(alpha: number): void {\r\n        this.alpha = alpha;\r\n    }\r\n\r\n    public getRGB(): RGB {\r\n        return { r: this.rgb[RGBA.RED], g: this.rgb[RGBA.GREEN], b: this.rgb[RGBA.BLUE] };\r\n    }\r\n\r\n    public getHSL(): HSL {\r\n        return { h: this.hsl[HSLA.HUE], s: this.hsl[HSLA.SATURATION], l: this.hsl[HSLA.LUMINOSITY] };\r\n    }\r\n\r\n    public getAlpha(): number {\r\n        return this.alpha;\r\n    }\r\n\r\n    public getRGBAFloat(): number[] {\r\n        return [ this.toFloat(this.rgb[RGBA.RED]), this.toFloat(this.rgb[RGBA.GREEN]), this.toFloat(this.rgb[RGBA.BLUE]), this.alpha ];\r\n    }\r\n\r\n    public RGBtoHSL(): void {\r\n        let r: number = this.rgb[RGBA.RED];\r\n        let g: number = this.rgb[RGBA.GREEN];\r\n        let b: number = this.rgb[RGBA.BLUE];\r\n        let h: number;\r\n        let s: number;\r\n        let l: number;\r\n\r\n        let cmax: number = (r > g) ? r : g;\r\n\r\n        if (b > cmax) {\r\n            cmax = b;\r\n        }\r\n\r\n        let cmin: number = (r < g) ? r : g;\r\n\r\n        if (b < cmin) {\r\n            cmin = b;\r\n        }\r\n\r\n        l = cmax / 255.0;\r\n\r\n        if (cmax !== 0) {\r\n            s = (cmax - cmin) / cmax;\r\n        } else {\r\n            s = 0;\r\n        }\r\n\r\n        if (s === 0) {\r\n            h = 0;\r\n        } else {\r\n            let redc: number = (cmax - r) / (cmax - cmin);\r\n            let greenc: number = (cmax - g) / (cmax - cmin);\r\n            let bluec: number = (cmax - b) / (cmax - cmin);\r\n\r\n            if (r === cmax) {\r\n                h = bluec - greenc;\r\n            } else if (g === cmax) {\r\n                h = 2.0 + redc - bluec;\r\n            } else {\r\n                h = 4.0 + greenc - redc;\r\n            }\r\n\r\n            h = h / 6.0;\r\n\r\n            if (h < 0) {\r\n                h = h + 1.0;\r\n            }\r\n        }\r\n\r\n        this.hsl[HSLA.HUE] = h;\r\n        this.hsl[HSLA.SATURATION] = s;\r\n        this.hsl[HSLA.LUMINOSITY] = l;\r\n    }\r\n\r\n    public HSLtoRGB(): void {\r\n        let r: number = 0;\r\n        let g: number = 0;\r\n        let b: number = 0;\r\n        let hue: number = this.hsl[HSLA.HUE];\r\n        let s: number = this.hsl[HSLA.SATURATION];\r\n        let l: number = this.hsl[HSLA.LUMINOSITY];\r\n\r\n        if (this.hsl[HSLA.SATURATION] === 0) {\r\n            r = Math.floor(l * 255 + 0.5);\r\n            g = Math.floor(l * 255 + 0.5);\r\n            b = Math.floor(l * 255 + 0.5);\r\n        } else {\r\n            let h: number = (hue - Math.floor(hue)) * 6.0;\r\n            let f: number = h - Math.floor(h);\r\n            let p: number = l * (1.0 - s);\r\n            let q: number = l * (1.0 - s * f);\r\n            let t: number = l * (1.0 - (s * (1.0 - f)));\r\n\r\n            switch (Math.floor(h)) {\r\n                case 0:\r\n                    r = (l * 255.0 + 0.5);\r\n                    g = (t * 255.0 + 0.5);\r\n                    b = (p * 255.0 + 0.5);\r\n                    break;\r\n                case 1:\r\n                    r = (q * 255.0 + 0.5);\r\n                    g = (l * 255.0 + 0.5);\r\n                    b = (p * 255.0 + 0.5);\r\n                    break;\r\n                case 2:\r\n                    r = (p * 255.0 + 0.5);\r\n                    g = (l * 255.0 + 0.5);\r\n                    b = (t * 255.0 + 0.5);\r\n                    break;\r\n                case 3:\r\n                    r = (p * 255.0 + 0.5);\r\n                    g = (q * 255.0 + 0.5);\r\n                    b = (l * 255.0 + 0.5);\r\n                    break;\r\n                case 4:\r\n                    r = (t * 255.0 + 0.5);\r\n                    g = (p * 255.0 + 0.5);\r\n                    b = (l * 255.0 + 0.5);\r\n                    break;\r\n                case 5:\r\n                    r = (l * 255.0 + 0.5);\r\n                    g = (p * 255.0 + 0.5);\r\n                    b = (q * 255.0 + 0.5);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        this.rgb[RGBA.RED] = Math.floor(r);\r\n        this.rgb[RGBA.GREEN] = Math.floor(g);\r\n        this.rgb[RGBA.BLUE] = Math.floor(b);\r\n    }\r\n\r\n    public getHex(): string {\r\n        return '#' + ((1 << 24) + (this.rgb[RGBA.RED] << 16) + (this.rgb[RGBA.GREEN] << 8) + this.rgb[RGBA.BLUE]).toString(16).slice(1);\r\n    }\r\n\r\n    public setHex(hex: string): void {\r\n        let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\r\n        this.rgb[RGBA.RED] = parseInt(result[RGBA.RED], 16);\r\n        this.rgb[RGBA.GREEN] = parseInt(result[RGBA.GREEN], 16);\r\n        this.rgb[RGBA.BLUE] = parseInt(result[RGBA.BLUE], 16);\r\n    }\r\n\r\n    private toFloat(int: number): number {\r\n        if (int === 0) {\r\n            return 0.0;\r\n        }\r\n\r\n        return int / 255;\r\n    }\r\n\r\n    private toInt(float: number): number {\r\n        return float * 255;\r\n    }\r\n\r\n    public interpolate(c1: Color, c2: Color, scale: number): Color {\r\n        let color = new Color();\r\n        let col0 = c1.getRGBAFloat();\r\n        let col1 = c2.getRGBAFloat();\r\n\r\n        color.rgb[RGBA.RED] = this.toInt(col0[RGBA.RED] + (col1[RGBA.RED] - col0[RGBA.RED]) * scale);\r\n        color.rgb[RGBA.GREEN] = this.toInt(col0[RGBA.GREEN] + (col1[RGBA.GREEN] - col0[RGBA.GREEN]) * scale);\r\n        color.rgb[RGBA.BLUE] = this.toInt(col0[RGBA.BLUE] + (col1[RGBA.BLUE] - col0[RGBA.BLUE]) * scale);\r\n        color.alpha = this.toInt(col0[RGBA.ALPHA] + (col1[RGBA.ALPHA] - col0[RGBA.ALPHA]) * scale);\r\n        color.RGBtoHSL();\r\n\r\n        return color;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/graphics/color.ts","export class ResourceManager {\r\n    private static _instance: ResourceManager = new ResourceManager();\r\n\r\n    public imageAssets: number = 0;\r\n    public audioAssets: number = 0;\r\n    public otherAssets: number = 0;\r\n\r\n    public loadedImages: number = 0;\r\n    public loadedAudio: number = 0;\r\n    public loadedOther: number = 0;\r\n\r\n    public failedImage: number = 0;\r\n    public failedAudio: number = 0;\r\n    public failedOther: number = 0;\r\n\r\n    constructor() {\r\n        if (ResourceManager._instance) {\r\n            throw new Error('Error: Instantiation failed, Use ResourceManager.getInstance() instead of new.');\r\n        }\r\n\r\n        ResourceManager._instance = this;\r\n    }\r\n\r\n    public static getInstance(): ResourceManager {\r\n        return ResourceManager._instance;\r\n    }\r\n\r\n    public getPercent(): number {\r\n        return Math.ceil(\r\n            (this.loadedImages + this.loadedAudio + this.loadedOther) /\r\n            (this.imageAssets + this.audioAssets + this.otherAssets));\r\n    }\r\n\r\n    public isReady(): boolean {\r\n        return (this.loadedImages + this.loadedAudio + this.loadedOther) ===\r\n            (this.imageAssets + this.audioAssets + this.otherAssets);\r\n    }\r\n\r\n    public addImage(): void {\r\n        this.imageAssets += 1;\r\n    }\r\n\r\n    public imageReady(): void {\r\n        this.loadedImages += 1;\r\n    }\r\n\r\n    public imageFailed(): void {\r\n        this.imageAssets -= 1;\r\n        this.failedImage += 1;\r\n    }\r\n\r\n    public addAudio(): void {\r\n        this.audioAssets += 1;\r\n    }\r\n\r\n    public audioReady(): void {\r\n        this.loadedAudio += 1;\r\n    }\r\n\r\n    public audioFailed(): void {\r\n        this.audioAssets -= 1;\r\n        this.failedAudio += 1;\r\n    }\r\n\r\n    public addOther(): void {\r\n        this.otherAssets += 1;\r\n    }\r\n\r\n    public otherReady(): void {\r\n        this.loadedOther += 1;\r\n    }\r\n\r\n    public otherFailed(): void {\r\n        this.otherAssets -= 1;\r\n        this.failedOther += 1;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/utility/resource-manager.ts","import { GeometricEnum, GeometricObject } from './geometry';\r\n\r\ninterface Pos {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\nexport class Point implements GeometricObject, Pos {\r\n    public type = GeometricEnum.POINT;\r\n    public x = 0;\r\n    public y = 0;\r\n\r\n    constructor(x: number, y: number) {\r\n        if (x) {\r\n            this.x = x;\r\n        }\r\n\r\n        if (y) {\r\n            this.y = y;\r\n        }\r\n    }\r\n\r\n    public getType(): GeometricEnum {\r\n        return this.type;\r\n    }\r\n\r\n    public getX(): number {\r\n        return this.x;\r\n    }\r\n\r\n    public getY(): number {\r\n        return this.y;\r\n    }\r\n\r\n    public setX(x: number) {\r\n        this.x = x;\r\n    }\r\n\r\n    public setY(y: number) {\r\n        this.y = y;\r\n    }\r\n\r\n    public set(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    public get(): Pos {\r\n        return this;\r\n    }\r\n\r\n    public transform(x: number, y: number) {\r\n        this.x += x;\r\n        this.y += y;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/geometry/point.ts","export class RenderCall {\r\n    vertices: number[];\r\n    indices: number[];\r\n    uvs: number[];\r\n    index: number;\r\n    numIndices: number;\r\n    texture: WebGLTexture;\r\n\r\n    constructor() {\r\n        this.flush();\r\n    }\r\n\r\n    public add(renderCall: RenderCall) {\r\n        this.vertices = this.vertices.concat(renderCall.vertices);\r\n        this.uvs = this.uvs.concat(renderCall.uvs);\r\n\r\n        renderCall.indices.forEach((i) => {\r\n            this.indices.push(i + this.index);\r\n        });\r\n\r\n        this.index += this.findMaxIndex(renderCall.indices);\r\n        this.numIndices += renderCall.numIndices;\r\n    }\r\n\r\n    public findMaxIndex(indices: number[]): number {\r\n        let max: number = 0;\r\n\r\n        indices.forEach((i) => {\r\n            if (i > max) {\r\n                max = i;\r\n            }\r\n        });\r\n\r\n        max += 1;\r\n\r\n        return max;\r\n    }\r\n\r\n    public flush() {\r\n        this.vertices = [];\r\n        this.indices = [];\r\n        this.uvs = [];\r\n        this.index = 0;\r\n        this.numIndices = 0;\r\n    }\r\n\r\n    public setTexture(texture: WebGLTexture) {\r\n        this.texture = texture;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/renderer2d/render-call.ts","export interface AJAXResponse {\r\n    responseText?: string;\r\n}\r\n\r\nexport class Http {\r\n    public async: boolean = false;\r\n\r\n    constructor(async: boolean) {\r\n        if (async) {\r\n            this.async = async;\r\n        }\r\n    }\r\n\r\n    public get(url: string, callback: Function): void {\r\n        let xhr: XMLHttpRequest = this.createXHR();\r\n\r\n        if (xhr) {\r\n            xhr.open('GET', url, this.async);\r\n            xhr.onreadystatechange = () => {\r\n                if (xhr.readyState === 4 && xhr.status === 200) {\r\n                    callback(xhr);\r\n                }\r\n            };\r\n            xhr.send(null);\r\n        }\r\n    }\r\n\r\n    private createXHR(): XMLHttpRequest {\r\n        try { return new XMLHttpRequest(); } catch (err) {}\r\n        try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch (err) {}\r\n        try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch (err) {}\r\n        try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch (err) {}\r\n        try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch (err) {}\r\n\r\n        return null;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/utility/http.ts","export const PI: number = Math.PI;\r\nexport const EPSILON: number = 0.0000001;\r\n\r\nexport function capitalize(str: string): string {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/utility/utility.ts","import * as Geometry from './geometry/index';\r\nimport * as Graphics from './graphics/index';\r\nimport * as Utility from './utility/index';\r\nimport * as Input from './input/index';\r\nimport * as GL from './gl/index';\r\nimport * as Audio from './audio/index';\r\nimport * as AI from './ai/index';\r\n\r\nimport { Scene } from './scene';\r\nimport { Application } from './application';\r\nimport { SceneManager } from './scene-manager';\r\n\r\nexport { Audio, Geometry, Graphics, Utility, Input, Scene, Application, SceneManager, GL, AI };\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!../gamesaw-ts/src/index.ts","import { GeometricEnum, GeometricName, GeometricObject } from './geometry';\r\nimport { Vector2 } from './vector2d';\r\nimport { Vector3 } from './vector3d';\r\nimport { Point } from './point';\r\nimport { Line } from './line';\r\nimport { Circle } from './circle';\r\nimport { Rectangle } from './rectangle';\r\nimport { AABB } from './aabb';\r\nimport { Polygon } from './polygon';\r\nimport { Bezier } from './bezier';\r\nimport { BSpline } from './bspline';\r\nimport { Renderer, render } from './renderer';\r\nimport { Collider, intersects } from './collision';\r\n\r\nexport { GeometricEnum, GeometricName, GeometricObject, Vector2, Point, Vector3,\r\n    Line, Circle, Rectangle, AABB, Polygon, Bezier, BSpline, Renderer, render, Collider, intersects }\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/geometry/index.ts","import { GeometricEnum, GeometricObject } from './geometry';\r\nimport { EPSILON, PI } from '../utility/utility';\r\n\r\nexport interface Vec2 {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\nexport class Vector2 implements GeometricObject, Vec2 {\r\n    public type = GeometricEnum.VECTOR2;\r\n    public x: number = 0.0;\r\n    public y: number = 0.0;\r\n\r\n    constructor(x: number, y: number) {\r\n        if (x) {\r\n            this.x = x;\r\n        }\r\n\r\n        if (y) {\r\n            this.y = y;\r\n        }\r\n    }\r\n\r\n    public getType(): GeometricEnum {\r\n        return this.type;\r\n    }\r\n\r\n    public getX(): number {\r\n        return this.x;\r\n    }\r\n\r\n    public getY(): number {\r\n        return this.y;\r\n    }\r\n\r\n    public setX(x: number) {\r\n        this.x = x;\r\n    }\r\n\r\n    public setY(y: number) {\r\n        this.y = y;\r\n    }\r\n\r\n    public set(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    public get(): Vec2 {\r\n        return this;\r\n    }\r\n\r\n    public add(v2: Vec2): Vector2 {\r\n        return new Vector2(this.x + v2.x, this.y + v2.y);\r\n    }\r\n\r\n    public sub(v2: Vec2): Vector2 {\r\n        return new Vector2(this.x - v2.x, this.y - v2.y);\r\n    }\r\n\r\n    public invert(): Vector2 {\r\n        return new Vector2(-this.x, -this.y);\r\n    }\r\n\r\n    public scale(scalar: number): Vector2 {\r\n        return new Vector2(this.x * scalar, this.y * scalar);\r\n    }\r\n\r\n    public normalize(): Vector2 {\r\n        let length = this.length();\r\n\r\n        if (length === 0) {\r\n            return new Vector2(0.0, 0.0);\r\n        }\r\n\r\n        return new Vector2(this.x / length, this.y / length);\r\n    }\r\n\r\n    public project(v2: Vec2): Vector2 {\r\n        let dot = this.dot(v2);\r\n        let length = this.lengthSquared();\r\n\r\n        return new Vector2((dot / length) * this.x, (dot / length) * this.y);\r\n    }\r\n\r\n    public length(): number {\r\n        return Math.sqrt(this.lengthSquared());\r\n    }\r\n\r\n    public lengthSquared(): number {\r\n        return (this.x * this.x) + (this.y * this.y);\r\n    }\r\n\r\n    public dot(v2: Vec2): number {\r\n        return ((this.x * v2.x) + (this.y * v2.y));\r\n    }\r\n\r\n    public cross(v2: Vec2): number {\r\n        return ((this.x * v2.y) - (this.y * v2.x));\r\n    }\r\n\r\n    public angle(): number {\r\n        return Math.atan2(this.x, -this.y);\r\n    }\r\n\r\n    public copy(): Vector2 {\r\n        return new Vector2(this.x, this.y);\r\n    }\r\n\r\n    public rotate(radian: number): Vector2 {\r\n        if (this.x === 0) {\r\n            this.x += EPSILON;\r\n        }\r\n\r\n        if (this.y === 0) {\r\n            this.y += EPSILON;\r\n        }\r\n\r\n        return new Vector2(Math.cos(radian) * this.x - Math.sin(radian) * this.y,\r\n            Math.sin(radian) * this.x + Math.cos(radian) * this.y);\r\n    }\r\n\r\n    public rotatePivot(x: number, y: number, radian: number): Vector2 {\r\n        if (this.x === 0) {\r\n            this.x += EPSILON;\r\n        }\r\n\r\n        if (this.y === 0) {\r\n            this.y += EPSILON;\r\n        }\r\n\r\n        let srcX = this.x;\r\n        let srcY = this.y;\r\n\r\n        srcX -= x;\r\n        srcY -= y;\r\n\r\n        return new Vector2((Math.cos(radian) * srcX - Math.sin(radian) * srcY) + x,\r\n            (Math.sin(radian) * srcX + Math.cos(radian) * srcY) + y);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/geometry/vector2d.ts","export class FrameBuffer {\r\n    public gl: WebGLRenderingContext;\r\n    public texture: WebGLTexture;\r\n    public fbo: WebGLFramebuffer;\r\n    public width: number;\r\n    public height: number;\r\n\r\n    constructor(gl: WebGLRenderingContext, width: number, height: number) {\r\n        this.gl = gl;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        this.init();\r\n    }\r\n\r\n    public init() {\r\n        let gl = this.gl;\r\n        this.fbo = gl.createFramebuffer();\r\n\r\n        if (!this.fbo) {\r\n            throw new Error('Failed to create FBO.');\r\n        }\r\n\r\n        this.texture = gl.createTexture();\r\n\r\n        if (!this.texture) {\r\n            throw new Error('Failed to create FBO texture.');\r\n        }\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.width, this.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n\r\n        let depthBuffer = gl.createRenderbuffer();\r\n        if (!depthBuffer) {\r\n            throw new Error('Failed to create depth buffer.');\r\n        }\r\n\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, depthBuffer);\r\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, this.width, this.height);\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.fbo);\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture, 0);\r\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, depthBuffer);\r\n\r\n        let err = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n\r\n        if (gl.FRAMEBUFFER_COMPLETE !== err) {\r\n            throw new Error('Framebuffer object is incomplete: ' + err.toString());\r\n        }\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/renderer2d/framebuffer.ts","import { ResourceManager } from '../utility/resource-manager';\r\n\r\nexport class Texture {\r\n    private gl: WebGLRenderingContext;\r\n    private resourceManager: ResourceManager;\r\n    public image: HTMLImageElement;\r\n    public url: string;\r\n    public width: number;\r\n    public height: number;\r\n    public texture: WebGLTexture;\r\n    public loaded: boolean = false;\r\n    public ready: boolean = false;\r\n\r\n    constructor(gl: WebGLRenderingContext, url?: string) {\r\n        this.gl = gl;\r\n\r\n        this.resourceManager = ResourceManager.getInstance();\r\n\r\n        if (url) {\r\n            this.url;\r\n            this.load(url);\r\n        }\r\n    }\r\n\r\n    public load(url: string) {\r\n        let _this = this;\r\n        let gl = this.gl;\r\n\r\n        this.resourceManager.addImage();\r\n\r\n        this.image = new Image();\r\n        this.image.src = url;\r\n        this.texture = gl.createTexture();\r\n\r\n        this.image.addEventListener('load', (event) => {\r\n            _this.loadHandler(event);\r\n        });\r\n        this.image.addEventListener('error', _this.errorHandler);\r\n    }\r\n\r\n    private init(): void {\r\n        let gl = this.gl;\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.image);\r\n\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n\r\n        this.ready = true;\r\n    }\r\n\r\n    private errorHandler(event: Event): void {\r\n        if (this.resourceManager) {\r\n            this.resourceManager.imageFailed();\r\n        }\r\n\r\n        throw new Error('Failed to load sprite.');\r\n    }\r\n\r\n    private loadHandler(event: Event): void {\r\n        this.loaded = true;\r\n        this.width = this.image.width;\r\n        this.height = this.image.height;\r\n\r\n        this.resourceManager.imageReady();\r\n\r\n        this.init();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/texture.ts","import { Node } from './node';\r\n\r\nexport class Connection {\r\n    public cost: number;\r\n    public srcNode: Node;\r\n    public dstNode: Node;\r\n\r\n    constructor(srcNode?: Node, dstNode?: Node) {\r\n        if (srcNode) {\r\n            this.srcNode = srcNode;\r\n        }\r\n\r\n        if (dstNode) {\r\n            this.dstNode = dstNode;\r\n        }\r\n    }\r\n\r\n    public setCost(cost: number): void {\r\n        this.cost = cost;\r\n    }\r\n\r\n    public getCost(): number {\r\n        return this.cost;\r\n    }\r\n\r\n    public setSrcNode(srcNode: Node) {\r\n        this.srcNode = srcNode;\r\n    }\r\n\r\n    public getSrcNode(): Node {\r\n        return this.srcNode;\r\n    }\r\n\r\n    public setDstNode(dstNode: Node) {\r\n        this.dstNode = dstNode;\r\n    }\r\n\r\n    public getDstNode(): Node {\r\n        return this.dstNode;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/ai/astar/connection.ts","import { Node } from './node';\r\nimport { Connection } from './connection';\r\n\r\nexport class Graph {\r\n    public nodes: Node[][];\r\n\r\n    constructor(nodes: Node[][]) {\r\n        if (nodes) {\r\n            this.nodes = nodes;\r\n        }\r\n    }\r\n\r\n    public setNodes(nodes: Node[][]): void {\r\n        this.nodes = nodes;\r\n    }\r\n\r\n    public isValidNode(x: number, y: number): boolean {\r\n        if ( x < 0 || y < 0 || y >= this.nodes.length || x >= this.nodes[0].length) {\r\n            return false;\r\n        } else if (this.nodes[y][x].getBlocked()) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public getNode(node: Node): Node {\r\n        return this.nodes[node.y][node.x];\r\n    }\r\n\r\n    public getConnections(srcNode: Node): Connection[] {\r\n        let connections: Connection[] = [];\r\n        let tempConnection: Connection;\r\n\r\n        // TODO: Need to rewrite this to handle the 1D tilemap structure of tiled format.\r\n        for (let i = -1; i < 2; i += 1) {\r\n            for (let j = -1; j < 2; j += 1) {\r\n                if (i === 0 && j === 0) {\r\n                    continue;\r\n                } else if (this.isValidNode(srcNode.x + i, srcNode.y + j)) {\r\n                    tempConnection = new Connection();\r\n\r\n                    tempConnection.setSrcNode(srcNode);\r\n                    tempConnection.setDstNode(this.nodes[srcNode.y + j][srcNode.x + i]);\r\n                    tempConnection.setCost(1);\r\n\r\n                    connections.push(tempConnection);\r\n                }\r\n            }\r\n        }\r\n\r\n        return connections;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/ai/astar/graph.ts","import { Node } from './node';\r\n\r\nexport class Heuristic {\r\n    public dstNode: Node;\r\n\r\n    constructor(dstNode: Node) {\r\n        this.dstNode = dstNode;\r\n    }\r\n\r\n    public euclideanDistance(currentNode: Node): number {\r\n        let dx = currentNode.x - this.dstNode.x;\r\n        let dy = currentNode.y - this.dstNode.y;\r\n\r\n        return Math.sqrt((dx * dx) + (dy * dy));\r\n    }\r\n\r\n    public manhattanDistance(currentNode: Node): number {\r\n        let dx = Math.abs(this.dstNode.x - currentNode.x);\r\n        let dy = Math.abs(this.dstNode.y - currentNode.y);\r\n\r\n        return dx + dy;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/ai/astar/heuristic.ts","import { Node } from './node';\r\nimport { NodeRecord } from './node-record';\r\n\r\nexport class NodeList {\r\n    public list: NodeRecord[] = [];\r\n\r\n    constructor() { }\r\n\r\n    public add(nodeRecord: NodeRecord): void {\r\n        this.list.push(nodeRecord);\r\n    }\r\n\r\n    public get(index: number): NodeRecord {\r\n        return this.list[index];\r\n    }\r\n\r\n    public getSmallest(): NodeRecord {\r\n        let smallest: NodeRecord;\r\n        let current: NodeRecord;\r\n\r\n        smallest = this.list[0];\r\n\r\n        for (let i = 0; i < this.list.length; i += 1) {\r\n            current = this.list[i];\r\n\r\n            if (current.getEstimatedCost() < smallest.getEstimatedCost()) {\r\n                smallest = current;\r\n            }\r\n        }\r\n\r\n        return smallest;\r\n    }\r\n\r\n    public contains(node: Node): boolean {\r\n        let current: Node;\r\n\r\n        for (let i = 0; i < this.list.length; i += 1) {\r\n            current = this.list[i].getNode();\r\n\r\n            if (current.x === node.x && current.y === node.y) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public find(node: Node): NodeRecord {\r\n        let current: Node;\r\n\r\n        for (let i = 0; i < this.list.length; i += 1) {\r\n            current = this.list[i].getNode();\r\n\r\n            if (current.x === node.x && current.y === node.y) {\r\n                return this.list[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    public remove(node: Node): void {\r\n        let current: Node;\r\n\r\n        for (let i = 0; i < this.list.length; i += 1) {\r\n            current = this.list[i].getNode();\r\n\r\n            if (current.x === node.x && current.y === node.y) {\r\n                this.list.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    public size(): number {\r\n        return this.list.length;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/ai/astar/node-list.ts","import { Node } from './node';\r\nimport { Connection } from './connection';\r\n\r\nexport class NodeRecord {\r\n    public node: Node;\r\n    public connection: Connection;\r\n    public currentCost: number = 0;\r\n    public estimatedCost: number = 0;\r\n\r\n    constructor() {\r\n        this.currentCost = 0;\r\n        this.estimatedCost = 0;\r\n    }\r\n\r\n    public setNode(node: Node): void {\r\n        this.node = node;\r\n    }\r\n\r\n    public getNode(): Node {\r\n        return this.node;\r\n    }\r\n\r\n    public setConnection(connection: Connection): void {\r\n        this.connection = connection;\r\n    }\r\n\r\n    public getConnection(): Connection {\r\n        return this.connection;\r\n    }\r\n\r\n    public setCurrentCost(cost: number): void {\r\n        this.currentCost = cost;\r\n    }\r\n\r\n    public getCurrentCost(): number {\r\n        return this.currentCost;\r\n    }\r\n\r\n    public setEstimatedCost(estimatedCost: number): void {\r\n        this.estimatedCost = estimatedCost;\r\n    }\r\n\r\n    public getEstimatedCost(): number {\r\n        return this.estimatedCost;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/ai/astar/node-record.ts","export class Node {\r\n    public x: number;\r\n    public y: number;\r\n    public blocked: boolean = false;\r\n\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    public setBlocked(blocked: boolean): void {\r\n        this.blocked = blocked;\r\n    }\r\n\r\n    public getBlocked(): boolean {\r\n        return this.blocked;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/ai/astar/node.ts","export const CONTAINER_ID: string = 'gamesaw-container';\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gamesaw.ts","import { GeometricEnum, GeometricObject } from './geometry';\r\nimport { Point } from './point';\r\n\r\nexport class Rectangle implements GeometricObject {\r\n    public type = GeometricEnum.RECTANGLE;\r\n    public pos: Point = new Point(0, 0);\r\n    public width = 1;\r\n    public height = 1;\r\n\r\n    constructor(x: number, y: number, width: number, height: number) {\r\n        if (x) {\r\n            this.pos.x = x;\r\n        }\r\n\r\n        if (y) {\r\n            this.pos.y = y;\r\n        }\r\n\r\n        if (width) {\r\n            this.width = width;\r\n        }\r\n\r\n        if (height) {\r\n            this.height = height;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/geometry/rectangle.ts","export interface Glyph {\r\n    x: number;\r\n    y: number;\r\n    xOffset: number;\r\n    yOffset: number;\r\n    width: number;\r\n    height: number;\r\n    xAdvance: number;\r\n    page: number;\r\n    channel: number;\r\n}\r\n\r\nexport interface GlyphSet {\r\n    [index: number]: Glyph;\r\n}\r\n\r\nexport interface FontInfo {\r\n    face: string;\r\n    size: number;\r\n    bold: number;\r\n    italic: number;\r\n    charset: string;\r\n    unicode: number;\r\n    stretchHeight: number;\r\n    smooth: number;\r\n    padding: number[];\r\n    antiAliasing: number;\r\n    spacing: number[];\r\n    outline: number;\r\n}\r\n\r\nexport interface FontCommon {\r\n    lineHeight: number;\r\n    base: number;\r\n    scaleWidth: number;\r\n    scaleHeight: number;\r\n    pages: number;\r\n    packed: number;\r\n    alphaChannel: number;\r\n    redChannel: number;\r\n    greenChannel: number;\r\n    blueChannel: number;\r\n}\r\n\r\nexport interface PageSet {\r\n    [index: number]: FontPage;\r\n}\r\n\r\nexport interface FontPage {\r\n    file: string;\r\n}\r\n\r\nexport class BitmapFont {\r\n    public info: FontInfo;\r\n    public common: FontCommon;\r\n    public pages: PageSet = {};\r\n    public glyphs: GlyphSet = {};\r\n    public glyphCount: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/font/bitmap-font.ts","import { Point, Vector2 } from '../../geometry/index';\r\n\r\nexport class Particle {\r\n    public life: number;\r\n    public size: number;\r\n    public pos: Point;\r\n    public dir: Point;\r\n    public vel: number;\r\n    public alpha: number;\r\n\r\n    constructor(position: Point, direction: Point, size: number, velocity: number, life: number, alpha: number) {\r\n        this.pos = position;\r\n        this.dir = direction;\r\n        this.size = size;\r\n        this.vel = velocity;\r\n        this.life = life;\r\n        this.alpha = alpha;\r\n    }\r\n\r\n    public update(gravity: number, wind: number, growth: number, delta: number): void {\r\n        this.life -= delta;\r\n        this.size += growth;\r\n        this.dir.y += gravity;\r\n        this.dir.x += wind;\r\n        this.pos.x += (this.dir.x * this.vel);\r\n        this.pos.y += (this.dir.y * this.vel);\r\n    }\r\n\r\n    public isDead(): boolean {\r\n        return this.life < 0;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/particle/particle.ts","export interface Tile {\r\n    tileid: number;\r\n    row: number;\r\n    col: number;\r\n}\r\n\r\nexport class TilemapLayer {\r\n    public tiles: number[] = [];\r\n    public data: string;\r\n    public encoding: string;\r\n    public width: number;\r\n    public height: number;\r\n    public x: number;\r\n    public y: number;\r\n    public opacity: number;\r\n    public visible: boolean;\r\n    public name: string;\r\n    public type: string;\r\n\r\n    constructor(data: string, encoding: string, width: number, height: number,\r\n        x: number, y: number, opacity: number, visible: boolean, name: string, type: string) {\r\n        this.data = data;\r\n        this.encoding = encoding;\r\n        this.height = height;\r\n        this.width = width;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.opacity = opacity;\r\n        this.visible = visible;\r\n        this.name = name;\r\n        this.type = type;\r\n\r\n        this.decode();\r\n    }\r\n\r\n    public decode() {\r\n        let rawData = atob(this.data);\r\n        let bytes: number = 4;\r\n        let length: number = rawData.length / bytes;\r\n\r\n        for (let i = 0; i < length; i += 1) {\r\n            this.tiles[i] = 0;\r\n\r\n            for (let j = bytes - 1; j >= 0; j -= 1) {\r\n                this.tiles[i] += rawData.charCodeAt((i * bytes) + j) << (j << 3);\r\n            }\r\n        }\r\n    }\r\n\r\n    public isVisible(): boolean {\r\n        return this.visible;\r\n    }\r\n\r\n    public getTile(i: number): Tile {\r\n        return {\r\n            tileid: this.tiles[i],\r\n            row: Math.floor(i / this.width),\r\n            col: i % this.width\r\n        };\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/tilemap/tilemap-layer.ts","import { Texture } from '../texture';\r\nimport { Renderer2d } from '../renderer2d/renderer2d';\r\nimport { RenderCall } from '../renderer2d/render-call';\r\n\r\nexport class Tileset {\r\n    public gl: WebGLRenderingContext;\r\n    public texture: Texture;\r\n    public name: string;\r\n    public image: string;\r\n    public imageWidth: number;\r\n    public imageHeight: number;\r\n    public firstgid: number;\r\n    public lastgid: number;\r\n    public margin: number;\r\n    public spacing: number;\r\n    public columns: number;\r\n    public tileCount: number;\r\n    public tileWidth: number;\r\n    public tileHeight: number;\r\n\r\n    constructor(gl: WebGLRenderingContext, name: string, image: string, imageWidth: number, imageHeight: number, firstgid: number,\r\n        margin: number, spacing: number, columns: number, tileCount: number, tileWidth: number, tileHeight: number) {\r\n        this.gl = gl;\r\n        this.name = name;\r\n        this.image = image;\r\n        this.imageWidth = imageWidth;\r\n        this.imageHeight = imageHeight;\r\n        this.firstgid = firstgid;\r\n        this.margin = margin;\r\n        this.spacing = spacing;\r\n        this.columns = columns;\r\n        this.tileCount = tileCount;\r\n        this.tileWidth = tileWidth;\r\n        this.tileHeight = tileHeight;\r\n\r\n        this.lastgid = this.firstgid + this.tileCount - 1;\r\n        this.texture = new Texture(this.gl, this.image);\r\n    }\r\n\r\n    public renderTile(renderer: Renderer2d, x: number, y: number, id: number): void {\r\n        let row: number = Math.floor((id - this.firstgid) / this.columns);\r\n        let col: number = (id - this.firstgid) % this.columns;\r\n\r\n        let uvs: number[] = [\r\n            ((col * this.tileWidth) / this.imageWidth),\r\n            ((row * this.tileHeight) / this.imageHeight),\r\n            (((col * this.tileWidth) + this.tileWidth) / this.imageWidth),\r\n            (((row * this.tileHeight) + this.tileHeight) / this.imageHeight)\r\n        ];\r\n\r\n        let renderCall: RenderCall = new RenderCall();\r\n\r\n        renderCall.texture = this.texture.texture;\r\n        renderCall.vertices = [x, y,\r\n            x + this.tileWidth, y,\r\n            x, y + this.tileHeight,\r\n            x + this.tileWidth, y + this.tileHeight];\r\n        renderCall.uvs = [uvs[0], uvs[1], uvs[2], uvs[1], uvs[0], uvs[3], uvs[2], uvs[3]];\r\n        renderCall.indices = [0, 1, 2, 1, 2, 3];\r\n        renderCall.numIndices = 6;\r\n\r\n        renderer.addCall(renderCall);\r\n    }\r\n\r\n    public renderTileScale(renderer: Renderer2d, x: number, y: number, id: number, scale: number, scaleY?: number) {\r\n        let row: number = Math.floor((id - this.firstgid) / this.columns);\r\n        let col: number = (id - this.firstgid) % this.columns;\r\n\r\n        let uvs: number[] = [\r\n            ((col * this.tileWidth) / this.imageWidth),\r\n            ((row * this.tileHeight) / this.imageHeight),\r\n            (((col * this.tileWidth) + this.tileWidth) / this.imageWidth),\r\n            (((row * this.tileHeight) + this.tileHeight) / this.imageHeight)\r\n        ];\r\n\r\n        let renderCall: RenderCall = new RenderCall();\r\n\r\n        renderCall.texture = this.texture.texture;\r\n        renderCall.vertices = [x, y,\r\n            x + this.tileWidth * scale, y,\r\n            x, y + this.tileHeight * scale,\r\n            x + this.tileWidth * scale, y + this.tileHeight * scale];\r\n        renderCall.uvs = [uvs[0], uvs[1], uvs[2], uvs[1], uvs[0], uvs[3], uvs[2], uvs[3]];\r\n        renderCall.indices = [0, 1, 2, 1, 2, 3];\r\n        renderCall.numIndices = 6;\r\n\r\n        renderer.addCall(renderCall);\r\n    }\r\n\r\n    public renderTileAngle(renderer: Renderer2d, x: number, y: number, id: number, angle: number, scale?: number, scaleY?: number) {\r\n\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/tilemap/tileset.ts","import { Color } from './color';\r\nimport { CONTAINER_ID } from '../gamesaw';\r\n\r\nexport abstract class Surface {\r\n    public abstract width: number;\r\n    public abstract height: number;\r\n    public abstract id: string;\r\n    public abstract canvas: HTMLCanvasElement;\r\n\r\n    public constructor() { }\r\n\r\n    public createCanvas(): void {\r\n        let container = document.getElementById(CONTAINER_ID);\r\n\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.setAttribute('id', this.id);\r\n        this.canvas.setAttribute('width', String(this.width));\r\n        this.canvas.setAttribute('height', String(this.height));\r\n\r\n        this.canvas.style.position = 'absolute';\r\n\r\n        container.appendChild(this.canvas);\r\n    };\r\n\r\n    public abstract clear(color: Color): void;\r\n\r\n    public toDataUrl(): string {\r\n        return this.canvas.toDataURL('image/png');\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/graphics/surface.abstract.ts","import { Surface } from './surface.abstract';\r\nimport { Color } from './color';\r\n\r\nexport class Surface2d extends Surface {\r\n    public width: number = 640;\r\n    public height: number = 480;\r\n    public id: string = 'canvas-2d';\r\n    public canvas: HTMLCanvasElement;\r\n    public clearColor: Color = new Color(0, 0, 0, 1);\r\n\r\n    constructor(width: number, height: number, id: string) {\r\n        super();\r\n\r\n        this.width = width;\r\n        this.height = height;\r\n        this.id = id;\r\n\r\n        this.createCanvas();\r\n    }\r\n\r\n    public clear(color?: Color): void {\r\n        if (color) {\r\n            this.clearColor = color;\r\n        }\r\n\r\n        let ctx = this.getContext();\r\n\r\n        ctx.clearRect(0, 0, this.width, this.height);\r\n\r\n        if (color) {\r\n            ctx.save();\r\n            ctx.fillStyle = color.getHex();\r\n            ctx.fillRect(0, 0, this.width, this.height);\r\n            ctx.restore();\r\n        }\r\n    }\r\n\r\n    public getContext(): CanvasRenderingContext2D {\r\n        return this.canvas.getContext('2d');\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/graphics/surface2d.ts","import { Surface } from './surface.abstract';\r\nimport { Color } from './color';\r\n\r\nexport class Surface3d extends Surface {\r\n    public gl: WebGLRenderingContext;\r\n    public width: number;\r\n    public height: number;\r\n    public id: string;\r\n    public clearColor: Color = new Color(0, 0, 0, 1);\r\n    public canvas: HTMLCanvasElement;\r\n\r\n    constructor(width: number, height: number, id: string) {\r\n        super();\r\n\r\n        this.width = width;\r\n        this.height = height;\r\n        this.id = id;\r\n\r\n        this.createCanvas();\r\n        this.init();\r\n    }\r\n\r\n    private init(): void {\r\n        this.gl = this.getContext();\r\n\r\n        let colorFloats = this.clearColor.getRGBAFloat();\r\n        this.gl.clearColor(colorFloats[0], colorFloats[1], colorFloats[2], colorFloats[3]);\r\n    }\r\n\r\n    public clear(color?: Color): void {\r\n        let gl = this.gl;\r\n        if (color) {\r\n            this.clearColor = color;\r\n            let colorFloats = this.clearColor.getRGBAFloat();\r\n            gl.clearColor(colorFloats[0], colorFloats[1], colorFloats[2], colorFloats[3]);\r\n        }\r\n\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n        gl.enable(gl.BLEND);\r\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n    }\r\n\r\n    public getContext(): WebGLRenderingContext {\r\n        return this.canvas.getContext('webgl', { preserveDrawingBuffer: true }) ||\r\n            this.canvas.getContext('experimental-webgl', { preserveDrawingBuffer: true });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/graphics/surface3d.ts","import { Scene } from './scene';\r\nimport { Application } from './application';\r\n\r\ninterface SceneList {\r\n    [index: string]: Scene;\r\n}\r\n\r\nexport class SceneManager {\r\n    public scenes: SceneList = {};\r\n    public activeScene: string;\r\n\r\n    private application: Application;\r\n\r\n    constructor(application: Application) {\r\n        this.application = application;\r\n    }\r\n\r\n    public update(delta: number): void {\r\n        if (this.activeScene) {\r\n            this.scenes[this.activeScene].update(delta);\r\n            this.scenes[this.activeScene].render(delta);\r\n        }\r\n    }\r\n\r\n    public addScene(id: string): Scene {\r\n        if (this.scenes[id] !== undefined) {\r\n            throw new Error('Scene with id: ' + id + ' already exists.');\r\n        }\r\n\r\n        this.scenes[id] = new Scene(this.application);\r\n\r\n        if (!this.activeScene) {\r\n            this.activeScene = id;\r\n        }\r\n\r\n        return this.scenes[id];\r\n    }\r\n\r\n    public removeScene(id: string): void {\r\n        delete this.scenes[id];\r\n\r\n        if (this.activeScene === id) {\r\n            this.activeScene = this.getFirstScene();\r\n        }\r\n    }\r\n\r\n    public getScene(id: string): Scene {\r\n        if (this.scenes[id] === undefined) {\r\n            throw new Error('Scene with id: ' + id + ' is undefined.');\r\n        }\r\n\r\n        return this.scenes[id];\r\n    }\r\n\r\n    public setActiveScene(id: string): void {\r\n        if (this.scenes[id] === undefined) {\r\n            throw new Error('Scene with id: ' + id + ' is undefined.');\r\n        }\r\n\r\n        this.activeScene = id;\r\n    }\r\n\r\n    public getFirstScene(): string {\r\n        for (let scene in this.scenes) {\r\n            return scene;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/scene-manager.ts","import { Surface2d } from './graphics/surface2d';\r\nimport { Surface3d } from './graphics/surface3d';\r\nimport { Color } from './graphics/color';\r\nimport { Application } from './application';\r\n\r\ninterface SurfaceList {\r\n    [index: string]: Surface2d | Surface3d;\r\n}\r\n\r\nexport class Scene {\r\n    public surfaces: SurfaceList = {};\r\n    public render: (delta: number) => void;\r\n    public update: (delta: number) => void;\r\n\r\n    private application: Application;\r\n\r\n    constructor(application: Application) {\r\n        this.application = application;\r\n    }\r\n\r\n    public add3dSurface(id: string) {\r\n        this.surfaces[id] = new Surface3d(this.application.width, this.application.height, id);\r\n    }\r\n\r\n    public add2dSurface(id: string) {\r\n        this.surfaces[id] = new Surface2d(this.application.width, this.application.height, id);\r\n    }\r\n\r\n    public getContext(id: string) {\r\n        return this.surfaces[id].getContext();\r\n    }\r\n\r\n    public clear(id: string, color?: Color) {\r\n        if (color) {\r\n            this.surfaces[id].clear(color);\r\n        } else {\r\n            this.surfaces[id].clear();\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/scene.ts","import { PI } from './utility';\r\n\r\nexport function degreeToRadian(degree: number): number {\r\n    return degree * (PI / 180);\r\n}\r\n\r\nexport function radianToDegree(radian: number): number {\r\n    return radian * (180 / PI);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/utility/angle.ts","import * as gamesaw from '../../gamesaw-ts/src/index';\r\n\r\nexport class Projectile {\r\n    private gl: WebGLRenderingContext;\r\n    private texture: gamesaw.GL.Texture;\r\n    private sprite: gamesaw.GL.Sprite;\r\n    public collider: gamesaw.Geometry.Circle;\r\n    public speed: number;\r\n    public damage: number;\r\n    public direction: gamesaw.Geometry.Vector2;\r\n    public dead: boolean = false;\r\n\r\n    constructor(gl: WebGLRenderingContext, texture: gamesaw.GL.Texture, collider: gamesaw.Geometry.Circle, speed: number, damage: number, direction: gamesaw.Geometry.Vector2) {\r\n        this.texture = texture;\r\n        this.sprite = new gamesaw.GL.Sprite(texture, 6, 6, [406, 22, 6, 6]);\r\n        this.collider = collider;\r\n        this.speed = speed;\r\n        this.damage = damage;\r\n        this.direction = direction;\r\n    }\r\n\r\n    public isDead(): boolean {\r\n        return this.dead;\r\n    }\r\n\r\n    public update(delta: number): void {\r\n        let position: gamesaw.Geometry.Vector2 = new gamesaw.Geometry.Vector2(this.collider.pos.x, this.collider.pos.y);\r\n        let step: gamesaw.Geometry.Vector2;\r\n\r\n        step = this.direction.scale(this.speed * delta);\r\n        position = position.add(step);\r\n\r\n        this.collider.setX(position.x);\r\n        this.collider.setY(position.y);\r\n\r\n        if (this.collider.pos.x > 750 || this.collider.pos.x < 50 || this.collider.pos.y > 550 || this.collider.pos.y < 100) {\r\n            this.dead = true;\r\n        }\r\n    }\r\n\r\n    public render(renderer: gamesaw.GL.Render2d.Renderer2d) {\r\n        this.sprite.renderScale(renderer, this.collider.pos.x - this.collider.radius, this.collider.pos.y - this.collider.radius, 2);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/projectile.ts","import { Connection } from './connection';\r\nimport { Graph } from './graph';\r\nimport { Heuristic } from './heuristic';\r\nimport { NodeList } from './node-list';\r\nimport { NodeRecord } from './node-record';\r\nimport { Node } from './node';\r\nimport { PathFinder } from './path-finder';\r\n\r\nexport { Connection, Graph, Heuristic, NodeList, NodeRecord, Node, PathFinder }\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/ai/astar/index.ts","import { Node } from './node';\r\nimport { NodeRecord } from './node-record';\r\nimport { NodeList } from './node-list';\r\nimport { Heuristic } from './heuristic';\r\nimport { Connection } from './connection';\r\nimport { Graph } from './graph';\r\nimport { TilemapLayer } from '../../gl/tilemap/tilemap-layer';\r\n\r\nexport class PathFinder {\r\n    public startRecord: NodeRecord;\r\n    public open: NodeList;\r\n    public closed: NodeList;\r\n    public heuristic: Heuristic;\r\n    public graph: Graph;\r\n\r\n    constructor() {\r\n        this.startRecord = new NodeRecord();\r\n        this.open = new NodeList();\r\n        this.closed = new NodeList();\r\n    }\r\n\r\n    public generatePathData(map: TilemapLayer, closed: number[]) {\r\n        let nodes: Node[][] = [];\r\n\r\n        for (let i = 0; i < map.height; i += 1) {\r\n            nodes[i] = [];\r\n            for (let j = 0; j < map.width; j += 1) {\r\n                let blocked = closed.indexOf(map.tiles[(i * map.width) + j]) !== -1;\r\n                nodes[i][j] = new Node(j, i);\r\n                nodes[i][j].setBlocked(blocked);\r\n            }\r\n        }\r\n\r\n        this.graph = new Graph(nodes);\r\n    }\r\n\r\n    public findPath(startNode: Node, endNode: Node): Node[] {\r\n        let path: Node[] = [];\r\n        let current: NodeRecord;\r\n        let connections: Connection[] = [];\r\n        let end: Node;\r\n        let endNodeCost: number;\r\n        let endNodeRecord: NodeRecord;\r\n        let endNodeHeuristic: number;\r\n\r\n        this.startRecord = new NodeRecord();\r\n        this.open = new NodeList();\r\n        this.closed = new NodeList();\r\n\r\n        this.heuristic = new Heuristic(endNode);\r\n\r\n        if (this.graph.getNode(endNode).blocked) {\r\n            return null;\r\n        }\r\n\r\n        this.startRecord.setNode(this.graph.getNode(startNode));\r\n        this.startRecord.setEstimatedCost(this.heuristic.euclideanDistance(this.startRecord.getNode()));\r\n\r\n        this.open.add(this.startRecord);\r\n\r\n        while (this.open.size() > 0) {\r\n            current = this.open.getSmallest();\r\n\r\n            if (current.node.x === endNode.x && current.node.y === endNode.y) {\r\n                break;\r\n            }\r\n\r\n            connections = this.graph.getConnections(current.getNode());\r\n\r\n            for (let i = 0; i < connections.length; i += 1) {\r\n                end = connections[i].getDstNode();\r\n                endNodeCost = current.getCurrentCost() + connections[i].getCost();\r\n\r\n                if (this.closed.contains(end)) {\r\n                    endNodeRecord = this.closed.find(end);\r\n\r\n                    if (endNodeRecord.getCurrentCost() <= endNodeCost) {\r\n                        continue;\r\n                    }\r\n\r\n                    this.closed.remove(endNodeRecord.getNode());\r\n                    endNodeHeuristic = endNodeRecord.getEstimatedCost() - endNodeRecord.getCurrentCost();\r\n                } else if (this.open.contains(end)) {\r\n                    endNodeRecord = this.open.find(end);\r\n\r\n                    if (endNodeRecord.getCurrentCost() <= endNodeCost) {\r\n                        continue;\r\n                    }\r\n\r\n                    endNodeHeuristic = endNodeRecord.getEstimatedCost() - endNodeRecord.getCurrentCost();\r\n                } else {\r\n                    endNodeRecord = new NodeRecord();\r\n                    endNodeRecord.setNode(end);\r\n\r\n                    endNodeHeuristic = this.heuristic.euclideanDistance(end);\r\n                }\r\n\r\n                endNodeRecord.setCurrentCost(endNodeCost);\r\n                endNodeRecord.setConnection(connections[i]);\r\n                endNodeRecord.setEstimatedCost(endNodeCost + endNodeHeuristic);\r\n\r\n                if (!this.open.contains(end)) {\r\n                    this.open.add(endNodeRecord);\r\n                }\r\n            }\r\n\r\n            this.open.remove(current.getNode());\r\n            this.closed.add(current);\r\n        }\r\n\r\n        if (!(current.node.x === endNode.x && current.node.y === endNode.y)) {\r\n            return null;\r\n        } else {\r\n            while (!(current.node.x === startNode.x && current.node.y === startNode.y)) {\r\n                path.push(current.connection.getDstNode());\r\n                current = this.closed.find(current.connection.getSrcNode());\r\n            }\r\n        }\r\n\r\n        return path;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/ai/astar/path-finder.ts","import * as AStar from './astar/index';\r\n\r\nexport { AStar }\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/ai/index.ts","import { SceneManager } from './scene-manager';\r\n\r\nexport class Application {\r\n    public sceneManager: SceneManager;\r\n    public active: boolean = true;\r\n    public applicationTimer: number;\r\n    public targetFps: number = 30;\r\n    public delta: number;\r\n    public lastDelta: number;\r\n    public lastUpdate: number;\r\n    public fps: number;\r\n    public frames: number;\r\n    public width: number;\r\n    public height: number;\r\n\r\n    constructor(width: number, height: number, targetFps?: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        if (targetFps) {\r\n            this.targetFps = targetFps;\r\n        }\r\n\r\n        this.sceneManager = new SceneManager(this);\r\n    }\r\n\r\n    public init(): void {\r\n        this.lastDelta = new Date().getTime();\r\n\r\n        this.start();\r\n    }\r\n\r\n    public start(): void {\r\n        this.applicationTimer = window.setInterval(() => {\r\n            this.update();\r\n        }, (1000 / this.targetFps));\r\n    }\r\n\r\n    public stop(): void {\r\n        window.clearInterval(this.applicationTimer);\r\n    }\r\n\r\n    public step(): void {\r\n        this.update();\r\n    }\r\n\r\n    public update(): void {\r\n        let now = new Date().getTime();\r\n        let delta = now - this.lastDelta;\r\n        this.lastDelta = now;\r\n\r\n        if (now - this.lastUpdate > 1000) {\r\n            this.fps = this.frames;\r\n            this.frames = 0;\r\n            this.lastUpdate = now;\r\n        } else {\r\n            this.frames += 1;\r\n        }\r\n\r\n        this.sceneManager.update(delta);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/application.ts","import { Sample } from './sample';\r\nimport { Track } from './track';\r\n\r\nexport { Sample, Track }\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/audio/index.ts","import { ResourceManager } from '../utility/resource-manager';\r\n\r\nexport class Sample {\r\n    public url: string;\r\n    public sample: HTMLAudioElement;\r\n    public length: number;\r\n    public loaded: boolean = false;\r\n    private resourceManager: ResourceManager;\r\n\r\n    constructor(url: string) {\r\n        if (url) {\r\n            this.url = url;\r\n            this.load(url);\r\n        }\r\n\r\n        this.resourceManager = ResourceManager.getInstance();\r\n    }\r\n\r\n    public load(url: string): void {\r\n        let _this = this;\r\n        this.sample = new Audio();\r\n        this.sample.src = url;\r\n\r\n        this.resourceManager.addAudio();\r\n\r\n        this.sample.addEventListener('load', (event) => {\r\n            _this.loadHandler(event);\r\n        });\r\n        this.sample.addEventListener('error', _this.errorHandler);\r\n    }\r\n\r\n    public play(): void {\r\n        this.sample.currentTime = 0;\r\n        this.sample.play();\r\n    }\r\n\r\n    public pause(): void {\r\n        this.sample.pause();\r\n    }\r\n\r\n    public stop(): void {\r\n        this.sample.pause();\r\n        this.sample.currentTime = 0;\r\n    }\r\n\r\n    public seek(time: number) {\r\n        this.sample.currentTime = time;\r\n    }\r\n\r\n    public setSpeed(speed: number) {\r\n        this.sample.playbackRate = speed;\r\n    }\r\n\r\n    public getSpeed(): number {\r\n        return this.sample.playbackRate;\r\n    }\r\n\r\n    public loadHandler(event: Event) {\r\n        this.loaded = true;\r\n        this.length = this.sample.duration;\r\n\r\n        this.resourceManager.audioReady();\r\n    }\r\n\r\n    public errorHandler(event: Event) {\r\n        this.resourceManager.audioFailed();\r\n\r\n        throw new Error('Failed to load audio resource.');\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/audio/sample.ts","import { ResourceManager } from '../utility/resource-manager';\r\n\r\nexport class Track {\r\n    public url: string;\r\n    public track: HTMLAudioElement;\r\n    public length: number;\r\n    public loop: boolean = false;\r\n    public loaded: boolean = false;\r\n    private resourceManager: ResourceManager;\r\n\r\n    constructor(url: string) {\r\n        if (url) {\r\n            this.url = url;\r\n            this.load(url);\r\n        }\r\n\r\n        this.resourceManager = ResourceManager.getInstance();\r\n    }\r\n\r\n    public load(url: string): void {\r\n        let _this = this;\r\n        this.track = new Audio();\r\n        this.track.src = url;\r\n\r\n        this.resourceManager.addAudio();\r\n\r\n        this.track.addEventListener('load', (event) => {\r\n            _this.loadHandler(event);\r\n        });\r\n        this.track.addEventListener('error', _this.errorHandler);\r\n    }\r\n\r\n    public play(): void {\r\n        this.track.play();\r\n    }\r\n\r\n    public pause(): void {\r\n        this.track.pause();\r\n    }\r\n\r\n    public stop(): void {\r\n        this.track.pause();\r\n        this.track.currentTime = 0;\r\n    }\r\n\r\n    public seek(time: number) {\r\n        this.track.currentTime = time;\r\n    }\r\n\r\n    public setSpeed(speed: number) {\r\n        this.track.playbackRate = speed;\r\n    }\r\n\r\n    public getSpeed(): number {\r\n        return this.track.playbackRate;\r\n    }\r\n\r\n    public setLoopable(loop: boolean): void {\r\n        this.loop = loop;\r\n    }\r\n\r\n    public loadHandler(event: Event) {\r\n        this.loaded = true;\r\n        this.length = this.track.duration;\r\n\r\n        this.resourceManager.audioReady();\r\n    }\r\n\r\n    public errorHandler(event: Event) {\r\n        this.resourceManager.audioFailed();\r\n\r\n        throw new Error('Failed to load audio resource.');\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/audio/track.ts","import { GeometricEnum, GeometricObject } from './geometry';\r\nimport { Point } from './point';\r\n\r\nexport class AABB implements GeometricObject {\r\n    public type = GeometricEnum.AABB;\r\n    public pos: Point = new Point(0, 0);\r\n    public halfWidth = 1;\r\n    public halfHeight = 1;\r\n\r\n    constructor(x: number, y: number, halfWidth: number, halfHeight: number) {\r\n        if (x && y) {\r\n            this.pos.set(x, y);\r\n        }\r\n\r\n        if (halfWidth) {\r\n            this.halfWidth = halfWidth;\r\n        }\r\n\r\n        if (halfHeight) {\r\n            this.halfHeight = halfHeight;\r\n        }\r\n    }\r\n\r\n    public setPosition(x: number, y: number) {\r\n        this.pos.set(x, y);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/geometry/aabb.ts","import { GeometricEnum, GeometricObject } from './geometry';\r\nimport { Vector2 } from './vector2d';\r\nimport { Point } from './point';\r\n\r\nexport class Bezier implements GeometricObject {\r\n    public type = GeometricEnum.BEZIER;\r\n    public start: Vector2 = new Vector2(0.0, 0.0);\r\n    public end: Vector2 = new Vector2(1.0, 0.0);\r\n    public controlStart: Vector2 = new Vector2(0.0, 0.0);\r\n    public controlEnd: Vector2 = new Vector2(1.0, 0.0);\r\n\r\n    constructor(startX: number, startY: number, endX: number, endY: number) {\r\n        this.start.set(startX, startY);\r\n        this.controlStart.set(startX, startY);\r\n        this.end.set(endX, endY);\r\n        this.controlEnd.set(endX, endY);\r\n    }\r\n\r\n    public getPoint(t: number): Vector2 {\r\n        let point: Vector2 = new Vector2(this.start.x, this.start.y);\r\n\r\n        if (t !== 0) {\r\n            let u: number = 1 - t;\r\n            let tt: number = t * t;\r\n            let uu: number = u * u;\r\n            let uuu: number = uu * u;\r\n            let ttt: number = tt * t;\r\n\r\n            point = this.start.scale(uuu);\r\n            point = point.add(this.controlStart.scale(3 * uu * t));\r\n            point = point.add(this.controlEnd.scale(3 * u * tt));\r\n            point = point.add(this.end.scale(ttt));\r\n        }\r\n\r\n        return point;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/geometry/bezier.ts","import { GeometricEnum, GeometricObject } from './geometry';\r\nimport { Vector2 } from './vector2d';\r\n\r\nexport class BSpline implements GeometricObject {\r\n    public type = GeometricEnum.BSPLINE;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/geometry/bspline.ts","import { GeometricEnum, GeometricObject } from './geometry';\r\nimport { Point } from './point';\r\n\r\nexport class Circle implements GeometricObject {\r\n    public type = GeometricEnum.CIRCLE;\r\n    public pos: Point = new Point(0, 0);\r\n    public radius: number = 1;\r\n\r\n    constructor(x: number, y: number, radius: number) {\r\n        if (x) {\r\n            this.pos.x = x;\r\n        }\r\n\r\n        if (y) {\r\n            this.pos.y = y;\r\n        }\r\n\r\n        if (radius) {\r\n            this.radius = radius;\r\n        }\r\n    }\r\n\r\n    public getType(): GeometricEnum {\r\n        return this.type;\r\n    }\r\n\r\n    public getX(): number {\r\n        return this.pos.x;\r\n    }\r\n\r\n    public getY(): number {\r\n        return this.pos.y;\r\n    }\r\n\r\n    public setX(x: number) {\r\n        this.pos.x = x;\r\n    }\r\n\r\n    public setY(y: number) {\r\n        this.pos.y = y;\r\n    }\r\n\r\n    public set(x: number, y: number, radius: number) {\r\n        this.pos.x = x;\r\n        this.pos.y = y;\r\n        this.radius = radius;\r\n    }\r\n\r\n    public get(): Circle {\r\n        return this;\r\n    }\r\n\r\n    public transform(x: number, y: number) {\r\n        this.pos.x += x;\r\n        this.pos.y += y;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/geometry/circle.ts","import { GeometricEnum, GeometricName, GeometricObject } from './geometry';\r\nimport { capitalize } from '../utility/utility';\r\nimport {\r\n    Vector2,\r\n    Point,\r\n    Vector3,\r\n    Line,\r\n    Circle,\r\n    Rectangle,\r\n    AABB,\r\n    Polygon,\r\n    Bezier,\r\n    BSpline\r\n} from './index';\r\n\r\nexport function intersects(obj0: GeometricObject, obj1: GeometricObject): boolean {\r\n    let collider = new Collider();\r\n\r\n    return collider.intersects(obj0, obj1);\r\n};\r\n\r\nexport class Collider {\r\n\r\n    constructor() {}\r\n\r\n    public intersects(obj0: GeometricObject, obj1: GeometricObject): boolean {\r\n        // Need to check the first object if we can use it as main collider body\r\n        switch (obj0.type) {\r\n            case GeometricEnum.POINT:\r\n            switch (obj1.type) {\r\n                case GeometricEnum.LINE:\r\n                return this.pointLine();\r\n                case GeometricEnum.CIRCLE:\r\n                return this.pointCircle(obj0 as Point, obj1 as Circle);\r\n                case GeometricEnum.RECTANGLE:\r\n                return this.pointRectangle(obj0 as Point, obj1 as Rectangle);\r\n                case GeometricEnum.AABB:\r\n                return this.pointAABB(obj0 as Point, obj1 as AABB);\r\n                case GeometricEnum.POLYGON:\r\n                return this.pointPolygon();\r\n                default:\r\n                throw new Error('Second object not a collidable body');\r\n            }\r\n            case GeometricEnum.LINE:\r\n            switch (obj1.type) {\r\n                case GeometricEnum.POINT:\r\n                return this.linePoint();\r\n                case GeometricEnum.CIRCLE:\r\n                return this.lineCircle();\r\n                case GeometricEnum.RECTANGLE:\r\n                return this.lineRectangle();\r\n                case GeometricEnum.POLYGON:\r\n                return this.linePolygon();\r\n                default:\r\n                throw new Error('Second object not a collidable body');\r\n            }\r\n            case GeometricEnum.CIRCLE:\r\n            switch (obj1.type) {\r\n                case GeometricEnum.CIRCLE:\r\n                return this.circleCircle(obj0 as Circle, obj1 as Circle);\r\n                case GeometricEnum.LINE:\r\n                return this.circleLine();\r\n                case GeometricEnum.POINT:\r\n                return this.circlePoint(obj0 as Circle, obj1 as Point);\r\n                case GeometricEnum.RECTANGLE:\r\n                return this.circleRectangle();\r\n                case GeometricEnum.AABB:\r\n                return this.circleAABB(obj0 as Circle, obj1 as AABB);\r\n                case GeometricEnum.POLYGON:\r\n                return this.circlePolygon(obj0 as Circle, obj1 as Polygon);\r\n                default:\r\n                throw new Error('Second object not a collidable body');\r\n            }\r\n            case GeometricEnum.RECTANGLE:\r\n            switch (obj1.type) {\r\n                case GeometricEnum.RECTANGLE:\r\n                return this.rectangleRectangle(obj0 as Rectangle, obj1 as Rectangle);\r\n                case GeometricEnum.AABB:\r\n                return this.rectangleAABB(obj0 as Rectangle, obj1 as AABB);\r\n                case GeometricEnum.LINE:\r\n                return this.rectangleLine();\r\n                case GeometricEnum.CIRCLE:\r\n                return this.rectangleCircle();\r\n                case GeometricEnum.POINT:\r\n                return this.rectanglePoint(obj0 as Rectangle, obj1 as Point);\r\n                case GeometricEnum.POLYGON:\r\n                return this.rectanglePolygon();\r\n                default:\r\n                throw new Error('Second object not a collidable body');\r\n            }\r\n            case GeometricEnum.POLYGON:\r\n            switch (obj1.type) {\r\n                case GeometricEnum.POLYGON:\r\n                return this.polygonPolygon();\r\n                case GeometricEnum.LINE:\r\n                return this.polygonLine();\r\n                case GeometricEnum.CIRCLE:\r\n                return this.polygonCircle(obj0 as Polygon, obj1 as Circle);\r\n                case GeometricEnum.RECTANGLE:\r\n                return this.polygonRectangle();\r\n                case GeometricEnum.POINT:\r\n                return this.polygonPoint();\r\n                default:\r\n                throw new Error('Second object not a collidable body');\r\n            }\r\n            case GeometricEnum.AABB:\r\n            switch (obj1.type) {\r\n                case GeometricEnum.AABB:\r\n                return this.aabbAABB(obj0 as AABB, obj1 as AABB);\r\n                case GeometricEnum.POINT:\r\n                return this.aabbPoint(obj0 as AABB, obj1 as Point);\r\n                case GeometricEnum.CIRCLE:\r\n                return this.aabbCircle(obj0 as AABB, obj1 as Circle);\r\n                case GeometricEnum.RECTANGLE:\r\n                return this.aabbRectangle(obj0 as AABB, obj1 as Rectangle);\r\n            }\r\n            default:\r\n                throw new Error('Couldn\\'t find any collider for type');\r\n        }\r\n    }\r\n\r\n    public pointLine(): boolean {\r\n        return true;\r\n    }\r\n    public linePoint(): boolean {\r\n        return true;\r\n    }\r\n\r\n    public pointCircle(obj0: Point, obj1: Circle): boolean {\r\n        let v0: Vector2 = new Vector2(obj0.x, obj0.y);\r\n        let v1: Vector2 = new Vector2(obj1.pos.x, obj1.pos.y);\r\n        let len: number = v1.sub(v0).length();\r\n\r\n        return len < obj1.radius;\r\n    }\r\n    public circlePoint(obj0: Circle, obj1: Point): boolean {\r\n        return this.pointCircle(obj1, obj0);\r\n    }\r\n\r\n    public pointRectangle(obj0: Point, obj1: Rectangle): boolean {\r\n        return (obj0.x > obj1.pos.x && obj0.x < obj1.pos.x + obj1.width &&\r\n                obj0.y > obj1.pos.y && obj0.y < obj1.pos.y + obj1.height);\r\n    }\r\n    public rectanglePoint(obj0: Rectangle, obj1: Point): boolean {\r\n        return this.pointRectangle(obj1, obj0);\r\n    }\r\n\r\n    public pointPolygon(): boolean {\r\n        return true;\r\n    }\r\n    public polygonPoint(): boolean {\r\n        return this.pointPolygon();\r\n    }\r\n\r\n    public lineLine(): boolean {\r\n        return true;\r\n    }\r\n\r\n    public lineCircle(): boolean {\r\n        return true;\r\n    }\r\n    public circleLine(): boolean {\r\n        return this.lineCircle();\r\n    }\r\n\r\n    public lineRectangle(): boolean {\r\n        return true;\r\n    }\r\n    public rectangleLine(): boolean {\r\n        return this.lineRectangle();\r\n    }\r\n\r\n    public linePolygon(): boolean {\r\n        return true;\r\n    }\r\n    public polygonLine(): boolean {\r\n        return this.linePolygon();\r\n    }\r\n\r\n    public circleCircle(obj0: Circle, obj1: Circle): boolean {\r\n        let v0: Vector2 = new Vector2(obj0.pos.x, obj0.pos.y);\r\n        let v1: Vector2 = new Vector2(obj1.pos.x, obj1.pos.y);\r\n        let len: number = v1.sub(v0).length();\r\n        let cRadi: number = obj0.radius + obj1.radius;\r\n\r\n        return len < cRadi;\r\n    }\r\n\r\n    public circleRectangle(): boolean {\r\n        return true;\r\n    }\r\n    public rectangleCircle(): boolean {\r\n        return this.circleRectangle();\r\n    }\r\n\r\n    public circlePolygon(obj0: Circle, obj1: Polygon): boolean {\r\n        return true;\r\n    }\r\n    public polygonCircle(obj0: Polygon, obj1: Circle): boolean {\r\n        return this.circlePolygon(obj1, obj0);\r\n    }\r\n\r\n    public rectangleRectangle(obj0: Rectangle, obj1: Rectangle): boolean {\r\n        return (obj0.pos.x + obj0.width >= obj1.pos.x &&\r\n                obj0.pos.y + obj0.height >= obj1.pos.y &&\r\n                obj0.pos.x <= obj1.pos.x + obj1.width &&\r\n                obj0.pos.y <= obj1.pos.y + obj1.height);\r\n    }\r\n\r\n    public rectanglePolygon(): boolean {\r\n        return true;\r\n    }\r\n    public polygonRectangle(): boolean {\r\n        return this.rectanglePolygon();\r\n    }\r\n\r\n    public polygonPolygon(): boolean {\r\n        return true;\r\n    }\r\n\r\n    public pointAABB(obj0: Point, obj1: AABB): boolean {\r\n        if (Math.abs(obj1.pos.x - obj0.x) > obj1.halfWidth) {\r\n            return false;\r\n        } else if (Math.abs(obj1.pos.y - obj0.y) > obj1.halfHeight) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    public aabbPoint(obj0: AABB, obj1: Point): boolean {\r\n        return this.pointAABB(obj1, obj0);\r\n    }\r\n\r\n    public circleAABB(obj0: Circle, obj1: AABB): boolean {\r\n        if (Math.abs(obj1.pos.x - obj0.pos.x) > (obj1.halfWidth + obj0.radius)) {\r\n            return false;\r\n        } else if (Math.abs(obj1.pos.y - obj0.pos.y) > (obj1.halfHeight + obj0.radius)) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    public aabbCircle(obj0: AABB, obj1: Circle): boolean {\r\n        return this.circleAABB(obj1, obj0);\r\n    }\r\n\r\n    public rectangleAABB(obj0: Rectangle, obj1: AABB): boolean {\r\n        let halfWidth: number = obj0.width / 2;\r\n        let halfHeight: number = obj0.height / 2;\r\n\r\n        if (Math.abs(obj0.pos.x + halfWidth - obj1.pos.x) > (halfWidth + obj1.halfWidth)) {\r\n            return false;\r\n        } else if (Math.abs(obj0.pos.y + halfHeight - obj1.pos.y) > (halfHeight + obj1.halfHeight)) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    public aabbRectangle(obj0: AABB, obj1: Rectangle): boolean {\r\n        return this.rectangleAABB(obj1, obj0);\r\n    }\r\n\r\n    public aabbAABB(obj0: AABB, obj1: AABB): boolean {\r\n        if (Math.abs(obj0.pos.x - obj1.pos.x) > (obj0.halfWidth + obj1.halfWidth)) {\r\n            return false;\r\n        } else if (Math.abs(obj0.pos.y - obj1.pos.y) > (obj0.halfHeight + obj1.halfHeight)) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/geometry/collision.ts","import { GeometricEnum, GeometricObject } from './geometry';\r\nimport { Point } from './point';\r\n\r\nexport class Line implements GeometricObject {\r\n    public type = GeometricEnum.LINE;\r\n    public start = new Point(-1, 0);\r\n    public end = new Point(1, 0);\r\n\r\n    constructor(x0: number, y0: number, x1: number, y1: number) {\r\n        if (x0 && y0) {\r\n            this.start.set(x0, y0);\r\n        }\r\n\r\n        if (x1 && y1) {\r\n            this.end.set(x1, y1);\r\n        }\r\n    }\r\n\r\n    public transform(x: number, y: number) {\r\n        this.start.transform(x, y);\r\n        this.end.transform(x, y);\r\n    }\r\n\r\n    public transformStart(x: number, y: number) {\r\n        this.start.transform(x, y);\r\n    }\r\n\r\n    public transformEnd(x: number, y: number) {\r\n        this.end.transform(x, y);\r\n    }\r\n\r\n    public set(x0: number, y0: number, x1: number, y1: number) {\r\n        this.start.set(x0, y0);\r\n        this.end.set(x1, y1);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/geometry/line.ts","import { GeometricEnum, GeometricObject } from './geometry';\r\nimport { Point } from './point';\r\n\r\nexport class Polygon implements GeometricObject {\r\n    public type = GeometricEnum.POLYGON;\r\n    public points: Point[] = [\r\n        new Point(0, 0),\r\n        new Point(1, -1),\r\n        new Point(-1, -1)\r\n    ];\r\n\r\n    constructor(points: Point[]) {\r\n        this.points = points;\r\n    }\r\n\r\n    public addPoint(point: Point): void {\r\n        this.points.push(point);\r\n    }\r\n\r\n    public removePoint(index: number): void {\r\n        this.points.splice(index, 1);\r\n    }\r\n\r\n    public removeFirst(): void {\r\n        this.points.shift();\r\n    }\r\n\r\n    public removeLast(): void {\r\n        this.points.pop();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/geometry/polygon.ts","import { GeometricEnum, GeometricObject } from './geometry';\r\nimport {\r\n    Vector2,\r\n    Point,\r\n    Vector3,\r\n    Line,\r\n    Circle,\r\n    Rectangle,\r\n    AABB,\r\n    Polygon,\r\n    Bezier,\r\n    BSpline\r\n} from './index';\r\nimport { PI } from '../utility/utility';\r\n\r\nexport function render(ctx: CanvasRenderingContext2D, object: GeometricObject): void {\r\n    let renderer = new Renderer(ctx);\r\n    renderer.render(object);\r\n};\r\n\r\nexport class Renderer {\r\n    private context: CanvasRenderingContext2D;\r\n\r\n    constructor(context: CanvasRenderingContext2D) {\r\n        this.context = context;\r\n    }\r\n\r\n    public render(object: GeometricObject): void {\r\n        if (!this.context) {\r\n            throw new Error('Renderer must have a context for rendering.');\r\n        }\r\n\r\n        switch (object.type) {\r\n            case GeometricEnum.POINT:\r\n                this.renderPoint(object as Point);\r\n                break;\r\n            case GeometricEnum.VECTOR2:\r\n                this.renderPoint(object as Vector2);\r\n                break;\r\n            case GeometricEnum.LINE:\r\n                this.renderLine(object as Line);\r\n                break;\r\n            case GeometricEnum.AABB:\r\n                this.renderAABB(object as AABB);\r\n            break;\r\n            case GeometricEnum.RECTANGLE:\r\n                this.renderRectangle(object as Rectangle);\r\n            break;\r\n            case GeometricEnum.CIRCLE:\r\n                this.renderCircle(object as Circle);\r\n            break;\r\n            default:\r\n                throw new Error('Not recogniced as a renderable shape.');\r\n        }\r\n    }\r\n\r\n    private renderPoint(obj: Point | Vector2): void {\r\n        this.context.beginPath();\r\n        this.context.arc(obj.x, obj.y, 1.0, 0, PI * 2);\r\n        this.context.fill();\r\n    }\r\n\r\n    private renderLine(obj: Line): void {\r\n        this.context.beginPath();\r\n        this.context.moveTo(obj.start.x, obj.start.y);\r\n        this.context.lineTo(obj.end.x, obj.end.x);\r\n        this.context.stroke();\r\n    }\r\n\r\n    private renderAABB(obj: AABB): void {\r\n        this.context.strokeRect(obj.pos.x - obj.halfWidth, obj.pos.y - obj.halfHeight, obj.halfWidth * 2, obj.halfHeight * 2);\r\n    }\r\n\r\n    private renderRectangle(obj: Rectangle): void {\r\n        this.context.strokeRect(obj.pos.x, obj.pos.y, obj.width, obj.height);\r\n    }\r\n\r\n    private renderCircle(obj: Circle): void {\r\n        this.context.beginPath();\r\n        this.context.arc(obj.pos.x, obj.pos.y, obj.radius, 0, PI * 2);\r\n        this.context.stroke();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/geometry/renderer.ts","import { GeometricEnum, GeometricObject } from './geometry';\r\n\r\nexport interface Vec3 {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n}\r\n\r\nexport class Vector3 implements GeometricObject, Vec3 {\r\n    public type = GeometricEnum.VECTOR3;\r\n    public x: number = 0.0;\r\n    public y: number = 0.0;\r\n    public z: number = 0.0;\r\n\r\n    constructor(x: number, y: number, z: number) {\r\n        if (x) {\r\n            this.x = x;\r\n        }\r\n\r\n        if (y) {\r\n            this.y = y;\r\n        }\r\n\r\n        if (z) {\r\n            this.z = z;\r\n        }\r\n    }\r\n\r\n    public getType(): GeometricEnum {\r\n        return this.type;\r\n    }\r\n\r\n    public getX(): number {\r\n        return this.x;\r\n    }\r\n\r\n    public getY(): number {\r\n        return this.y;\r\n    }\r\n\r\n    public getZ(): number {\r\n        return this.z;\r\n    }\r\n\r\n    public setX(x: number) {\r\n        this.x = x;\r\n    }\r\n\r\n    public setY(y: number) {\r\n        this.y = y;\r\n    }\r\n\r\n    public setZ(z: number) {\r\n        this.z = z;\r\n    }\r\n\r\n    public set(x: number, y: number, z: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n\r\n    public get(): Vec3 {\r\n        return this;\r\n    }\r\n\r\n    public add(v2: Vec3): Vector3 {\r\n        return new Vector3(this.x + v2.x, this.y + v2.y, this.z + v2.z);\r\n    }\r\n\r\n    public sub(v2: Vec3): Vector3 {\r\n        return new Vector3(this.x - v2.x, this.y - v2.y, this.z - v2.z);\r\n    }\r\n\r\n    public invert(): Vector3 {\r\n        return new Vector3(-this.x, -this.y, -this.z);\r\n    }\r\n\r\n    public scale(scalar: number): Vector3 {\r\n        return new Vector3(this.x * scalar, this.y * scalar, this.z * scalar);\r\n    }\r\n\r\n    public normalize(): Vector3 {\r\n        let length = this.length();\r\n\r\n        if (length === 0) {\r\n            return new Vector3(0.0, 0.0, 0.0);\r\n        }\r\n\r\n        return new Vector3(this.x / length, this.y / length, this.z / length);\r\n    }\r\n\r\n    public project(v2: Vec3): Vector3 {\r\n        let dot = this.dot(v2);\r\n        let length = this.lengthSquared();\r\n\r\n        return new Vector3((dot / length) * this.x, (dot / length) * this.y, (dot / length) * this.z);\r\n    }\r\n\r\n    public length(): number {\r\n        return Math.sqrt(this.lengthSquared());\r\n    }\r\n\r\n    public lengthSquared(): number {\r\n        return (this.x * this.x) + (this.y * this.y) + (this.z * this.z);\r\n    }\r\n\r\n    public dot(v2: Vec3): number {\r\n        return ((this.x * v2.x) + (this.y * v2.y) + (this.z * v2.z));\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/geometry/vector3d.ts","import { Sprite } from './sprite';\r\nimport { Renderer2d } from './renderer2d/renderer2d';\r\n\r\nexport interface Animations {\r\n    [index: string]: AnimatedSprite;\r\n}\r\n\r\nexport class AnimatedSprite {\r\n    public frames: Sprite[] = [];\r\n    public loop: boolean = false;\r\n    public active: boolean = true;\r\n    public timePerFrame: number = 100;\r\n    public currentFrame: number = 0;\r\n    public currentDelta: number = 0;\r\n\r\n    constructor(frames?: Sprite[], loop?: boolean, timePerFrame?: number) {\r\n        if (frames) {\r\n            this.frames = frames;\r\n        }\r\n\r\n        if (loop) {\r\n            this.loop = loop;\r\n        }\r\n\r\n        if (timePerFrame) {\r\n            this.timePerFrame = timePerFrame;\r\n        }\r\n    }\r\n\r\n    public play(): void {\r\n        this.active = true;\r\n    }\r\n\r\n    public stop(): void {\r\n        this.active = false;\r\n        this.currentFrame = 0;\r\n        this.currentDelta = 0;\r\n    }\r\n\r\n    public pause(): void {\r\n        this.active = false;\r\n    }\r\n\r\n    public nextFrame(): void {\r\n        this.currentFrame += 1;\r\n\r\n        if (this.currentFrame >= this.frames.length) {\r\n            if (!this.loop) {\r\n                this.active = false;\r\n            }\r\n            this.currentFrame = 0;\r\n        }\r\n    }\r\n\r\n    public update(delta: number): void {\r\n        if (this.active) {\r\n            this.currentDelta += delta;\r\n\r\n            if (this.currentDelta > this.timePerFrame) {\r\n                this.currentDelta = 0;\r\n                this.nextFrame();\r\n            }\r\n        }\r\n    }\r\n\r\n    public render(renderer: Renderer2d, x: number, y: number): void {\r\n        this.frames[this.currentFrame].render(renderer, x, y);\r\n    }\r\n\r\n    public renderScale(renderer: Renderer2d, x: number, y: number, scale: number, scaleY?: number): void {\r\n        if (scaleY) {\r\n            this.frames[this.currentFrame].renderScale(renderer, x, y, scale, scaleY);\r\n        } else {\r\n            this.frames[this.currentFrame].renderScale(renderer, x, y, scale);\r\n        }\r\n    }\r\n\r\n    public renderAngle(renderer: Renderer2d, x: number, y: number, angle: number): void {\r\n        this.frames[this.currentFrame].renderAngle(renderer, x, y, angle);\r\n    }\r\n\r\n    public renderAngleScale(renderer: Renderer2d, x: number, y: number, angle: number, scale: number, scaleY?: number): void {\r\n        if (scaleY) {\r\n            this.frames[this.currentFrame].renderAngleScale(renderer, x, y, angle, scale, scaleY);\r\n        } else {\r\n            this.frames[this.currentFrame].renderAngleScale(renderer, x, y, angle, scale);\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/animated-sprite.ts","import { Program, ShaderType } from '../shader/program';\r\nimport { Color } from '../../graphics/color';\r\nimport { RenderCall } from '../renderer2d/render-call';\r\n\r\nconst vertexShader: string = 'attribute vec2 a_position;\\n' +\r\n'attribute vec2 a_texCoord;\\n' +\r\n'varying vec2 v_texCoord;\\n' +\r\n'uniform vec2 u_resolution;\\n' +\r\n'void main() {\\n' +\r\n'\tvec2 zeroToOne = a_position / u_resolution;\\n' +\r\n'\tvec2 zeroToTwo = zeroToOne * 2.0;\\n' +\r\n'\tvec2 clipSpace = zeroToTwo - 1.0;\\n' +\r\n'\tgl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\\n' +\r\n'\tv_texCoord = a_texCoord;\\n' +\r\n'}\\n';\r\n\r\nconst fragmentShader: string = 'precision mediump float;\\n' +\r\n'uniform sampler2D u_image;\\n' +\r\n'uniform vec4 u_color;\\n' +\r\n'varying vec2 v_texCoord;\\n\\n' +\r\n'void main() {\\n' +\r\n'\tvec4 baseTexture = texture2D(u_image, v_texCoord);\\n' +\r\n'\tgl_FragColor = baseTexture * u_color * u_color.w;\\n' +\r\n'}\\n';\r\n\r\ninterface RenderCalls {\r\n    [index: number]: RenderCall;\r\n}\r\n\r\nexport class FontRenderer {\r\n    public gl: WebGLRenderingContext;\r\n    public program: Program;\r\n    public resolution: WebGLUniformLocation;\r\n    public colorLocation: WebGLUniformLocation;\r\n    public position: number;\r\n    public textureCoordinates: number;\r\n    public vertexBuffer: WebGLBuffer;\r\n    public indexBuffer: WebGLBuffer;\r\n    public texCoordBuffer: WebGLBuffer;\r\n    public color: Color = new Color(255, 255, 255, 1);\r\n    public width: number = 800;\r\n    public height: number = 600;\r\n\r\n    public renderCalls: RenderCalls = {};\r\n\r\n    constructor(gl: WebGLRenderingContext) {\r\n        this.gl = gl;\r\n\r\n        this.program = new Program(this.gl);\r\n        this.program.loadShader(ShaderType.VERTEX, vertexShader);\r\n        this.program.loadShader(ShaderType.FRAGMENT, fragmentShader);\r\n        this.program.createProgram();\r\n\r\n        this.init();\r\n    }\r\n\r\n    public init(): void {\r\n        let gl = this.gl;\r\n\r\n        this.resolution = gl.getUniformLocation(this.program.program, 'u_resolution');\r\n        this.colorLocation = gl.getUniformLocation(this.program.program, 'u_color');\r\n        this.position = gl.getAttribLocation(this.program.program, 'a_position');\r\n        this.textureCoordinates = gl.getAttribLocation(this.program.program, 'a_texCoord');\r\n\r\n        this.vertexBuffer = gl.createBuffer();\r\n        this.indexBuffer = gl.createBuffer();\r\n        this.texCoordBuffer = gl.createBuffer();\r\n    }\r\n\r\n    public setColor(color: Color) {\r\n        this.color = color;\r\n    }\r\n\r\n    public addCall(renderCall: RenderCall) {\r\n        if (!this.renderCalls[renderCall.texture as number]) {\r\n            this.renderCalls[renderCall.texture as number] = new RenderCall();\r\n            this.renderCalls[renderCall.texture as number].texture = renderCall.texture;\r\n        }\r\n\r\n        this.renderCalls[renderCall.texture as number].add(renderCall);\r\n    }\r\n\r\n    public clear(): void {\r\n        this.renderCalls = {};\r\n    }\r\n\r\n    public execute(): void {\r\n        this.flush();\r\n        this.clear();\r\n    }\r\n\r\n    public flush(): void {\r\n        let gl = this.gl;\r\n        gl.useProgram(this.program.program);\r\n\r\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n        gl.uniform2f(this.resolution, this.width, this.height);\r\n\r\n        for (let call in this.renderCalls) {\r\n            gl.bindTexture(gl.TEXTURE_2D, this.renderCalls[call].texture);\r\n\r\n            let col: number[] = this.color.getRGBAFloat();\r\n            gl.uniform4f(this.colorLocation, col[0], col[1], col[2], col[3]);\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(this.renderCalls[call].vertices), gl.STATIC_DRAW);\r\n            gl.enableVertexAttribArray(this.position);\r\n            gl.vertexAttribPointer(this.position, 2, gl.FLOAT, false, 0, 0);\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.texCoordBuffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(this.renderCalls[call].uvs), gl.STATIC_DRAW);\r\n            gl.enableVertexAttribArray(this.textureCoordinates);\r\n            gl.vertexAttribPointer(this.textureCoordinates, 2, gl.FLOAT, false, 0, 0);\r\n\r\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(this.renderCalls[call].indices), gl.STATIC_DRAW);\r\n\r\n            gl.drawElements(gl.TRIANGLES, this.renderCalls[call].numIndices, gl.UNSIGNED_SHORT, 0);\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/font/font-renderer.ts","import { Texture } from '../texture';\r\nimport { Color } from '../../graphics/color';\r\nimport { Http, AJAXResponse } from '../../utility/http';\r\nimport { ResourceManager } from '../../utility/resource-manager';\r\nimport { FontRenderer } from './font-renderer';\r\nimport { RenderCall } from '../renderer2d/render-call';\r\nimport { BitmapFont, Glyph } from './bitmap-font';\r\n\r\nexport interface FontTexture {\r\n    [index: number]: Texture;\r\n}\r\n\r\nconst enum Align {\r\n    LEFT,\r\n    CENTER,\r\n    RIGHT\r\n}\r\n\r\nexport class Font {\r\n    public gl: WebGLRenderingContext;\r\n    public resourceManager: ResourceManager;\r\n    public texturePage: FontTexture = {};\r\n    public font: BitmapFont = new BitmapFont();\r\n    public base: number = 0;\r\n    public lineHeight: number = 0;\r\n    public color: Color = new Color(255, 255, 255, 1.0);\r\n    public configUrl: string;\r\n    public align: number = Align.LEFT;\r\n    private http: Http;\r\n\r\n    constructor(gl: WebGLRenderingContext, configUrl?: string) {\r\n        this.gl = gl;\r\n        this.http = new Http(false);\r\n\r\n        this.resourceManager = ResourceManager.getInstance();\r\n\r\n        if (configUrl) {\r\n            this.configUrl = configUrl;\r\n\r\n            this.load(configUrl);\r\n        }\r\n    }\r\n\r\n    public load(configUrl: string): void {\r\n        let _this = this;\r\n\r\n        this.resourceManager.addOther();\r\n\r\n        this.http.get(configUrl, (data: XMLHttpRequest) => {\r\n            _this.parseConfig(data.responseXML);\r\n        });\r\n    }\r\n\r\n    public parseConfig(xmlConfig: XMLDocument): void {\r\n        let pages = xmlConfig.getElementsByTagName('page');\r\n        let char = xmlConfig.getElementsByTagName('char');\r\n        let common = xmlConfig.getElementsByTagName('common')[0];\r\n        let info = xmlConfig.getElementsByTagName('info')[0];\r\n\r\n        this.font.glyphCount = +xmlConfig.getElementsByTagName('chars')[0].getAttribute('count');\r\n\r\n        // Info data\r\n        this.font.info = {\r\n            face: info.getAttribute('face'),\r\n            size: +info.getAttribute('size'),\r\n            italic: +info.getAttribute('italic'),\r\n            charset: info.getAttribute('charset'),\r\n            unicode: +info.getAttribute('unicode'),\r\n            bold: +info.getAttribute('bold'),\r\n            stretchHeight: +info.getAttribute('stretchH'),\r\n            smooth: +info.getAttribute('smooth'),\r\n            antiAliasing: +info.getAttribute('aa'),\r\n            padding: info.getAttribute('padding').split(',').map(src => +src),\r\n            spacing: info.getAttribute('spacing').split(',').map(src => +src),\r\n            outline: +info.getAttribute('outline')\r\n        };\r\n\r\n        // Common data\r\n        this.font.common = {\r\n            lineHeight: +common.getAttribute('lineHeight'),\r\n            base: +common.getAttribute('base'),\r\n            scaleWidth: +common.getAttribute('scaleW'),\r\n            scaleHeight: +common.getAttribute('scaleH'),\r\n            pages: +common.getAttribute('pages'),\r\n            packed: +common.getAttribute('packed'),\r\n            alphaChannel: +common.getAttribute('alphaChnl'),\r\n            redChannel: +common.getAttribute('redChnl'),\r\n            greenChannel: +common.getAttribute('greenChnl'),\r\n            blueChannel: +common.getAttribute('blueChnl')\r\n        };\r\n\r\n\r\n        for (let i = 0; i < pages.length; i += 1) {\r\n            let file = pages[i].getAttribute('file');\r\n            let id = +pages[i].getAttribute('id');\r\n\r\n            this.font.pages[id] = {\r\n                file: file\r\n            };\r\n\r\n            this.texturePage[id] = new Texture(this.gl, file);\r\n        }\r\n\r\n        for (let i = 0; i < char.length; i += 1) {\r\n            let id = +char[i].getAttribute('id');\r\n            this.font.glyphs[id] = {\r\n                x: +char[i].getAttribute('x'),\r\n                y: +char[i].getAttribute('y'),\r\n                width: +char[i].getAttribute('width'),\r\n                height: +char[i].getAttribute('height'),\r\n                xOffset: +char[i].getAttribute('xoffset'),\r\n                yOffset: +char[i].getAttribute('yoffset'),\r\n                xAdvance: +char[i].getAttribute('xadvance'),\r\n                page: +char[i].getAttribute('page'),\r\n                channel: +char[i].getAttribute('chnl')\r\n            };\r\n        }\r\n\r\n        this.resourceManager.otherReady();\r\n    }\r\n\r\n    public drawString(renderer: FontRenderer, str: string, x: number, y: number): void {\r\n        let currentX: number = x;\r\n        let currentY: number = 0;\r\n\r\n        if (this.align === Align.CENTER) {\r\n            let stringWidth = this.calculateWidth(str);\r\n            currentX = x - Math.floor(stringWidth / 2);\r\n        } else if (this.align === Align.RIGHT) {\r\n            let stringWidth = this.calculateWidth(str);\r\n            currentX = x - stringWidth;\r\n        }\r\n\r\n        for (let i = 0; i < str.length; i += 1) {\r\n            let id = str.charCodeAt(i);\r\n\r\n            if (this.font.glyphs[id]) {\r\n                let glyph = this.font.glyphs[id];\r\n\r\n                this.renderGlyph(renderer, currentX + glyph.xOffset, y + glyph.yOffset, glyph);\r\n                currentX += glyph.xAdvance;\r\n            }\r\n        }\r\n    }\r\n\r\n    public renderGlyph(renderer: FontRenderer, x: number, y: number, glyph: Glyph): void {\r\n        let uvs: number[] = [];\r\n\r\n        uvs[0] = glyph.x / this.font.common.scaleWidth;\r\n        uvs[1] = glyph.y / this.font.common.scaleHeight;\r\n        uvs[2] = (glyph.x + glyph.width) / this.font.common.scaleWidth;\r\n        uvs[3] = (glyph.y + glyph.height) / this.font.common.scaleHeight;\r\n\r\n        let renderCall: RenderCall = new RenderCall();\r\n\r\n        renderCall.texture = this.texturePage[glyph.page].texture;\r\n        renderCall.vertices = [x, y, x + glyph.width, y, x, y + glyph.height, x + glyph.width, y + glyph.height];\r\n        renderCall.uvs = [uvs[0], uvs[1], uvs[2], uvs[1], uvs[0], uvs[3], uvs[2], uvs[3]];\r\n        renderCall.indices = [0, 1, 2, 1, 2, 3];\r\n        renderCall.numIndices = 6;\r\n\r\n        renderer.addCall(renderCall);\r\n    }\r\n\r\n    public calculateWidth(str: string): number {\r\n        let width = 0;\r\n\r\n        for (let i = 0; i < str.length; i += 1) {\r\n            let id = str.charCodeAt(i);\r\n\r\n            width += +this.font.glyphs[id]['xAdvance'];\r\n        }\r\n\r\n        return width;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/font/font.ts","import { Font } from './font';\r\nimport { BitmapFont } from './bitmap-font';\r\nimport { FontRenderer } from './font-renderer';\r\n\r\nexport { BitmapFont, Font, FontRenderer };\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/font/index.ts","import { Program, ShaderType } from '../shader/program';\r\nimport { RenderCall } from '../renderer2d/render-call';\r\nimport { FrameBuffer } from '../renderer2d/framebuffer';\r\n\r\nconst vertexShader: string = 'attribute vec2 a_position;\\n' +\r\n'attribute vec2 a_texCoord;\\n' +\r\n'varying vec2 v_texCoord;\\n' +\r\n'uniform vec2 u_resolution;\\n' +\r\n'void main() {\\n' +\r\n'\tvec2 zeroToOne = a_position / u_resolution;\\n' +\r\n'\tvec2 zeroToTwo = zeroToOne * 2.0;\\n' +\r\n'\tvec2 clipSpace = zeroToTwo - 1.0;\\n' +\r\n'\tgl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\\n' +\r\n'\tv_texCoord = a_texCoord;\\n' +\r\n'}\\n';\r\n\r\n/* Combine fragment shader\r\n * ===========================================================\r\n * GLSL Fragment Shader\r\n *  This source code is released under the MIT License.\r\n *  Copyright (c) 2015 Guilherme R. Lampert.\r\n * ===========================================================\r\n */\r\nconst combineFragmentShader = 'precision mediump float;\\n' +\r\n'uniform float u_blend_mode;\\n' +\r\n'uniform sampler2D u_scene_texture;\\n' +\r\n'uniform sampler2D u_glow_texture;\\n' +\r\n'varying vec2 v_texCoord;\\n' +\r\n'const float ADDITIVE_BLENDING = 1.0;\\n' +\r\n'const float SCREEN_BLENDING   = 2.0;\\n' +\r\n'void main() {\\n' +\r\n'\tvec4 dst = texture2D(u_scene_texture, v_texCoord); // Rendered scene (tmu:0)\\n' +\r\n'\tvec4 src = texture2D(u_glow_texture,  v_texCoord); // Glow map       (tmu:1)\\n' +\r\n'\tif (u_blend_mode == ADDITIVE_BLENDING) {\\n' +\r\n'\t\t// Additive blending (strong result, high overexposure).\\n' +\r\n'\t\tgl_FragColor = min(src + dst, 1.0);\\n' +\r\n'\t} else if (u_blend_mode == SCREEN_BLENDING) {\\n' +\r\n'\t\t// Screen blending (mild result, medium overexposure).\\n' +\r\n'\t\tgl_FragColor = clamp((src + dst) - (src * dst), 0.0, 1.0);\\n' +\r\n'\t} else {\\n' +\r\n'\t\t// Show the glow map instead (DISPLAY_GLOWMAP).\\n' +\r\n'\t\tgl_FragColor = src;\\n' +\r\n'\t}\\n' +\r\n'}';\r\n\r\nexport class Bloom {\r\n    public gl: WebGLRenderingContext;\r\n    public glowFramebuffer: FrameBuffer;\r\n    public combinationProgram: Program;\r\n    public resolution: WebGLUniformLocation;\r\n    public blendMode: WebGLUniformLocation;\r\n    public position: number;\r\n    public textureCoordinates: number;\r\n    public vertexBuffer: WebGLBuffer;\r\n    public indexBuffer: WebGLBuffer;\r\n    public texCoordBuffer: WebGLBuffer;\r\n\r\n    public width: number;\r\n    public height: number;\r\n\r\n    constructor(gl: WebGLRenderingContext, width: number, height: number) {\r\n        this.gl = gl;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        this.combinationProgram = new Program(this.gl);\r\n        this.combinationProgram.loadShader(ShaderType.VERTEX, vertexShader);\r\n        this.combinationProgram.loadShader(ShaderType.FRAGMENT, combineFragmentShader);\r\n        this.combinationProgram.createProgram();\r\n\r\n        this.init();\r\n    }\r\n\r\n    public init(): void {\r\n        let gl = this.gl;\r\n\r\n        this.glowFramebuffer = new FrameBuffer(gl, this.width, this.height);\r\n\r\n        this.blendMode = gl.getUniformLocation(this.combinationProgram.program, 'u_blend_mode');\r\n        this.resolution = gl.getUniformLocation(this.combinationProgram.program, 'u_resolution');\r\n        this.position = gl.getAttribLocation(this.combinationProgram.program, 'a_position');\r\n        this.textureCoordinates = gl.getAttribLocation(this.combinationProgram.program, 'a_texCoord');\r\n\r\n        this.vertexBuffer = gl.createBuffer();\r\n        this.indexBuffer = gl.createBuffer();\r\n        this.texCoordBuffer = gl.createBuffer();\r\n    }\r\n\r\n    public execute(src: WebGLTexture, dst: WebGLTexture): WebGLTexture {\r\n        let gl = this.gl;\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.glowFramebuffer.fbo);\r\n\r\n        this.render(dst, src);\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n        return this.glowFramebuffer.texture;\r\n    }\r\n\r\n    public render(src: WebGLTexture, dst: WebGLTexture): void {\r\n        let gl = this.gl;\r\n\r\n        let vertices = [0, 0, this.width, 0, 0, this.height, this.width, this.height];\r\n        let uvs = [\r\n            0, 0,\r\n            1, 0,\r\n            0, 1,\r\n            1, 1\r\n        ];\r\n        let indices = [0, 1, 2, 1, 2, 3];\r\n        let numIndices = 6;\r\n\r\n        gl.useProgram(this.combinationProgram.program);\r\n\r\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n        gl.uniform2f(this.resolution, 800, 600);\r\n        gl.uniform1f(this.blendMode, 1.0);\r\n\r\n        gl.activeTexture(gl.TEXTURE0);\r\n        gl.bindTexture(gl.TEXTURE_2D, src);\r\n\r\n        gl.activeTexture(gl.TEXTURE1);\r\n        gl.bindTexture(gl.TEXTURE_2D, dst);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\r\n        gl.enableVertexAttribArray(this.position);\r\n        gl.vertexAttribPointer(this.position, 2, gl.FLOAT, false, 0, 0);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.texCoordBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(uvs), gl.STATIC_DRAW);\r\n        gl.enableVertexAttribArray(this.textureCoordinates);\r\n        gl.vertexAttribPointer(this.textureCoordinates, 2, gl.FLOAT, false, 0, 0);\r\n\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\r\n\r\n        gl.drawElements(gl.TRIANGLES, numIndices, gl.UNSIGNED_SHORT, 0);\r\n        gl.bindTexture(gl.TEXTURE_2D, dst);\r\n        gl.activeTexture(gl.TEXTURE0);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/fx/bloom.ts","import { Program, ShaderType } from '../shader/program';\r\nimport { RenderCall } from '../renderer2d/render-call';\r\nimport { FrameBuffer } from '../renderer2d/framebuffer';\r\n\r\nconst vertexShader: string = 'attribute vec2 a_position;\\n' +\r\n'attribute vec2 a_texCoord;\\n' +\r\n'varying vec2 v_texCoord;\\n' +\r\n'uniform vec2 u_resolution;\\n' +\r\n'void main() {\\n' +\r\n'\tvec2 zeroToOne = a_position / u_resolution;\\n' +\r\n'\tvec2 zeroToTwo = zeroToOne * 2.0;\\n' +\r\n'\tvec2 clipSpace = zeroToTwo - 1.0;\\n' +\r\n'\tgl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\\n' +\r\n'\tv_texCoord = a_texCoord;\\n' +\r\n'}\\n';\r\n\r\n/* Blur Fragment shader\r\n * ===========================================================\r\n * GLSL Fragment Shader\r\n *  This source code is released under the MIT License.\r\n *  Copyright (c) 2015 Guilherme R. Lampert.\r\n * ===========================================================\r\n */\r\nconst blurFragmentShader = 'precision mediump float;\\n' +\r\n'uniform vec2  u_texel_size;\\n' +\r\n'uniform float u_blur_amount;\\n' +\r\n'uniform float u_blur_scale;\\n' +\r\n'uniform float u_blur_strength;\\n' +\r\n'uniform int u_horizontal;\\n' +\r\n'uniform sampler2D u_color_texture;\\n' +\r\n'varying vec2 v_texCoord;\\n' +\r\n'const float BLUR_PASSES = 20.0;\\n' +\r\n'float gaussian(float x, float deviation) {\\n' +\r\n'\treturn (1.0 / sqrt(6.28318530718 * deviation)) * exp(-((x * x) / (2.0 * deviation)));\\n' +\r\n'}\\n' +\r\n'void main() {\\n' +\r\n'\tvec4  color = vec4(0.0);\\n' +\r\n'\tfloat half_blur = u_blur_amount * 0.5;\\n' +\r\n'\tfloat strength = 1.0 - u_blur_strength;\\n' +\r\n'\tfloat deviation = half_blur * 0.35;\\n' +\r\n'\tdeviation *= deviation;\\n' +\r\n'   if (u_horizontal == 1) {\\n' +\r\n'\t    for (float i = 0.0; i < BLUR_PASSES; i += 1.0) {\\n' +\r\n'\t\t    float offset = i - half_blur;\\n' +\r\n'\t\t    vec4 tex_color = texture2D(u_color_texture, v_texCoord +\\n' +\r\n'\t\t\t    vec2(offset * u_texel_size.x * u_blur_scale, 0.0)) * gaussian(offset * strength, deviation);\\n' +\r\n'\t\t    color += tex_color;\\n' +\r\n'\t    }\\n' +\r\n'   } else {\\n' +\r\n'       for (float i = 0.0; i < BLUR_PASSES; i += 1.0) {\\n' +\r\n'            float offset = i - half_blur;\\n' +\r\n'            vec4 tex_color = texture2D(u_color_texture, v_texCoord +\\n' +\r\n'                vec2(0.0, offset * u_texel_size.y * u_blur_scale)) * gaussian(offset * strength, deviation);\\n' +\r\n'            color += tex_color;\\n' +\r\n'        }\\n' +\r\n'   }\\n' +\r\n'\tgl_FragColor = clamp(color, 0.0, 1.0);\\n' +\r\n'}';\r\n\r\nexport class Blur {\r\n    public gl: WebGLRenderingContext;\r\n    public horizontalFBO: FrameBuffer;\r\n    public verticalFBO: FrameBuffer;\r\n    public texture: WebGLTexture;\r\n\r\n    public blurProgram: Program;\r\n    public resolution: WebGLUniformLocation;\r\n    public texelSize: WebGLUniformLocation;\r\n    public blurAmount: WebGLUniformLocation;\r\n    public blurScale: WebGLUniformLocation;\r\n    public blurStrength: WebGLUniformLocation;\r\n    public horizontal: WebGLUniformLocation;\r\n    public position: number;\r\n    public textureCoordinates: number;\r\n    public vertexBuffer: WebGLBuffer;\r\n    public indexBuffer: WebGLBuffer;\r\n    public texCoordBuffer: WebGLBuffer;\r\n\r\n    public width: number;\r\n    public height: number;\r\n\r\n    constructor(gl: WebGLRenderingContext, width: number, height: number) {\r\n        this.gl = gl;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        this.blurProgram = new Program(this.gl);\r\n        this.blurProgram.loadShader(ShaderType.VERTEX, vertexShader);\r\n        this.blurProgram.loadShader(ShaderType.FRAGMENT, blurFragmentShader);\r\n        this.blurProgram.createProgram();\r\n\r\n        this.init();\r\n    }\r\n\r\n    public init(): void {\r\n        let gl = this.gl;\r\n\r\n        this.horizontalFBO = new FrameBuffer(gl, this.width, this.height);\r\n        this.verticalFBO = new FrameBuffer(gl, this.width, this.height);\r\n\r\n        this.texelSize = gl.getUniformLocation(this.blurProgram.program, 'u_texel_size');\r\n        this.blurAmount = gl.getUniformLocation(this.blurProgram.program, 'u_blur_amount');\r\n        this.blurScale = gl.getUniformLocation(this.blurProgram.program, 'u_blur_scale');\r\n        this.blurStrength = gl.getUniformLocation(this.blurProgram.program, 'u_blur_strength');\r\n        this.horizontal = gl.getUniformLocation(this.blurProgram.program, 'u_horizontal');\r\n\r\n        this.resolution = gl.getUniformLocation(this.blurProgram.program, 'u_resolution');\r\n        this.position = gl.getAttribLocation(this.blurProgram.program, 'a_position');\r\n        this.textureCoordinates = gl.getAttribLocation(this.blurProgram.program, 'a_texCoord');\r\n\r\n        this.vertexBuffer = gl.createBuffer();\r\n        this.indexBuffer = gl.createBuffer();\r\n        this.texCoordBuffer = gl.createBuffer();\r\n    }\r\n\r\n    public execute(texture: WebGLTexture): WebGLTexture {\r\n        let gl = this.gl;\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.horizontalFBO.fbo);\r\n\r\n        this.render(true, texture);\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.verticalFBO.fbo);\r\n\r\n        this.render(false, this.horizontalFBO.texture);\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n        return this.verticalFBO.texture;\r\n    }\r\n\r\n    public render(horizontal: boolean, texture: WebGLTexture): void {\r\n        let gl = this.gl;\r\n\r\n        let vertices = [0, 0, this.width, 0, 0, this.height, this.width, this.height];\r\n        let uvs = [\r\n            0, 0,\r\n            1, 0,\r\n            0, 1,\r\n            1, 1\r\n        ];\r\n        let indices = [0, 1, 2, 1, 2, 3];\r\n        let numIndices = 6;\r\n\r\n        gl.useProgram(this.blurProgram.program);\r\n\r\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n        gl.uniform2f(this.resolution, 800, 600);\r\n        gl.uniform2fv(this.texelSize, [(1.0 / this.width), (1.0 / this.height)]);\r\n        // gl.uniform2fv(this.texelSize, [1, 1]);\r\n        gl.uniform1f(this.blurAmount, 35.0);\r\n        gl.uniform1f(this.blurScale, 1.0);\r\n        gl.uniform1f(this.blurStrength, 0.2);\r\n\r\n        if (horizontal) {\r\n            gl.uniform1i(this.horizontal, 1);\r\n        } else {\r\n            gl.uniform1i(this.horizontal, 0);\r\n        }\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\r\n        gl.enableVertexAttribArray(this.position);\r\n        gl.vertexAttribPointer(this.position, 2, gl.FLOAT, false, 0, 0);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.texCoordBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(uvs), gl.STATIC_DRAW);\r\n        gl.enableVertexAttribArray(this.textureCoordinates);\r\n        gl.vertexAttribPointer(this.textureCoordinates, 2, gl.FLOAT, false, 0, 0);\r\n\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\r\n\r\n        gl.drawElements(gl.TRIANGLES, numIndices, gl.UNSIGNED_SHORT, 0);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/fx/blur.ts","import { Blur } from './blur';\r\nimport { Bloom } from './bloom';\r\n\r\nexport { Blur, Bloom }\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/fx/index.ts","import * as Render2d from './renderer2d/index';\r\nimport * as Shader from './shader/index';\r\nimport * as Particle from './particle/index';\r\nimport * as Font from './font/index';\r\nimport * as Tilemap from './tilemap/index';\r\nimport * as FX from './fx/index';\r\nimport { Texture } from './texture';\r\nimport { Sprite } from './sprite';\r\nimport { AnimatedSprite, Animations } from './animated-sprite';\r\n\r\nexport { Render2d, Shader, Texture, Sprite, AnimatedSprite, Animations, Particle, Font, Tilemap, FX };\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/index.ts","import { Particle } from './particle';\r\nimport { ParticleEmitter } from './particle-emitter';\r\nimport { ParticleSystem } from './particle-system';\r\nimport { ParticleRenderer } from './particle-renderer';\r\n\r\nexport { Particle, ParticleEmitter, ParticleSystem, ParticleRenderer }\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/particle/index.ts","import { Particle } from './particle';\r\nimport { ParticleRenderer } from './particle-renderer';\r\nimport { Point } from '../../geometry/index';\r\nimport { Texture } from '../texture';\r\nimport { Color } from '../../graphics/color';\r\nimport { Http } from '../../utility/http';\r\n\r\ninterface AJAXResponse {\r\n    responseText?: string;\r\n}\r\n\r\nexport class ParticleEmitter {\r\n    public gl: WebGLRenderingContext;\r\n    public renderer: ParticleRenderer;\r\n    public particles: Particle[] = [];\r\n    public vertices: number[] = [];\r\n    public sizes: number[] = [];\r\n    public currentLife: number;\r\n\r\n    public texture: Texture;\r\n    public pos: Point;\r\n    public maxDir: Point;\r\n    public minDir: Point;\r\n    public maxVel: number;\r\n    public minVel: number;\r\n    public maxSize: number;\r\n    public minSize: number;\r\n    public constant: boolean = false;\r\n    public growth: number;\r\n    public color: Color = new Color(240, 175, 25, 0.4);\r\n    public angularVel: number;\r\n    public gravity: number;\r\n    public wind: number;\r\n    public maxLife: number;\r\n    public minLife: number;\r\n    public particlesPerSecond: number;\r\n    public particlesAtStart: number;\r\n    public lifeCycle: number;\r\n\r\n    public blendSrc: number;\r\n    public blendDst: number;\r\n\r\n    private http: Http;\r\n\r\n    constructor(gl: WebGLRenderingContext) {\r\n        this.gl = gl;\r\n        this.blendSrc = gl.SRC_ALPHA;\r\n        this.blendDst = gl.ONE;\r\n\r\n        this.http = new Http(false);\r\n    }\r\n\r\n    public setup(texture: Texture, position: Point, maxDirection: Point, minDirection: Point, maxVelocity: number, minVelocity: number,\r\n        maxSize: number, minSize: number, maxLife: number, minLife: number, growth: number, gravity: number, wind: number,\r\n        angularVelocity: number, lifeCycle: number, particlesPerSecond: number, particlesAtStart: number, constant: boolean, color: Color): void {\r\n        this.texture = texture;\r\n        this.pos = position;\r\n        this.maxDir = maxDirection;\r\n        this.minDir = minDirection;\r\n        this.maxVel = maxVelocity;\r\n        this.minVel = minVelocity;\r\n        this.maxSize = maxSize;\r\n        this.minSize = minSize;\r\n        this.maxLife = maxLife;\r\n        this.minLife = minLife;\r\n        this.growth = growth;\r\n        this.gravity = gravity;\r\n        this.wind = wind;\r\n        this.angularVel = angularVelocity;\r\n        this.lifeCycle = lifeCycle;\r\n        this.particlesPerSecond = particlesPerSecond;\r\n        this.particlesAtStart = particlesAtStart;\r\n        this.constant = constant;\r\n        this.color = color;\r\n    }\r\n\r\n    public load(url: string) {\r\n        this.http.get(url, (data: AJAXResponse) => {\r\n            let emitter = JSON.parse(data.responseText);\r\n        });\r\n    }\r\n\r\n    public toJson(): string {\r\n        return '';\r\n    }\r\n\r\n    public update(delta: number): void {\r\n        this.vertices = [];\r\n        this.sizes = [];\r\n\r\n        if (this.constant) {\r\n            let numParticles = Math.ceil((delta / 1000) * this.particlesPerSecond);\r\n\r\n            for (let i = 0; i < numParticles; i += 1) {\r\n                this.particles.push(this.addParticle());\r\n            }\r\n        } else {\r\n            this.currentLife -= delta;\r\n\r\n            if (this.currentLife < 0) {\r\n                for (let i = 0; i < this.particlesAtStart; i += 1) {\r\n                    this.particles.push(this.addParticle());\r\n                }\r\n\r\n                this.currentLife = this.lifeCycle;\r\n            }\r\n        }\r\n\r\n        let length = this.particles.length;\r\n\r\n        for (let i = 0; i < length; i += 1) {\r\n            this.particles[i].update(this.gravity, this.wind, this.growth, delta);\r\n\r\n            if (this.particles[i].isDead()) {\r\n                this.particles.splice(i, 1);\r\n                length -= 1;\r\n            } else {\r\n                this.vertices.push(this.particles[i].pos.x);\r\n                this.vertices.push(this.particles[i].pos.y);\r\n                this.sizes.push(this.particles[i].size);\r\n            }\r\n        }\r\n    }\r\n\r\n    public addParticle(): Particle {\r\n        return new Particle(new Point(this.pos.x, this.pos.y),\r\n            new Point(this.randomMinMax(this.minDir.x, this.maxDir.x), this.randomMinMax(this.minDir.y, this.maxDir.y)),\r\n            this.randomMinMax(this.minSize, this.maxSize),\r\n            this.randomMinMax(this.minVel, this.maxVel),\r\n            this.randomMinMax(this.minLife, this.maxLife),\r\n            this.color.getAlpha());\r\n    }\r\n\r\n    public randomMinMax(min: number, max: number): number {\r\n        return (Math.random() * (max - min)) + min;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/particle/particle-emitter.ts","import { Program, ShaderType } from '../shader/program';\r\nimport { ParticleEmitter } from './particle-emitter';\r\nimport { ParticleSystem } from './particle-system';\r\n\r\nconst vertexShader: string = 'attribute vec2 a_position;\\n' +\r\n'attribute float a_pointSize;\\n' +\r\n'uniform vec2 u_resolution;\\n' +\r\n'void main() {\\n' +\r\n'\tvec2 zeroToOne = a_position / u_resolution;\\n' +\r\n'\tvec2 zeroToTwo = zeroToOne * 2.0;\\n' +\r\n'\tvec2 clipSpace = zeroToTwo - 1.0;\\n' +\r\n'\tgl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\\n' +\r\n'\tgl_PointSize = a_pointSize;\\n' +\r\n'}\\n';\r\n\r\nconst fragmentShader: string = 'precision mediump float;\\n' +\r\n'uniform sampler2D u_image;\\n' +\r\n'uniform vec4 u_color;\\n' +\r\n'void main() {\\n' +\r\n'\tvec4 baseTexture = texture2D(u_image, gl_PointCoord);\\n' +\r\n'\tvec4 baseColor = u_color;\\n' +\r\n'\tfloat alpha = u_color.w;\\n' +\r\n'\tgl_FragColor = baseTexture * u_color;\\n' +\r\n'}\\n';\r\n\r\nexport class ParticleRenderer {\r\n    public gl: WebGLRenderingContext;\r\n    public program: Program;\r\n    public resolution: WebGLUniformLocation;\r\n    public colorLocation: WebGLUniformLocation;\r\n    public pointSize: number;\r\n    public position: number;\r\n    public vertexBuffer: WebGLBuffer;\r\n    public sizeBuffer: WebGLBuffer;\r\n    public width: number = 800;\r\n    public height: number = 600;\r\n\r\n    constructor(gl: WebGLRenderingContext) {\r\n        this.gl = gl;\r\n\r\n        this.program = new Program(this.gl);\r\n        this.program.loadShader(ShaderType.VERTEX, vertexShader);\r\n        this.program.loadShader(ShaderType.FRAGMENT, fragmentShader);\r\n        this.program.createProgram();\r\n\r\n        this.init();\r\n    }\r\n\r\n    public init(): void {\r\n        let gl = this.gl;\r\n\r\n        this.resolution = gl.getUniformLocation(this.program.program, 'u_resolution');\r\n        this.colorLocation = gl.getUniformLocation(this.program.program, 'u_color');\r\n        this.pointSize = gl.getAttribLocation(this.program.program, 'a_pointSize');\r\n        this.position = gl.getAttribLocation(this.program.program, 'a_position');\r\n\r\n        this.vertexBuffer = gl.createBuffer();\r\n        this.sizeBuffer = gl.createBuffer();\r\n    }\r\n\r\n    public render(emitter: ParticleEmitter): void {\r\n        let gl = this.gl;\r\n\r\n        gl.useProgram(this.program.program);\r\n\r\n        gl.enable(gl.BLEND);\r\n        gl.blendFunc(emitter.blendSrc, emitter.blendDst);\r\n\r\n        gl.uniform2f(this.resolution, this.width, this.height);\r\n        gl.bindTexture(gl.TEXTURE_2D, emitter.texture.texture);\r\n\r\n        let col: number[] = emitter.color.getRGBAFloat();\r\n\r\n        gl.uniform4f(this.colorLocation, col[0], col[1], col[2], col[3]);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(emitter.vertices), gl.STATIC_DRAW);\r\n        gl.enableVertexAttribArray(this.position);\r\n        gl.vertexAttribPointer(this.position, 2, gl.FLOAT, false, 0, 0);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.sizeBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(emitter.sizes), gl.STATIC_DRAW);\r\n        gl.enableVertexAttribArray(this.pointSize);\r\n        gl.vertexAttribPointer(this.pointSize, 1, gl.FLOAT, false, 0, 0);\r\n\r\n        gl.drawArrays(gl.POINTS, 0, emitter.vertices.length / 2);\r\n\r\n        gl.disableVertexAttribArray(this.position);\r\n        gl.disableVertexAttribArray(this.pointSize);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/particle/particle-renderer.ts","export class ParticleSystem {\r\n    constructor() { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/particle/particle-system.ts","import { Renderer2d } from './renderer2d';\r\nimport { RenderCall } from './render-call';\r\nimport { FrameBuffer } from './framebuffer';\r\n\r\nexport { Renderer2d, RenderCall, FrameBuffer };\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/renderer2d/index.ts","import { Program, ShaderType } from '../shader/program';\r\nimport { RenderCall } from './render-call';\r\n\r\nconst vertexShader: string = 'attribute vec2 a_position;\\n' +\r\n'attribute vec2 a_texCoord;\\n' +\r\n'varying vec2 v_texCoord;\\n' +\r\n'uniform vec2 u_resolution;\\n' +\r\n'uniform int u_flip;\\n' +\r\n'void main() {\\n' +\r\n'\tvec2 zeroToOne = a_position / u_resolution;\\n' +\r\n'\tvec2 zeroToTwo = zeroToOne * 2.0;\\n' +\r\n'\tvec2 clipSpace = zeroToTwo - 1.0;\\n' +\r\n'   if (u_flip == 1) {\\n' +\r\n'       gl_Position = vec4(clipSpace * vec2(1, 1), 0, 1);\\n' +\r\n'\t} else {\\n' +\r\n'       gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\\n' +\r\n'   }\\n' +\r\n'\tv_texCoord = a_texCoord;\\n' +\r\n'}\\n';\r\n\r\nconst fragmentShader: string = 'precision mediump float;\\n' +\r\n'uniform sampler2D u_image;\\n' +\r\n'varying vec2 v_texCoord;\\n\\n' +\r\n'void main() {\\n' +\r\n'\tvec4 baseTexture = texture2D(u_image, v_texCoord);\\n' +\r\n'\tgl_FragColor = baseTexture;\\n' +\r\n'}\\n';\r\n\r\nexport class Renderer2d {\r\n    public gl: WebGLRenderingContext;\r\n    public program: Program;\r\n    public resolution: WebGLUniformLocation;\r\n    public flip: WebGLUniformLocation;\r\n    public position: number;\r\n    public textureCoordinates: number;\r\n    public vertexBuffer: WebGLBuffer;\r\n    public indexBuffer: WebGLBuffer;\r\n    public texCoordBuffer: WebGLBuffer;\r\n    public width: number = 800;\r\n    public height: number = 600;\r\n    public flipY: number = 0;\r\n\r\n    public renderCalls: RenderCall[] = [];\r\n\r\n    constructor(gl: WebGLRenderingContext) {\r\n        this.gl = gl;\r\n\r\n        this.program = new Program(this.gl);\r\n        this.program.loadShader(ShaderType.VERTEX, vertexShader);\r\n        this.program.loadShader(ShaderType.FRAGMENT, fragmentShader);\r\n        this.program.createProgram();\r\n\r\n        this.init();\r\n    }\r\n\r\n    public init(): void {\r\n        let gl = this.gl;\r\n\r\n        this.resolution = gl.getUniformLocation(this.program.program, 'u_resolution');\r\n        this.flip = gl.getUniformLocation(this.program.program, 'u_flip');\r\n        this.position = gl.getAttribLocation(this.program.program, 'a_position');\r\n        this.textureCoordinates = gl.getAttribLocation(this.program.program, 'a_texCoord');\r\n\r\n        this.vertexBuffer = gl.createBuffer();\r\n        this.indexBuffer = gl.createBuffer();\r\n        this.texCoordBuffer = gl.createBuffer();\r\n    }\r\n\r\n    public addCall(renderCall: RenderCall) {\r\n        let found = false;\r\n\r\n        for (let i in this.renderCalls) {\r\n            if (this.renderCalls[i].texture === renderCall.texture) {\r\n                this.renderCalls[i].add(renderCall);\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!found) {\r\n            this.renderCalls.push(new RenderCall());\r\n            let i = this.renderCalls.length - 1;\r\n            this.renderCalls[i].texture = renderCall.texture;\r\n            this.renderCalls[i].add(renderCall);\r\n        }\r\n\r\n    }\r\n\r\n    public clear(): void {\r\n        this.renderCalls = [];\r\n    }\r\n\r\n    public execute(): void {\r\n        this.flush();\r\n        this.clear();\r\n    }\r\n\r\n    public flush(): void {\r\n        let gl = this.gl;\r\n        gl.useProgram(this.program.program);\r\n\r\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n        gl.cullFace(gl.FRONT_AND_BACK);\r\n        gl.uniform2f(this.resolution, this.width, this.height);\r\n        gl.uniform1i(this.flip, this.flipY);\r\n\r\n        for (let call in this.renderCalls) {\r\n            gl.bindTexture(gl.TEXTURE_2D, this.renderCalls[call].texture);\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(this.renderCalls[call].vertices), gl.STATIC_DRAW);\r\n            gl.enableVertexAttribArray(this.position);\r\n            gl.vertexAttribPointer(this.position, 2, gl.FLOAT, false, 0, 0);\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.texCoordBuffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(this.renderCalls[call].uvs), gl.STATIC_DRAW);\r\n            gl.enableVertexAttribArray(this.textureCoordinates);\r\n            gl.vertexAttribPointer(this.textureCoordinates, 2, gl.FLOAT, false, 0, 0);\r\n\r\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(this.renderCalls[call].indices), gl.STATIC_DRAW);\r\n\r\n            gl.drawElements(gl.TRIANGLES, this.renderCalls[call].numIndices, gl.UNSIGNED_SHORT, 0);\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/renderer2d/renderer2d.ts","import { Program } from './program';\r\nimport { ShaderManager } from './shader-manager';\r\n\r\nexport { Program, ShaderManager };\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/shader/index.ts","import { Program } from './program';\r\n\r\ninterface ProgramList {\r\n    [index: string]: Program;\r\n}\r\n\r\nexport class ShaderManager {\r\n    public programs: ProgramList = {};\r\n    public gl: WebGLRenderingContext;\r\n\r\n    constructor(gl: WebGLRenderingContext) {\r\n        this.gl = gl;\r\n    }\r\n\r\n    public createProgram(fragmentShaderUrl: string, vertexShaderUrl: string, id: string) {\r\n        this.programs[id] = new Program(this.gl, fragmentShaderUrl, vertexShaderUrl);\r\n    }\r\n\r\n    public getProgram(id: string): WebGLProgram {\r\n        return this.programs[id].getProgram();\r\n    }\r\n\r\n    public useProgram(id: string): void {\r\n        this.gl.useProgram(this.programs[id].getProgram());\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/shader/shader-manager.ts","import { Texture } from './texture';\r\nimport { Renderer2d } from './renderer2d/renderer2d';\r\nimport { RenderCall } from './renderer2d/render-call';\r\nimport { Vector2 } from '../geometry/vector2d';\r\nimport { degreeToRadian } from '../utility/angle';\r\n\r\nexport class Sprite {\r\n    public uv: number[];\r\n    public width: number;\r\n    public height: number;\r\n    public texture: Texture;\r\n\r\n    constructor(texture?: Texture, width?: number, height?: number, uv?: number[]) {\r\n        if (texture) {\r\n            this.texture = texture;\r\n        }\r\n\r\n        if (width && height) {\r\n            this.width = width;\r\n            this.height = height;\r\n        }\r\n\r\n        if (uv) {\r\n            this.setUVByPixels(uv[0], uv[1], uv[2], uv[3]);\r\n        }\r\n    }\r\n\r\n    public setUV(x0: number, y0: number, x1: number, y1: number): void {\r\n        this.uv = [x0, y0, x1, y1];\r\n    }\r\n\r\n    public setUVByPixels(x: number, y: number, width: number, height: number): void {\r\n        this.uv = [(x / this.texture.width), (y / this.texture.height), ((x + width) / this.texture.width), ((y + height) / this.texture.height)];\r\n    }\r\n\r\n    public render(renderer: Renderer2d, x: number, y: number): void {\r\n        let renderCall: RenderCall = new RenderCall();\r\n\r\n        renderCall.texture = this.texture.texture;\r\n        renderCall.vertices = [x, y, x + this.width, y, x, y + this.height, x + this.width, y + this.height];\r\n        renderCall.uvs = [this.uv[0], this.uv[1], this.uv[2], this.uv[1], this.uv[0], this.uv[3], this.uv[2], this.uv[3]];\r\n        renderCall.indices = [0, 1, 2, 1, 2, 3];\r\n        renderCall.numIndices = 6;\r\n\r\n        renderer.addCall(renderCall);\r\n    }\r\n\r\n    public renderScale(renderer: Renderer2d, x: number, y: number, scale: number, scaleY?: number): void {\r\n        let renderCall: RenderCall = new RenderCall();\r\n\r\n        if (scaleY) {\r\n            renderCall.vertices = [x, y,\r\n                x + (this.width * scaleY), y,\r\n                x, y + (this.height * scale),\r\n                x + (this.width * scaleY), y + (this.height * scale)];\r\n        } else {\r\n            renderCall.vertices = [x, y,\r\n                x + (this.width * scale), y,\r\n                x, y + (this.height * scale),\r\n                x + (this.width * scale), y + (this.height * scale)];\r\n        }\r\n\r\n        renderCall.texture = this.texture.texture;\r\n\r\n        renderCall.uvs = [this.uv[0], this.uv[1], this.uv[2], this.uv[1], this.uv[0], this.uv[3], this.uv[2], this.uv[3]];\r\n        renderCall.indices = [0, 1, 2, 1, 2, 3];\r\n        renderCall.numIndices = 6;\r\n\r\n        renderer.addCall(renderCall);\r\n    }\r\n\r\n    public renderAngle(renderer: Renderer2d, x: number, y: number, angle: number): void {\r\n        let vec: Vector2[] = [];\r\n        let px: number = x + (this.width / 2);\r\n        let py: number = y + (this.height / 2);\r\n\r\n        vec[0] = new Vector2(x, y);\r\n        vec[1] = new Vector2(x + this.width, y);\r\n        vec[2] = new Vector2(x, y + this.height);\r\n        vec[3] = new Vector2(x + this.width, y + this.height);\r\n\r\n        for (let vector in vec) {\r\n            vec[vector] = vec[vector].rotatePivot(px, py, degreeToRadian(angle));\r\n        }\r\n\r\n        let renderCall: RenderCall = new RenderCall();\r\n\r\n        renderCall.texture = this.texture.texture;\r\n        renderCall.vertices = [vec[0].x, vec[0].y,\r\n            vec[1].x, vec[1].y,\r\n            vec[2].x, vec[2].y,\r\n            vec[3].x, vec[3].y];\r\n        renderCall.uvs = [this.uv[0], this.uv[1], this.uv[2], this.uv[1], this.uv[0], this.uv[3], this.uv[2], this.uv[3]];\r\n        renderCall.indices = [0, 1, 2, 1, 2, 3];\r\n        renderCall.numIndices = 6;\r\n\r\n        renderer.addCall(renderCall);\r\n    }\r\n\r\n    public renderAngleScale(renderer: Renderer2d, x: number, y: number, angle: number, scale: number, scaleY?: number): void {\r\n        let vec: Vector2[] = [];\r\n        let px: number = x + ((this.width * scale) / 2);\r\n        let py: number = y + ((this.height * scale) / 2);\r\n\r\n        if (scaleY) {\r\n            vec[0] = new Vector2(x, y);\r\n            vec[1] = new Vector2(x + (this.width * scale), y);\r\n            vec[2] = new Vector2(x, y + (this.height * scaleY));\r\n            vec[3] = new Vector2(x + (this.width * scale), y + (this.height * scaleY));\r\n        } else {\r\n            vec[0] = new Vector2(x, y);\r\n            vec[1] = new Vector2(x + (this.width * scale), y);\r\n            vec[2] = new Vector2(x, y + (this.height * scale));\r\n            vec[3] = new Vector2(x + (this.width * scale), y + (this.height * scale));\r\n        }\r\n\r\n        for (let vector in vec) {\r\n            vec[vector] = vec[vector].rotatePivot(px, py, degreeToRadian(angle));\r\n        }\r\n\r\n        let renderCall: RenderCall = new RenderCall();\r\n\r\n        renderCall.texture = this.texture.texture;\r\n        renderCall.vertices = [vec[0].x, vec[0].y,\r\n            vec[1].x, vec[1].y,\r\n            vec[2].x, vec[2].y,\r\n            vec[3].x, vec[3].y];\r\n        renderCall.uvs = [this.uv[0], this.uv[1], this.uv[2], this.uv[1], this.uv[0], this.uv[3], this.uv[2], this.uv[3]];\r\n        renderCall.indices = [0, 1, 2, 1, 2, 3];\r\n        renderCall.numIndices = 6;\r\n\r\n        renderer.addCall(renderCall);\r\n    }\r\n\r\n    public renderFBO(renderer: Renderer2d) {\r\n        let renderCall: RenderCall = new RenderCall();\r\n\r\n        renderCall.texture = this.texture.texture;\r\n        renderCall.vertices = [0, this.height, this.width, this.height, 0, 0, this.width, 0];\r\n        renderCall.uvs = [this.uv[0], this.uv[1], this.uv[2], this.uv[1], this.uv[0], this.uv[3], this.uv[2], this.uv[3]];\r\n        renderCall.indices = [0, 1, 2, 1, 2, 3];\r\n        renderCall.numIndices = 6;\r\n\r\n        renderer.addCall(renderCall);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/sprite.ts","import { Tilemap } from './tilemap';\r\nimport { TilemapLayer } from './tilemap-layer';\r\nimport { Tileset } from './tileset';\r\nimport { Tile } from './tile';\r\n\r\nexport { Tilemap, TilemapLayer, Tileset, Tile }\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/tilemap/index.ts","export class Tile {\r\n    constructor() {\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/tilemap/tile.ts","import { TilemapLayer } from './tilemap-layer';\r\nimport { Tileset } from './tileset';\r\nimport { Color } from '../../graphics/color';\r\nimport { Http, AJAXResponse } from '../../utility/http';\r\nimport { ResourceManager } from '../../utility/resource-manager';\r\nimport { Renderer2d } from '../renderer2d/renderer2d';\r\nimport { Rectangle } from '../../geometry/rectangle';\r\n\r\nexport interface Tiled {\r\n    width: number;\r\n    height: number;\r\n    tilewidth: number;\r\n    tileheight: number;\r\n    backgroundcolor: string;\r\n    nextobjectid: number;\r\n    orientation: string;\r\n    renderorder: string;\r\n    version: number;\r\n    layers: TiledLayer[];\r\n    tilesets: TiledTileset[];\r\n}\r\n\r\nexport interface TiledTileset {\r\n    name: string;\r\n    image: string;\r\n    imagewidth: number;\r\n    imageheight: number;\r\n    firstgid: number;\r\n    margin: number;\r\n    spacing: number;\r\n    columns: number;\r\n    tilecount: number;\r\n    tilewidth: number;\r\n    tileheight: number;\r\n}\r\n\r\nexport interface TiledLayer {\r\n    data: string;\r\n    encoding: string;\r\n    height: number;\r\n    width: number;\r\n    x: number;\r\n    y: number;\r\n    opacity: number;\r\n    visible: boolean;\r\n    name: string;\r\n    type: string;\r\n}\r\n\r\nexport interface TileInfo {\r\n    collider?: Rectangle;\r\n    id: number;\r\n    row?: number;\r\n    col?: number;\r\n}\r\n\r\nexport class Tilemap {\r\n    public gl: WebGLRenderingContext;\r\n    private resourceManager: ResourceManager;\r\n    public layers: TilemapLayer[] = [];\r\n    public tilesets: Tileset[] = [];\r\n    public width: number;\r\n    public height: number;\r\n    public tileWidth: number;\r\n    public tileHeight: number;\r\n    public backgroundColor: Color = new Color(100, 100, 100, 1);\r\n    public ready: boolean = false;\r\n    public orientation: string;\r\n    public renderOrder: string;\r\n    public nextObjectId: number;\r\n    public activeLayer: number = 0;\r\n\r\n    private http: Http;\r\n\r\n    constructor(gl?: WebGLRenderingContext) {\r\n        if (gl) {\r\n            this.gl = gl;\r\n        }\r\n\r\n        this.resourceManager = ResourceManager.getInstance();\r\n\r\n        this.http = new Http(false);\r\n    }\r\n\r\n    public loadTiledMap(url: string) {\r\n        let _this = this;\r\n\r\n        this.resourceManager.addOther();\r\n\r\n        this.http.get(url, (data: AJAXResponse) => {\r\n            _this.parseTiledMap(data.responseText);\r\n        });\r\n    }\r\n\r\n    public parseTiledMap(json: string): void {\r\n        let map = JSON.parse(json) as Tiled;\r\n        this.width = map.width;\r\n        this.height = map.height;\r\n        this.tileWidth = map.tilewidth;\r\n        this.tileHeight = map.tileheight;\r\n        this.orientation = map.orientation;\r\n        this.renderOrder = map.renderorder;\r\n        this.nextObjectId = map.nextobjectid;\r\n\r\n        if (map.backgroundcolor) {\r\n            this.backgroundColor.setHex(map.backgroundcolor);\r\n        }\r\n\r\n\r\n        for (let layer of map.layers) {\r\n            this.layers.push(new TilemapLayer(\r\n                layer.data,\r\n                layer.encoding,\r\n                layer.width,\r\n                layer.height,\r\n                layer.x,\r\n                layer.y,\r\n                layer.opacity,\r\n                layer.visible,\r\n                layer.name,\r\n                layer.type\r\n            ));\r\n        }\r\n\r\n        for (let tileset of map.tilesets) {\r\n            this.tilesets.push(new Tileset(\r\n                this.gl,\r\n                tileset.name,\r\n                tileset.image,\r\n                tileset.imagewidth,\r\n                tileset.imageheight,\r\n                tileset.firstgid,\r\n                tileset.margin,\r\n                tileset.spacing,\r\n                tileset.columns,\r\n                tileset.tilecount,\r\n                tileset.tilewidth,\r\n                tileset.tileheight\r\n            ));\r\n        }\r\n\r\n        this.resourceManager.otherReady();\r\n    }\r\n\r\n    public setActiveLayer(activeLayer: number): void {\r\n        this.activeLayer = activeLayer;\r\n    }\r\n\r\n    public getActiveLayer(): number {\r\n        return this.activeLayer;\r\n    }\r\n\r\n    public getContainedTiles(container: Rectangle, scale?: number): TileInfo[] {\r\n        let tiles: TileInfo[] = [];\r\n\r\n        return tiles;\r\n    }\r\n\r\n    public getTileAt(x: number, y: number, scale?: number): TileInfo {\r\n        let tile: TileInfo = {\r\n            id: 0\r\n        };\r\n\r\n        if (scale) {\r\n            let row: number = Math.floor(y / (this.tileHeight * scale));\r\n            let col: number = Math.floor(x / (this.tileWidth * scale));\r\n            let pos: number = (row * this.width) + col;\r\n            let tileData = this.layers[this.activeLayer].getTile(pos);\r\n\r\n            tile.id = tileData.tileid;\r\n            tile.row = tileData.row;\r\n            tile.col = tileData.col;\r\n            tile.collider = new Rectangle((this.tileWidth * scale) * col, (this.tileHeight * scale) * row, (this.tileWidth * scale), (this.tileHeight * scale));\r\n        } else {\r\n            let row: number = Math.floor(y / this.tileHeight);\r\n            let col: number = Math.floor(x / this.tileWidth);\r\n            let pos: number = (row * this.width) + col;\r\n            let tileData = this.layers[this.activeLayer].getTile(pos);\r\n\r\n            console.log(col, row, pos);\r\n\r\n            tile.id = tileData.tileid;\r\n            tile.row = tileData.row;\r\n            tile.col = tileData.col;\r\n            tile.collider = new Rectangle(this.tileWidth * col, this.tileHeight * row, this.tileWidth, this.tileHeight);\r\n        }\r\n\r\n        return tile;\r\n    }\r\n\r\n    public render(renderer: Renderer2d, x: number, y: number, scale?: number, scaleY?: number) {\r\n        for (let layer of this.layers) {\r\n            if (layer.isVisible()) {\r\n                for (let i in layer.tiles) {\r\n                    let tileData = layer.getTile(+i);\r\n                    let tileX: number = this.tileWidth * tileData.col + x;\r\n                    let tileY: number = this.tileHeight * tileData.row + y;\r\n\r\n                    if (tileData.tileid !== 0) {\r\n                        for (let j in this.tilesets) {\r\n                            if (tileData.tileid >= this.tilesets[j].firstgid && tileData.tileid <= this.tilesets[j].lastgid) {\r\n                                this.tilesets[j].renderTile(renderer, tileX, tileY, tileData.tileid);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public renderScale(renderer: Renderer2d, x: number, y: number, scale: number) {\r\n        for (let layer of this.layers) {\r\n            if (layer.isVisible()) {\r\n                for (let i in layer.tiles) {\r\n                    let tileData = layer.getTile(+i);\r\n                    let tileX: number = (this.tileWidth * scale) * tileData.col + x;\r\n                    let tileY: number = (this.tileHeight * scale) * tileData.row + y;\r\n\r\n                    if (tileData.tileid !== 0) {\r\n                        for (let j in this.tilesets) {\r\n                            if (tileData.tileid >= this.tilesets[j].firstgid && tileData.tileid <= this.tilesets[j].lastgid) {\r\n                                this.tilesets[j].renderTileScale(renderer, tileX, tileY, tileData.tileid, scale);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/gl/tilemap/tilemap.ts","import { Color } from './color';\r\nimport { Surface2d } from './surface2d';\r\nimport { Surface3d } from './surface3d';\r\nimport { Sprite } from './sprite';\r\n\r\nexport { Color, Surface2d, Surface3d, Sprite }\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/graphics/index.ts","export class Sprite {\r\n    public image: HTMLImageElement;\r\n    public url: string;\r\n    public width: number;\r\n    public height: number;\r\n    public loaded: boolean = false;\r\n\r\n    constructor(url: string) {\r\n        if (url) {\r\n            this.url = url;\r\n            this.load(this.url);\r\n        }\r\n    }\r\n\r\n    public load(url: string) {\r\n        let _this = this;\r\n        this.image = new Image();\r\n        this.image.src = url;\r\n\r\n        this.image.addEventListener('load', (event) => {\r\n            _this.loadHandler(event);\r\n        });\r\n        this.image.addEventListener('error', _this.errorHandler);\r\n    }\r\n\r\n    public render(context: CanvasRenderingContext2D, x: number, y: number): void {\r\n        context.drawImage(this.image, x, y);\r\n    }\r\n\r\n    public renderSize(context: CanvasRenderingContext2D, x: number, y: number, width: number, height: number): void {\r\n        context.drawImage(this.image, x, y, width, height);\r\n    }\r\n\r\n    public renderSegment(context: CanvasRenderingContext2D, x: number, y: number,\r\n        segmentX: number, segmentY: number, segmentWidth: number, segmentHeight: number): void {\r\n        context.drawImage(this.image, segmentX, segmentY, segmentWidth, segmentHeight,\r\n            x, y, this.width, this.height);\r\n    }\r\n\r\n    public renderSegmentSize(context: CanvasRenderingContext2D, x: number, y: number, width: number, height: number,\r\n        segmentX: number, segmentY: number, segmentWidth: number, segmentHeight: number): void {\r\n        context.drawImage(this.image, segmentX, segmentY, segmentWidth, segmentHeight,\r\n            x, y, width, height);\r\n    }\r\n\r\n    private errorHandler(event: Event): void {\r\n        throw new Error('Failed to load sprite.');\r\n    }\r\n\r\n    private loadHandler(event: Event): void {\r\n        this.loaded = true;\r\n        this.width = this.image.width;\r\n        this.height = this.image.height;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/graphics/sprite.ts","interface Button {\r\n    pressed: boolean;\r\n    value: number;\r\n}\r\n\r\nexport class Controller {\r\n    private static instance: Controller = new Controller();\r\n    public buttons: Button[];\r\n    public axes: number[];\r\n    public id: string;\r\n    public index: number = 0;\r\n    public mapping: string;\r\n    public connected: boolean = false;\r\n\r\n    constructor() {\r\n        let _this = this;\r\n        if (Controller.instance) {\r\n            throw new Error('Error: Instantiation failed, Use Mouse.getInstance() instead of new.');\r\n        }\r\n\r\n        Controller.instance = this;\r\n\r\n        let gamepads = navigator.getGamepads();\r\n        if (gamepads[0] && gamepads[0].connected) {\r\n            this.connected = true;\r\n        }\r\n\r\n        window.addEventListener('gamepadconnected', (event: GamepadEvent) => {\r\n            console.log('Connecting gamepad ' + event.gamepad.id);\r\n            _this.setupController(event);\r\n        });\r\n    }\r\n\r\n    public static getInstance(): Controller {\r\n        return Controller.instance;\r\n    }\r\n\r\n    public setupController(controller: GamepadEvent) {\r\n        this.buttons = controller.gamepad.buttons;\r\n        this.axes = controller.gamepad.axes;\r\n        this.id = controller.gamepad.id;\r\n        this.index = controller.gamepad.index;\r\n        this.mapping = controller.gamepad.mapping;\r\n        this.connected = controller.gamepad.connected;\r\n    }\r\n\r\n    public update(delta: number) {\r\n        let gamepad: Gamepad = navigator.getGamepads()[this.index];\r\n\r\n        this.buttons = gamepad.buttons;\r\n        this.axes = gamepad.axes;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/input/controller.ts","import { Mouse } from './mouse';\r\nimport { Keyboard, Key } from './keyboard';\r\nimport { Touch } from './touch';\r\nimport { Controller } from './controller';\r\n\r\nexport { Mouse, Controller, Keyboard, Key, Touch };\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/input/index.ts","export enum Key {\r\n    'BACKSPACE' = 8, 'TAB' = 9, 'ENTER' = 13, 'SHIFT' = 16, 'CTRL' = 17,\r\n    'ALT' = 18, 'PAUSE' = 19, 'CAPS' = 20, 'ESCAPE' = 27, 'PAGEUP' = 33,\r\n    'PAGEDOWN' = 34, 'END' = 35, 'HOME' = 36,\r\n    'LEFT' = 37, 'UP' = 38, 'RIGHT' = 39, 'DOWN' = 40, 'INSERT' = 45, 'DELETE' = 46,\r\n    'ZERO' = 48, 'ONE' = 49, 'TWO' = 50, 'THREE' = 51, 'FOUR' = 52, 'FIVE' = 53, 'SIX' = 54,\r\n    'SEVEN' = 55, 'EIGHT' = 56, 'NINE' = 57,\r\n    'A' = 65, 'B' = 66, 'C' = 67, 'D' = 68, 'E' = 69, 'F' = 70, 'G' = 71,\r\n    'H' = 72, 'I' = 73, 'J' = 74, 'K' = 75, 'L' = 76, 'M' = 77, 'N' = 78,\r\n    'O' = 79, 'P' = 80, 'Q' = 81, 'R' = 82, 'S' = 83, 'T' = 84, 'U' = 85,\r\n    'V' = 86, 'W' = 87, 'Y' = 88, 'X' = 89, 'Z' = 90,\r\n    'LEFTSUPER' = 91, 'RIGHTSUPER' = 92, 'SELECT' = 93,\r\n    'NUM0' = 96, 'NUM1' = 97, 'NUM2' = 98, 'NUM3' = 99, 'NUM4' = 100,\r\n    'NUM5' = 101, 'NUM6' = 102, 'NUM7' = 103, 'NUM8' = 104, 'NUM9' = 105,\r\n    'MULTIPLY' = 106, 'ADD' = 107, 'SUBSTRACT' = 108, 'DECIMAL' = 110,\r\n    'DIVIDE' = 111, 'F1' = 112, 'F2' = 113, 'F3' = 114, 'F4' = 115, 'F5' = 116,\r\n    'F7' = 118, 'F8' = 119, 'F9' = 120, 'F10' = 121, 'F11' = 122, 'F12' = 123,\r\n    'NUMLOCK' = 144, 'SCROLLLOCK' = 145, 'SEMICOLON' = 186, 'EQUAL' = 187,\r\n    'COMMA' = 188, 'DASH' = 189, 'PERIOD' = 190, 'FORWARDSLASH' = 191,\r\n    'GRAVEACCENT' = 192, 'OPENBRACKET' = 219, 'BACKSLASH' = 220, 'CLOSEBRAKET' = 221,\r\n    'SINGLEQUOTE' = 222\r\n};\r\n\r\nexport class Keyboard {\r\n    private static instance: Keyboard = new Keyboard();\r\n    public keys: boolean[] = [];\r\n    public preventDefault: boolean = false;\r\n    public stopPropagation: boolean = false;\r\n    public keyLogger: boolean = false;\r\n\r\n    constructor() {\r\n        if (Keyboard.instance) {\r\n            throw new Error('Error: Instantiation failed, Use Keyboard.getInstance() instead of new.');\r\n        }\r\n\r\n        Keyboard.instance = this;\r\n\r\n        let _this = this;\r\n        for (let i = 0; i < 256; i++) {\r\n            this.keys[i] = false;\r\n        }\r\n\r\n        window.addEventListener('keydown', (event) => {\r\n            _this.handleKeydown(event);\r\n        });\r\n\r\n        window.addEventListener('keyup', (event) => {\r\n            _this.handleKeyup(event);\r\n        });\r\n    }\r\n\r\n    public static getInstance(): Keyboard {\r\n        return Keyboard.instance;\r\n    }\r\n\r\n    public clearKeys(): void {\r\n        for (let key in this.keys) {\r\n            this.keys[key] = false;\r\n        }\r\n    }\r\n\r\n    private handleKeydown(event: KeyboardEvent) {\r\n        if (this.preventDefault) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (this.stopPropagation) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.keys[event.keyCode] = true;\r\n    }\r\n\r\n    private handleKeyup(event: KeyboardEvent) {\r\n        if (this.preventDefault) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (this.stopPropagation) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.keys[event.keyCode] = false;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/input/keyboard.ts","import { CONTAINER_ID } from '../gamesaw';\r\n\r\nexport class Mouse {\r\n    private static instance: Mouse = new Mouse();\r\n    public x: number;\r\n    public y: number;\r\n    public button: boolean[];\r\n    public click: boolean[];\r\n    public stopPropagation: boolean = false;\r\n    public preventDefault: boolean = false;\r\n    private container: HTMLElement;\r\n\r\n    constructor() {\r\n        if (Mouse.instance) {\r\n            throw new Error('Error: Instantiation failed, Use Mouse.getInstance() instead of new.');\r\n        }\r\n\r\n        Mouse.instance = this;\r\n\r\n        this.button = [false, false, false];\r\n        this.click = [false, false, false];\r\n    }\r\n\r\n    public init(): void {\r\n        let _this = this;\r\n        this.container = document.getElementById(CONTAINER_ID);\r\n\r\n        this.container.addEventListener('click', (event) => {\r\n            _this.handleClick(event);\r\n        });\r\n\r\n        this.container.addEventListener('mousemove', (event) => {\r\n            _this.calculateMousePosition(event);\r\n        });\r\n\r\n        this.container.addEventListener('mousedown', (event) => {\r\n            _this.handleMouseDown(event);\r\n        });\r\n\r\n        this.container.addEventListener('mouseup', (event) => {\r\n            _this.handleMouseUp(event);\r\n        });\r\n    }\r\n\r\n    public static getInstance(): Mouse {\r\n        return Mouse.instance;\r\n    }\r\n\r\n    public clearClicks(): void {\r\n        this.click = [false, false, false];\r\n    }\r\n\r\n    private handleClick(event: MouseEvent): void {\r\n        if (this.preventDefault) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (this.stopPropagation) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.click[event.button] = true;\r\n    }\r\n\r\n    private handleMouseDown(event: MouseEvent): void {\r\n        if (this.preventDefault) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (this.stopPropagation) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.button[event.button] = true;\r\n    }\r\n\r\n    private handleMouseUp(event: MouseEvent): void {\r\n        if (this.preventDefault) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (this.stopPropagation) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.button[event.button] = false;\r\n    }\r\n\r\n    private calculateMousePosition(event: MouseEvent): void {\r\n        if (event.pageX && event.pageY) {\r\n            this.x = event.pageX;\r\n            this.y = event.pageY;\r\n        } else {\r\n            this.x = event.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\r\n            this.y = event.clientY + document.body.scrollTop + document.documentElement.scrollTop;\r\n        }\r\n\r\n        this.x -= this.container.offsetLeft;\r\n        this.y -= this.container.offsetTop;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/input/mouse.ts","export class Touch {\r\n    constructor() { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/input/touch.ts","import { degreeToRadian, radianToDegree } from './angle';\r\nimport { Http } from './http';\r\nimport { PI, capitalize } from './utility';\r\nimport { ResourceManager } from './resource-manager';\r\n\r\nexport { ResourceManager, degreeToRadian, radianToDegree, Http, PI, capitalize }\r\n\n\n\n// WEBPACK FOOTER //\n// ../gamesaw-ts/~/tslint-loader!../gamesaw-ts/src/utility/index.ts","import * as gamesaw from '../../gamesaw-ts/src/index';\r\nimport { Projectile } from './projectile';\r\nimport { Player } from './player';\r\n\r\nexport class Enemy {\r\n    private gl: WebGLRenderingContext;\r\n    public collider: gamesaw.Geometry.Circle;\r\n    public texture: gamesaw.GL.Texture;\r\n    public baseSprite: gamesaw.GL.Sprite;\r\n    public dirSprite: gamesaw.GL.Sprite;\r\n    public health: number = 5;\r\n    public armor: number = 0;\r\n    public damage: number = 10;\r\n    public worth: number = 100;\r\n    public dead: boolean = false;\r\n\r\n    public direction: gamesaw.Geometry.Vector2;\r\n    public speed: number = 0.07;\r\n    public fireTimeout: number = 0;\r\n    public msBetweenRounds: number = 1000;\r\n\r\n    public projectiles: Projectile[] = [];\r\n\r\n    constructor(gl: WebGLRenderingContext, texture: gamesaw.GL.Texture, collider: gamesaw.Geometry.Circle) {\r\n        this.gl = gl;\r\n        this.texture = texture;\r\n        this.collider = collider;\r\n        this.baseSprite = new gamesaw.GL.Sprite(this.texture, 16, 16, [400, 0, 16, 16]);\r\n        this.dirSprite = new gamesaw.GL.Sprite(this.texture, 16, 16, [416, 16, 16, 16]);\r\n        this.direction = new gamesaw.Geometry.Vector2(0.0, 0.0);\r\n        this.msBetweenRounds = Math.random() * 1000 - 500 + 1000;\r\n    }\r\n\r\n    public update(delta: number, player: Player): void {\r\n        this.direction = this.seek(new gamesaw.Geometry.Vector2(player.collider.pos.x, player.collider.pos.y));\r\n        this.updateMovement(this.direction, delta);\r\n\r\n        this.fireTimeout += delta;\r\n\r\n        if (this.fireTimeout > this.msBetweenRounds) {\r\n            this.fireTimeout = 0;\r\n            this.projectiles.push(new Projectile(this.gl, this.texture, new gamesaw.Geometry.Circle(this.collider.pos.x, this.collider.pos.y, 3), 0.6, this.damage, this.direction.copy()));\r\n        }\r\n\r\n        for (let i in this.projectiles) {\r\n            this.projectiles[+i].update(delta);\r\n\r\n            if (this.projectiles[+i].isDead()) {\r\n                this.projectiles.splice(+i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    public render(renderer: gamesaw.GL.Render2d.Renderer2d): void {\r\n        // this.baseSprite.renderScale(renderer, this.collider.pos.x - this.collider.radius, this.collider.pos.y - this.collider.radius, 2);\r\n        this.baseSprite.renderAngleScale(renderer, this.collider.pos.x - this.collider.radius, this.collider.pos.y - this.collider.radius, gamesaw.Utility.radianToDegree(this.direction.angle()), 2);\r\n\r\n        for (let i in this.projectiles) {\r\n            this.projectiles[+i].render(renderer);\r\n        }\r\n    }\r\n\r\n    public getProjectiles(): Projectile[] {\r\n        return this.projectiles;\r\n    }\r\n\r\n    public getCollider(): gamesaw.Geometry.Circle {\r\n        return this.collider;\r\n    }\r\n\r\n    public getWorth(): number {\r\n        return this.worth;\r\n    }\r\n\r\n    public doDamage(damage: number): void {\r\n        this.health -= damage;\r\n\r\n        if (this.health < 0) {\r\n            this.dead = true;\r\n        }\r\n    }\r\n\r\n    public isDead(): boolean {\r\n        return this.dead;\r\n    }\r\n\r\n    private seek(playerPosition: gamesaw.Geometry.Vector2): gamesaw.Geometry.Vector2 {\r\n        let positionVector: gamesaw.Geometry.Vector2 = new gamesaw.Geometry.Vector2(this.collider.pos.x, this.collider.pos.y);\r\n\r\n        return playerPosition.sub(positionVector).normalize();\r\n    }\r\n\r\n    private updateMovement(direction: gamesaw.Geometry.Vector2, delta: number): void {\r\n        let position: gamesaw.Geometry.Vector2 = new gamesaw.Geometry.Vector2(this.collider.pos.x, this.collider.pos.y);\r\n\r\n        direction = direction.scale(this.speed * delta);\r\n        position = position.add(direction);\r\n\r\n        this.collider.setX(position.x);\r\n        this.collider.setY(position.y);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/enemy.ts","import * as gamesaw from '../../gamesaw-ts/src/index';\r\nimport { Player } from './player';\r\nimport { Enemy } from './enemy';\r\nimport { Projectile } from './projectile';\r\n\r\ninterface Spawn {\r\n    type: string;\r\n    id: number;\r\n    collider: gamesaw.Geometry.AABB;\r\n    sprite: gamesaw.GL.Sprite;\r\n}\r\n\r\nexport class Game {\r\n    private gl: WebGLRenderingContext;\r\n    private application: gamesaw.Application;\r\n    private scene: gamesaw.Scene;\r\n    private mouse: gamesaw.Input.Mouse;\r\n    private keyboard: gamesaw.Input.Keyboard;\r\n    public width: number = 800;\r\n    public height: number = 600;\r\n    public targetFps: number = 60;\r\n    public renderer: gamesaw.GL.Render2d.Renderer2d;\r\n    public fontRenderer: gamesaw.GL.Font.FontRenderer;\r\n    public backgroundColor: gamesaw.Graphics.Color = new gamesaw.Graphics.Color(50, 50, 50);\r\n    public texture: gamesaw.GL.Texture;\r\n    public font: gamesaw.GL.Font.Font;\r\n    public backgroundSprite: gamesaw.GL.Sprite;\r\n    public healthSprite: gamesaw.GL.Sprite;\r\n    public armorSprite: gamesaw.GL.Sprite;\r\n    public player: Player;\r\n    public enemies: Enemy[] = [];\r\n    public splatter: gamesaw.Geometry.Point[] = [];\r\n    public paused: boolean = true;\r\n    public showGameover: boolean = false;\r\n    public showStartGame: boolean = true;\r\n\r\n    public killCount: number = 0;\r\n    public startTimeout: number = 0;\r\n\r\n    public gameoverSprite: gamesaw.GL.Sprite;\r\n    public getPsychedSprite: gamesaw.GL.Sprite;\r\n\r\n    // Powerup & Weapon spawn\r\n    public spawns: Spawn[] = [];\r\n    public spawnTimeout: number = 0;\r\n    public spawnTime: number = 10000;\r\n\r\n    public spawnSprites: gamesaw.GL.Sprite[] = [];\r\n    public splatterSprite: gamesaw.GL.Sprite;\r\n\r\n    // Enemy spawn\r\n    public enemyPoints: gamesaw.Geometry.Point[] = [\r\n        new gamesaw.Geometry.Point(400, 100),\r\n        new gamesaw.Geometry.Point(50, 350),\r\n        new gamesaw.Geometry.Point(750, 350),\r\n        new gamesaw.Geometry.Point(400, 560)\r\n    ];\r\n    public enemyTimeout: number = 0;\r\n    public enemyTime: number = 1000;\r\n\r\n    constructor() {\r\n        let that = this;\r\n        this.application = new gamesaw.Application(this.width, this.height, this.targetFps);\r\n        this.scene = this.application.sceneManager.addScene('menu');\r\n        this.scene.add3dSurface('main');\r\n\r\n        this.scene.render = (delta: number) => {\r\n            that.render(delta);\r\n        };\r\n\r\n        this.scene.update = (delta: number) => {\r\n            that.update(delta);\r\n        };\r\n\r\n        this.gl = this.scene.getContext('main') as WebGLRenderingContext;\r\n        let bgCol = this.backgroundColor.getRGBAFloat();\r\n        this.gl.clearColor(bgCol[0], bgCol[1], bgCol[2], 1);\r\n\r\n        this.mouse = gamesaw.Input.Mouse.getInstance();\r\n        this.keyboard = gamesaw.Input.Keyboard.getInstance();\r\n        this.mouse.init();\r\n\r\n        this.renderer = new gamesaw.GL.Render2d.Renderer2d(this.gl);\r\n\r\n        this.texture = new gamesaw.GL.Texture(this.gl, '../assets/img/texture.png');\r\n        this.texture.width = 512;\r\n        this.texture.height = 512;\r\n        this.backgroundSprite = new gamesaw.GL.Sprite(this.texture, 400, 300, [0, 0, 400, 300]);\r\n        this.healthSprite = new gamesaw.GL.Sprite(this.texture, 7, 7, [432, 0, 7, 7]);\r\n        this.armorSprite = new gamesaw.GL.Sprite(this.texture, 7, 7, [440, 0, 7, 7]);\r\n        this.gameoverSprite = new gamesaw.GL.Sprite(this.texture, 160, 32, [0, 304, 160, 32]);\r\n        this.getPsychedSprite = new gamesaw.GL.Sprite(this.texture, 160, 32, [0, 340, 160, 32]);\r\n        this.splatterSprite = new gamesaw.GL.Sprite(this.texture, 16, 16, [432, 16, 16, 16]);\r\n\r\n        this.spawnSprites = [\r\n            new gamesaw.GL.Sprite(this.texture, 32, 16, [400, 64, 32, 16]), // Shotgun\r\n            new gamesaw.GL.Sprite(this.texture, 32, 16, [400, 48, 32, 16]), // Minigun\r\n            new gamesaw.GL.Sprite(this.texture, 16, 16, [400, 32, 16, 16]), // Healthpack Mini\r\n            new gamesaw.GL.Sprite(this.texture, 16, 16, [416, 32, 16, 16]), // Healthpack Med\r\n            new gamesaw.GL.Sprite(this.texture, 16, 16, [432, 32, 16, 16]), // Healthpack Max\r\n            new gamesaw.GL.Sprite(this.texture, 16, 16, [448, 32, 16, 16]), // Speedboost\r\n            new gamesaw.GL.Sprite(this.texture, 16, 16, [464, 32, 16, 16]) // Quad damage\r\n        ];\r\n\r\n        this.fontRenderer = new gamesaw.GL.Font.FontRenderer(this.gl);\r\n        this.font = new gamesaw.GL.Font.Font(this.gl, '../assets/data/default.xml');\r\n\r\n        this.player = new Player(this.gl, this.texture);\r\n\r\n        this.application.init();\r\n    }\r\n\r\n    public update(delta: number) {\r\n        let key = gamesaw.Input.Key;\r\n\r\n        if (this.keyboard.keys[key['PAUSE']] || this.keyboard.keys[key['P']]) {\r\n            this.paused = !this.paused;\r\n            this.keyboard.keys[key['PAUSE']] = false;\r\n            this.keyboard.keys[key['P']] = false;\r\n        }\r\n\r\n        if (!this.paused) {\r\n            this.player.update(delta);\r\n            this.updateEnemies(delta);\r\n            this.updatePowerupWeaponSpawn(delta);\r\n\r\n            for (let s in this.spawns) {\r\n                if (gamesaw.Geometry.intersects(this.player.collider, this.spawns[+s].collider)) {\r\n                    if (this.spawns[+s].type === 'weapon') {\r\n                        this.player.applyWeapon(this.spawns[+s].id, this.spawns[+s].sprite);\r\n                    } else {\r\n                        this.player.applyPowerUp(this.spawns[+s].id, this.spawns[+s].sprite);\r\n                    }\r\n                    this.spawns.splice(+s, 1);\r\n                }\r\n            }\r\n\r\n            this.checkProjectileCollision();\r\n\r\n            if (this.player.health < 0) {\r\n                this.paused = true;\r\n                this.showGameover = true;\r\n                this.startTimeout = 1000;\r\n            }\r\n        }\r\n\r\n        if (this.showGameover) {\r\n            this.startTimeout -= delta;\r\n\r\n            if (this.mouse.button[0] && this.startTimeout < 0) {\r\n                this.resetGame();\r\n            }\r\n        }\r\n\r\n        if (this.showStartGame) {\r\n            if (this.mouse.button[0]) {\r\n                this.showStartGame = false;\r\n                this.paused = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    public render(delta: number) {\r\n        this.scene.clear('main');\r\n\r\n        this.backgroundSprite.renderScale(this.renderer, 0, 0, 2);\r\n\r\n        for (let gore of this.splatter) {\r\n            this.splatterSprite.renderScale(this.renderer, gore.x, gore.y, 2);\r\n        }\r\n\r\n        this.player.render(this.renderer);\r\n\r\n        for (let e in this.enemies) {\r\n            this.enemies[+e].render(this.renderer);\r\n        }\r\n\r\n        for (let s in this.spawns) {\r\n            let collider = this.spawns[+s].collider;\r\n            this.spawns[+s].sprite.renderScale(this.renderer, collider.pos.x - collider.halfWidth, collider.pos.y - collider.halfHeight, 2);\r\n        }\r\n\r\n        this.renderStatus();\r\n\r\n        this.renderer.execute();\r\n        this.fontRenderer.execute();\r\n    }\r\n\r\n    public renderStatus(): void {\r\n        let healthWidth = 70 * (this.player.health / this.player.maxHealth);\r\n        let armorWidth = 70 * (this.player.armor / this.player.maxArmor);\r\n\r\n        if (armorWidth < 0) {\r\n            armorWidth = 0;\r\n        }\r\n\r\n        if (healthWidth < 0) {\r\n            healthWidth = 0;\r\n        }\r\n\r\n        this.healthSprite.width = healthWidth;\r\n        this.armorSprite.width = armorWidth;\r\n\r\n        this.healthSprite.renderScale(this.renderer, 450, 10, 2);\r\n        this.armorSprite.renderScale(this.renderer, 450, 38, 2);\r\n\r\n        this.font.align = 2;\r\n        this.font.drawString(this.fontRenderer, this.player.getScore(), 770, 16);\r\n\r\n        // 44, 6\r\n        this.font.align = 1;\r\n        this.font.drawString(this.fontRenderer, this.killCount.toString(), 88, 8);\r\n        // 180, 7\r\n        this.font.drawString(this.fontRenderer, this.player.getAmmo(), 360, 10);\r\n\r\n        if (this.showGameover) {\r\n            this.gameoverSprite.renderScale(this.renderer, 240, 176, 2);\r\n        }\r\n\r\n        if (this.showStartGame) {\r\n            this.getPsychedSprite.renderScale(this.renderer, 240, 176, 2);\r\n        }\r\n    }\r\n\r\n    public updatePowerupWeaponSpawn(delta: number): void {\r\n        this.spawnTimeout += delta;\r\n        if (this.spawnTimeout > this.spawnTime) {\r\n            this.spawnTimeout = 0;\r\n            let weaponSpawn: boolean = (Math.random() * 10 > 7);\r\n\r\n            if (weaponSpawn) {\r\n                let weaponType: number = (Math.random() * 10 > 7) ? 1 : 2;\r\n                let x: number = (Math.random() * 600) + 100;\r\n                let y: number = (Math.random() * 400) + 150;\r\n                let sprite = this.spawnSprites[weaponType - 1];\r\n                this.spawns.push({type: 'weapon', id: weaponType, collider: new gamesaw.Geometry.AABB(x, y, 32, 16), sprite: sprite});\r\n            } else {\r\n                let powerupType: number = Math.floor(Math.random() * 5);\r\n                let x: number = (Math.random() * 600) + 100;\r\n                let y: number = (Math.random() * 400) + 150;\r\n                let sprite: gamesaw.GL.Sprite;\r\n\r\n                switch (powerupType) {\r\n                    case 0:\r\n                    sprite = this.spawnSprites[2];\r\n                    break;\r\n                    case 1:\r\n                    sprite = this.spawnSprites[3];\r\n                    break;\r\n                    case 2:\r\n                    sprite = this.spawnSprites[4];\r\n                    break;\r\n                    case 3:\r\n                    sprite = this.spawnSprites[5];\r\n                    break;\r\n                    case 4:\r\n                    sprite = this.spawnSprites[6];\r\n                    break;\r\n                    case 5:\r\n                    sprite = this.spawnSprites[2];\r\n                    break;\r\n                }\r\n                this.spawns.push({type: 'powerup', id: powerupType, collider: new gamesaw.Geometry.AABB(x, y, 16, 16), sprite: sprite});\r\n            }\r\n        }\r\n    }\r\n\r\n    public updateEnemies(delta: number) {\r\n        for (let e in this.enemies) {\r\n            this.enemies[+e].update(delta, this.player);\r\n\r\n            if (this.enemies[+e].isDead()) {\r\n                this.killCount += 1;\r\n                this.player.addScore(this.enemies[+e].getWorth());\r\n                this.splatter.push(new gamesaw.Geometry.Point(this.enemies[+e].collider.pos.x - 16, this.enemies[+e].collider.pos.y - 16));\r\n                this.enemies.splice(+e, 1);\r\n            }\r\n        }\r\n\r\n        this.enemyTimeout += delta;\r\n\r\n        if (this.enemyTimeout > this.enemyTime) {\r\n            this.enemyTimeout = 0;\r\n            let point = this.enemyPoints[Math.floor(Math.random() * 4)];\r\n            this.enemies.push(new Enemy(this.gl, this.texture, new gamesaw.Geometry.Circle(point.x, point.y, 16)));\r\n        }\r\n    }\r\n\r\n    public checkProjectileCollision(): void {\r\n        let playerProjectiles: Projectile[] = this.player.getProjectiles();\r\n        let playerCollider = this.player.getCollider();\r\n\r\n        for (let i in playerProjectiles) {\r\n            for (let e in this.enemies) {\r\n                let enemyCollider = this.enemies[+e].getCollider();\r\n\r\n                if (gamesaw.Geometry.intersects(playerProjectiles[+i].collider, enemyCollider)) {\r\n                    this.enemies[+e].doDamage(playerProjectiles[+i].damage);\r\n                    playerProjectiles[+i].dead = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let e in this.enemies) {\r\n            let enemyProjectiles: Projectile[] = this.enemies[+e].projectiles;\r\n\r\n            for (let i in enemyProjectiles) {\r\n                if (gamesaw.Geometry.intersects(enemyProjectiles[+i].collider, playerCollider)) {\r\n                    this.player.doDamage(enemyProjectiles[+i].damage);\r\n                    enemyProjectiles[+i].dead = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public resetGame(): void {\r\n        this.player = new Player(this.gl, this.texture);\r\n        this.spawns = [];\r\n        this.enemies = [];\r\n        this.splatter = [];\r\n        this.killCount = 0;\r\n        this.spawnTimeout = 0;\r\n        this.enemyTimeout = 0;\r\n\r\n        this.showGameover = false;\r\n        this.paused = false;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/index.ts","import * as gamesaw from '../../gamesaw-ts/src/index';\r\nimport { Projectile } from './projectile';\r\nimport { Weapon } from './weapon';\r\nimport { Powerup } from './powerup';\r\n\r\nexport class Player {\r\n    private gl: WebGLRenderingContext;\r\n    public collider: gamesaw.Geometry.Circle;\r\n    public texture: gamesaw.GL.Texture;\r\n    public baseSprite: gamesaw.GL.Sprite;\r\n    public dirSprite: gamesaw.GL.Sprite;\r\n    private mouse: gamesaw.Input.Mouse;\r\n    private keyboard: gamesaw.Input.Keyboard;\r\n\r\n    public health: number = 100;\r\n    public maxHealth: number = 100;\r\n    public armor: number = 50;\r\n    public maxArmor: number = 100;\r\n    public score: number = 0;\r\n    public weapon: Weapon;\r\n    public fireCooldown: number = 0;\r\n    public powerup: Powerup;\r\n    public speedBoost: boolean = false;\r\n    public quadDamage: boolean = false;\r\n\r\n    public direction: gamesaw.Geometry.Vector2;\r\n    public speed: number = 0.2;\r\n\r\n    public projectiles: Projectile[] = [];\r\n\r\n    constructor(gl: WebGLRenderingContext, texture: gamesaw.GL.Texture) {\r\n        this.gl = gl;\r\n        this.texture = texture;\r\n        this.collider = new gamesaw.Geometry.Circle(400, 300, 16);\r\n        this.baseSprite = new gamesaw.GL.Sprite(this.texture, 16, 16, [416, 0, 16, 16]);\r\n        this.dirSprite = new gamesaw.GL.Sprite(this.texture, 16, 16, [416, 16, 16, 16]);\r\n        this.direction = new gamesaw.Geometry.Vector2(0.0, 0.0);\r\n        this.weapon = new Weapon();\r\n        this.weapon.setWeapon(0, null);\r\n\r\n        this.mouse = gamesaw.Input.Mouse.getInstance();\r\n        this.keyboard = gamesaw.Input.Keyboard.getInstance();\r\n    }\r\n\r\n    public update(delta: number): void {\r\n        this.calculateDirection();\r\n\r\n        this.updateMovement(this.handleInput(delta), delta);\r\n\r\n        if (this.powerup) {\r\n            this.powerup.update(delta);\r\n            if (!this.powerup.isActive()) {\r\n                this.powerup = null;\r\n                this.speedBoost = false;\r\n                this.quadDamage = false;\r\n            }\r\n        }\r\n\r\n        for (let i in this.projectiles) {\r\n            this.projectiles[+i].update(delta);\r\n\r\n            if (this.projectiles[+i].isDead()) {\r\n                this.projectiles.splice(+i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    public render(renderer: gamesaw.GL.Render2d.Renderer2d): void {\r\n        // this.baseSprite.renderScale(renderer, this.collider.pos.x - this.collider.radius, this.collider.pos.y - this.collider.radius, 2);\r\n        this.baseSprite.renderAngleScale(renderer, this.collider.pos.x - this.collider.radius, this.collider.pos.y - this.collider.radius, gamesaw.Utility.radianToDegree(this.direction.angle()), 2);\r\n\r\n        if (this.powerup) {\r\n            this.powerup.render(renderer);\r\n        }\r\n\r\n        if (this.weapon.type !== 0) {\r\n            this.weapon.render(renderer);\r\n        }\r\n\r\n        for (let i in this.projectiles) {\r\n            this.projectiles[+i].render(renderer);\r\n        }\r\n    }\r\n\r\n    public getProjectiles(): Projectile[] {\r\n        return this.projectiles;\r\n    }\r\n\r\n    public getCollider(): gamesaw.Geometry.Circle {\r\n        return this.collider;\r\n    }\r\n\r\n    public addScore(score: number): void {\r\n        this.score += score;\r\n    }\r\n\r\n    public getScore(): string {\r\n        return this.score.toString();\r\n    }\r\n\r\n    public getAmmo(): string {\r\n        return this.weapon.ammo.toString();\r\n    }\r\n\r\n    public doDamage(damage: number): void {\r\n        this.health -= damage;\r\n    }\r\n\r\n    public applyWeapon(type: number, sprite: gamesaw.GL.Sprite): void {\r\n        this.weapon.setWeapon(type, sprite);\r\n    }\r\n\r\n    public applyPowerUp(type: number, sprite: gamesaw.GL.Sprite): void {\r\n        switch (type) {\r\n            case 0:\r\n            this.health += 25;\r\n            break;\r\n            case 1:\r\n            this.health += 50;\r\n            break;\r\n            case 2:\r\n            this.health += 100;\r\n            break;\r\n            case 3:\r\n            this.speedBoost = true;\r\n            this.quadDamage = false;\r\n            this.powerup = new Powerup(sprite, 20000);\r\n            break;\r\n            case 4:\r\n            this.quadDamage = true;\r\n            this.speedBoost = false;\r\n            this.powerup = new Powerup(sprite, 10000);\r\n            break;\r\n        }\r\n\r\n        if (this.health > 100) {\r\n            this.health = 100;\r\n        }\r\n    }\r\n\r\n    private calculateDirection(): void {\r\n        let mouseVector: gamesaw.Geometry.Vector2 = new gamesaw.Geometry.Vector2(this.mouse.x, this.mouse.y);\r\n        let positionVector: gamesaw.Geometry.Vector2 = new gamesaw.Geometry.Vector2(this.collider.pos.x, this.collider.pos.y);\r\n\r\n        this.direction = mouseVector.sub(positionVector).normalize();\r\n    }\r\n\r\n    private handleInput(delta: number): gamesaw.Geometry.Vector2 {\r\n        let key = gamesaw.Input.Key;\r\n        let directionVector: gamesaw.Geometry.Vector2 = new gamesaw.Geometry.Vector2(0.0, 0.0);\r\n\r\n        if (this.keyboard.keys[key['W']]) {\r\n            directionVector = directionVector.add(new gamesaw.Geometry.Vector2(0.0, -1.0));\r\n        }\r\n\r\n        if (this.keyboard.keys[key['A']]) {\r\n            directionVector = directionVector.add(new gamesaw.Geometry.Vector2(-1.0, 0.0));\r\n        }\r\n\r\n        if (this.keyboard.keys[key['S']]) {\r\n            directionVector = directionVector.add(new gamesaw.Geometry.Vector2(0.0, 1.0));\r\n        }\r\n\r\n        if (this.keyboard.keys[key['D']]) {\r\n            directionVector = directionVector.add(new gamesaw.Geometry.Vector2(1.0, 0.0));\r\n        }\r\n\r\n        if (this.mouse.button[0]) {\r\n            this.fireWeapon(delta);\r\n        }\r\n\r\n        return directionVector.normalize();\r\n    }\r\n\r\n    private fireWeapon(delta: number) {\r\n        let canFire = true;\r\n        let damage = this.weapon.damage;\r\n\r\n        if (this.quadDamage) {\r\n            damage = damage * 4;\r\n        }\r\n\r\n        if (!this.weapon.autoFire) {\r\n            this.mouse.button[0] = false;\r\n        } else {\r\n            this.fireCooldown -= delta;\r\n\r\n            if (this.fireCooldown > 0) {\r\n                canFire = false;\r\n            }\r\n        }\r\n\r\n        switch (this.weapon.type) {\r\n            case 0:\r\n            this.projectiles.push(new Projectile(this.gl, this.texture, new gamesaw.Geometry.Circle(this.collider.pos.x, this.collider.pos.y, 3), 0.6, damage, this.direction.copy()));\r\n            break;\r\n            case 1:\r\n            this.projectiles.push(new Projectile(this.gl, this.texture, new gamesaw.Geometry.Circle(this.collider.pos.x, this.collider.pos.y, 3), 0.6, damage, this.direction.rotate(-0.125)));\r\n            this.projectiles.push(new Projectile(this.gl, this.texture, new gamesaw.Geometry.Circle(this.collider.pos.x, this.collider.pos.y, 3), 0.6, damage, this.direction.rotate(-0.062)));\r\n            this.projectiles.push(new Projectile(this.gl, this.texture, new gamesaw.Geometry.Circle(this.collider.pos.x, this.collider.pos.y, 3), 0.6, damage, this.direction.copy()));\r\n            this.projectiles.push(new Projectile(this.gl, this.texture, new gamesaw.Geometry.Circle(this.collider.pos.x, this.collider.pos.y, 3), 0.6, damage, this.direction.rotate(0.062)));\r\n            this.projectiles.push(new Projectile(this.gl, this.texture, new gamesaw.Geometry.Circle(this.collider.pos.x, this.collider.pos.y, 3), 0.6, damage, this.direction.rotate(0.125)));\r\n            this.weapon.useAmmo();\r\n            break;\r\n            case 2:\r\n            if (canFire) {\r\n                this.projectiles.push(new Projectile(this.gl, this.texture, new gamesaw.Geometry.Circle(this.collider.pos.x, this.collider.pos.y, 3), 0.6, damage, this.direction.copy()));\r\n                this.weapon.useAmmo();\r\n                this.fireCooldown = 100;\r\n            }\r\n            break;\r\n        }\r\n    }\r\n\r\n    private updateMovement(direction: gamesaw.Geometry.Vector2, delta: number): void {\r\n        let position: gamesaw.Geometry.Vector2 = new gamesaw.Geometry.Vector2(this.collider.pos.x, this.collider.pos.y);\r\n\r\n        if (this.speedBoost) {\r\n            direction = direction.scale((this.speed * 2) * delta);\r\n        } else {\r\n            direction = direction.scale(this.speed * delta);\r\n        }\r\n\r\n        position = position.add(direction);\r\n\r\n        if (position.y > 530) {\r\n            position.y = 530;\r\n        }\r\n\r\n        if (position.y < 140) {\r\n            position.y = 140;\r\n        }\r\n\r\n        if (position.x < 80) {\r\n            position.x = 80;\r\n        }\r\n\r\n        if (position.x > 720) {\r\n            position.x = 720;\r\n        }\r\n\r\n        this.collider.setX(position.x);\r\n        this.collider.setY(position.y);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/player.ts","import * as gamesaw from '../../gamesaw-ts/src/index';\r\n\r\nconst Powerups = [\r\n    {\r\n        type: 0,\r\n        name: 'Small medkit',\r\n        value: 25\r\n    },\r\n    {\r\n        type: 1,\r\n        name: 'Medium medkit',\r\n        value: 50\r\n    },\r\n    {\r\n        type: 2,\r\n        name: 'Super health',\r\n        value: 100\r\n    },\r\n    {\r\n        type: 3,\r\n        name: 'Speed',\r\n        value: 2\r\n    },\r\n    {\r\n        type: 4,\r\n        name: 'Quad damage',\r\n        value: 4\r\n    }\r\n];\r\n\r\nexport class Powerup {\r\n    private gl: WebGLRenderingContext;\r\n    private texture: gamesaw.GL.Texture;\r\n    public sprite: gamesaw.GL.Sprite;\r\n    public name: string;\r\n    public type: number;\r\n    public value: number;\r\n    public timeout: number;\r\n    public active: boolean;\r\n\r\n    constructor(sprite: gamesaw.GL.Sprite, time: number) {\r\n        this.sprite = sprite;\r\n        this.timeout = time;\r\n        this.active = true;\r\n    }\r\n\r\n    public update(delta: number): void {\r\n        this.timeout -= delta;\r\n        if (this.timeout < 0) {\r\n            this.active = false;\r\n        }\r\n    }\r\n\r\n    public render(renderer: gamesaw.GL.Render2d.Renderer2d): void {\r\n        this.sprite.renderScale(renderer, 143, 10, 2);\r\n    }\r\n\r\n    public isActive(): boolean {\r\n        return this.active;\r\n    }\r\n\r\n    public getRemainingTime(): number {\r\n        return this.timeout;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/powerup.ts","import * as gamesaw from '../../gamesaw-ts/src/index';\r\n\r\nconst Weapons = [\r\n    {\r\n        type: 0,\r\n        name: 'Widowmaker',\r\n        damage: 5,\r\n        autoFire: false,\r\n        melee: false,\r\n        startAmmo: 0\r\n    },\r\n    {\r\n        type: 1,\r\n        name: 'Shotgun',\r\n        damage: 10,\r\n        autoFire: false,\r\n        melee: false,\r\n        startAmmo: 20\r\n    },\r\n    {\r\n        type: 2,\r\n        name: 'Minigun',\r\n        damage: 5,\r\n        autoFire: true,\r\n        melee: false,\r\n        startAmmo: 100\r\n    }\r\n];\r\n\r\nexport class Weapon {\r\n    private gl: WebGLRenderingContext;\r\n    public sprite: gamesaw.GL.Sprite;\r\n    public type: number;\r\n    public name: string;\r\n    public damage: number;\r\n    public autoFire: boolean;\r\n    public melee: boolean;\r\n    public startAmmo: number;\r\n    public ammo: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    public setWeapon(type: number, sprite: gamesaw.GL.Sprite) {\r\n        let data = Weapons[type];\r\n        this.type = data.type;\r\n        this.name = data.name;\r\n        this.damage = data.damage;\r\n        this.autoFire = data.autoFire;\r\n        this.melee = data.melee;\r\n        this.startAmmo = data.startAmmo;\r\n        this.ammo = data.startAmmo;\r\n        this.sprite = sprite;\r\n    }\r\n\r\n    public useAmmo() {\r\n        this.ammo -= 1;\r\n\r\n        if (this.ammo === 0) {\r\n            this.setWeapon(0, null);\r\n        }\r\n    }\r\n\r\n    public render(renderer: gamesaw.GL.Render2d.Renderer2d) {\r\n        this.sprite.renderScale(renderer, 220, 12, 2);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/weapon.ts"],"sourceRoot":""}